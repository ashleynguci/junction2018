{
	"info": {
		"_postman_id": "b1ba358d-31a1-48c8-9d05-a5254b329385",
		"name": "DNA-C Platform Intent API Junction",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "General",
					"item": [
						{
							"name": "Authentication API",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a02a7825-679a-4e79-905a-1e2228f27284",
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"token\", data.Token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}/dna/system/api/v1/auth/token",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"path": [
										"dna",
										"system",
										"api",
										"v1",
										"auth",
										"token"
									]
								},
								"description": "API to obtain an access token. The token obtained using this API is required to be set as value to the X-Auth-Token HTTP Header for all API calls to Cisco DNA Center.\n\n###### Response Model\n- root: (map, optional)\n  - Token: (string, optional)  Token"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{password}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{username}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}/dna/system/api/v1/auth/token",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"path": [
												"dna",
												"system",
												"api",
												"v1",
												"auth",
												"token"
											]
										},
										"description": "API to obtain an access token. The token obtained using this API is required to be set as value to the X-Auth-Token HTTP Header for all API calls to Cisco DNA Center.\n\n###### Response Model\n- root: (map, optional)\n  - Token: (string, optional)  Token"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"Token\": \"string\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Know Your Network",
			"item": [
				{
					"name": "Clients",
					"item": [
						{
							"name": "Get Client Detail",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "__runsync",
										"value": "true",
										"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
									},
									{
										"key": "__timeout",
										"value": "30",
										"description": "(number, required) If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution"
									},
									{
										"key": "__persistbapioutput",
										"value": "true",
										"description": "(string, required) Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/client-detail?timestamp&macAddress",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"client-detail"
									],
									"query": [
										{
											"key": "timestamp",
											"value": null,
											"description": "(string, required) Epoch time(in milliseconds) when the Client health data is required"
										},
										{
											"key": "macAddress",
											"value": null,
											"description": "(string, required) MAC Address of the client"
										}
									]
								},
								"description": "Returns detailed Client information retrieved by Mac Address for any given point of time. \n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - detail: (map, optional)\n      - id: (string, optional) Id\n      - connectionStatus: (string, optional) Connection Status\n      - hostType: (string, optional) Host Type\n      - userId: (string, optional) User Id\n      - hostName: (string, optional) Host Name\n      - hostOs: (string, optional) Host Os\n      - hostVersion: (string, optional) Host Version\n      - subType: (string, optional) Sub Type\n      - lastUpdated: (string, optional) Last Updated\n      - healthScore: (array[map], optional)\n        - healthType: (string, optional) Health Type\n        - reason: (string, optional) Reason\n        - score: (string, optional) Score\n      - hostMac: (string, optional) Host Mac\n      - hostIpV4: (string, optional) Host Ip V4\n      - hostIpV6: (array[string], optional)\n      - authType: (string, optional) Auth Type\n      - vlanId: (string, optional) Vlan Id\n      - ssid: (string, optional) Ssid\n      - frequency: (string, optional) Frequency\n      - channel: (string, optional) Channel\n      - apGroup: (string, optional) Ap Group\n      - location: (string, optional) Location\n      - clientConnection: (string, optional) Client Connection\n      - connectedDevice: (array[string], optional)\n      - issueCount: (string, optional) Issue Count\n      - rssi: (string, optional) Rssi\n      - avgRssi: (string, optional) Avg Rssi\n      - snr: (string, optional) Snr\n      - avgSnr: (string, optional) Avg Snr\n      - dataRate: (string, optional) Data Rate\n      - txBytes: (string, optional) Tx Bytes\n      - rxBytes: (string, optional) Rx Bytes\n      - dnsSuccess: (string, optional) Dns Success\n      - dnsFailure: (string, optional) Dns Failure\n      - onboarding: (map, optional)\n        - averageRunDuration: (string, optional) Average Run Duration\n        - maxRunDuration: (string, optional) Max Run Duration\n        - averageAssocDuration: (string, optional) Average Assoc Duration\n        - maxAssocDuration: (string, optional) Max Assoc Duration\n        - averageAuthDuration: (string, optional) Average Auth Duration\n        - maxAuthDuration: (string, optional) Max Auth Duration\n        - averageDhcpDuration: (string, optional) Average Dhcp Duration\n        - maxDhcpDuration: (string, optional) Max Dhcp Duration\n        - aaaServerIp: (string, optional) Aaa Server Ip\n        - dhcpServerIp: (string, optional) Dhcp Server Ip\n        - authDoneTime: (string, optional) Auth Done Time\n        - assocDoneTime: (string, optional) Assoc Done Time\n        - dhcpDoneTime: (string, optional) Dhcp Done Time\n      - onboardingTime: (string, optional) Onboarding Time\n      - port: (string, optional) Port\n    - connectionInfo: (map, optional)\n      - hostType: (string, optional) Host Type\n      - nwDeviceName: (string, optional) Nw Device Name\n      - nwDeviceMac: (string, optional) Nw Device Mac\n      - protocol: (string, optional) Protocol\n      - band: (string, optional) Band\n      - spatialStream: (string, optional) Spatial Stream\n      - channel: (string, optional) Channel\n      - channelWidth: (string, optional) Channel Width\n      - wmm: (string, optional) Wmm\n      - uapsd: (string, optional) Uapsd\n      - timestamp: (string, optional) Timestamp\n    - topology: (map, optional)\n      - nodes: (array[map], optional)\n        - role: (string, optional) Role\n        - name: (string, optional) Name\n        - id: (string, optional) Id\n        - description: (string, optional) Description\n        - deviceType: (string, optional) Device Type\n        - platformId: (string, optional) Platform Id\n        - family: (string, optional) Family\n        - ip: (string, optional) Ip\n        - softwareVersion: (string, optional) Software Version\n        - userId: (string, optional) User Id\n        - nodeType: (string, optional) Node Type\n        - radioFrequency: (string, optional) Radio Frequency\n        - clients: (string, optional) Clients\n        - count: (string, optional) Count\n        - healthScore: (string, optional) Health Score\n        - level: (string, optional) Level\n        - fabricGroup: (string, optional) Fabric Group\n        - connectedDevice: (string, optional) Connected Device\n      - links: (array[map], optional)\n        - source: (string, optional) Source\n        - linkStatus: (string, optional) Link Status\n        - label: (array[string], optional)\n        - target: (string, optional) Target\n        - id: (string, optional) Id\n        - portUtilization: (string, optional) Port Utilization"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "__runsync",
												"value": "true",
												"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
											},
											{
												"key": "__timeout",
												"value": "30",
												"description": "(number, required) If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution"
											},
											{
												"key": "__persistbapioutput",
												"value": "true",
												"description": "(string, required) Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/client-detail?timestamp&macAddress",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"client-detail"
											],
											"query": [
												{
													"key": "timestamp",
													"value": null,
													"description": "(string, required) Epoch time(in milliseconds) when the Client health data is required"
												},
												{
													"key": "macAddress",
													"value": null,
													"description": "(string, required) MAC Address of the client"
												}
											]
										},
										"description": "Returns detailed Client information retrieved by Mac Address for any given point of time. \n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - detail: (map, optional)\n      - id: (string, optional) Id\n      - connectionStatus: (string, optional) Connection Status\n      - hostType: (string, optional) Host Type\n      - userId: (string, optional) User Id\n      - hostName: (string, optional) Host Name\n      - hostOs: (string, optional) Host Os\n      - hostVersion: (string, optional) Host Version\n      - subType: (string, optional) Sub Type\n      - lastUpdated: (string, optional) Last Updated\n      - healthScore: (array[map], optional)\n        - healthType: (string, optional) Health Type\n        - reason: (string, optional) Reason\n        - score: (string, optional) Score\n      - hostMac: (string, optional) Host Mac\n      - hostIpV4: (string, optional) Host Ip V4\n      - hostIpV6: (array[string], optional)\n      - authType: (string, optional) Auth Type\n      - vlanId: (string, optional) Vlan Id\n      - ssid: (string, optional) Ssid\n      - frequency: (string, optional) Frequency\n      - channel: (string, optional) Channel\n      - apGroup: (string, optional) Ap Group\n      - location: (string, optional) Location\n      - clientConnection: (string, optional) Client Connection\n      - connectedDevice: (array[string], optional)\n      - issueCount: (string, optional) Issue Count\n      - rssi: (string, optional) Rssi\n      - avgRssi: (string, optional) Avg Rssi\n      - snr: (string, optional) Snr\n      - avgSnr: (string, optional) Avg Snr\n      - dataRate: (string, optional) Data Rate\n      - txBytes: (string, optional) Tx Bytes\n      - rxBytes: (string, optional) Rx Bytes\n      - dnsSuccess: (string, optional) Dns Success\n      - dnsFailure: (string, optional) Dns Failure\n      - onboarding: (map, optional)\n        - averageRunDuration: (string, optional) Average Run Duration\n        - maxRunDuration: (string, optional) Max Run Duration\n        - averageAssocDuration: (string, optional) Average Assoc Duration\n        - maxAssocDuration: (string, optional) Max Assoc Duration\n        - averageAuthDuration: (string, optional) Average Auth Duration\n        - maxAuthDuration: (string, optional) Max Auth Duration\n        - averageDhcpDuration: (string, optional) Average Dhcp Duration\n        - maxDhcpDuration: (string, optional) Max Dhcp Duration\n        - aaaServerIp: (string, optional) Aaa Server Ip\n        - dhcpServerIp: (string, optional) Dhcp Server Ip\n        - authDoneTime: (string, optional) Auth Done Time\n        - assocDoneTime: (string, optional) Assoc Done Time\n        - dhcpDoneTime: (string, optional) Dhcp Done Time\n      - onboardingTime: (string, optional) Onboarding Time\n      - port: (string, optional) Port\n    - connectionInfo: (map, optional)\n      - hostType: (string, optional) Host Type\n      - nwDeviceName: (string, optional) Nw Device Name\n      - nwDeviceMac: (string, optional) Nw Device Mac\n      - protocol: (string, optional) Protocol\n      - band: (string, optional) Band\n      - spatialStream: (string, optional) Spatial Stream\n      - channel: (string, optional) Channel\n      - channelWidth: (string, optional) Channel Width\n      - wmm: (string, optional) Wmm\n      - uapsd: (string, optional) Uapsd\n      - timestamp: (string, optional) Timestamp\n    - topology: (map, optional)\n      - nodes: (array[map], optional)\n        - role: (string, optional) Role\n        - name: (string, optional) Name\n        - id: (string, optional) Id\n        - description: (string, optional) Description\n        - deviceType: (string, optional) Device Type\n        - platformId: (string, optional) Platform Id\n        - family: (string, optional) Family\n        - ip: (string, optional) Ip\n        - softwareVersion: (string, optional) Software Version\n        - userId: (string, optional) User Id\n        - nodeType: (string, optional) Node Type\n        - radioFrequency: (string, optional) Radio Frequency\n        - clients: (string, optional) Clients\n        - count: (string, optional) Count\n        - healthScore: (string, optional) Health Score\n        - level: (string, optional) Level\n        - fabricGroup: (string, optional) Fabric Group\n        - connectedDevice: (string, optional) Connected Device\n      - links: (array[map], optional)\n        - source: (string, optional) Source\n        - linkStatus: (string, optional) Link Status\n        - label: (array[string], optional)\n        - target: (string, optional) Target\n        - id: (string, optional) Id\n        - portUtilization: (string, optional) Port Utilization"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"detail\": {\n      \"id\": \"string\",\n      \"connectionStatus\": \"string\",\n      \"hostType\": \"string\",\n      \"userId\": \"string\",\n      \"hostName\": \"string\",\n      \"hostOs\": \"string\",\n      \"hostVersion\": \"string\",\n      \"subType\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"healthScore\": [\n        {\n          \"healthType\": \"string\",\n          \"reason\": \"string\",\n          \"score\": \"string\"\n        }\n      ],\n      \"hostMac\": \"string\",\n      \"hostIpV4\": \"string\",\n      \"hostIpV6\": [\n        \"string\"\n      ],\n      \"authType\": \"string\",\n      \"vlanId\": \"string\",\n      \"ssid\": \"string\",\n      \"frequency\": \"string\",\n      \"channel\": \"string\",\n      \"apGroup\": \"string\",\n      \"location\": \"string\",\n      \"clientConnection\": \"string\",\n      \"connectedDevice\": [\n        \"string\"\n      ],\n      \"issueCount\": \"string\",\n      \"rssi\": \"string\",\n      \"avgRssi\": \"string\",\n      \"snr\": \"string\",\n      \"avgSnr\": \"string\",\n      \"dataRate\": \"string\",\n      \"txBytes\": \"string\",\n      \"rxBytes\": \"string\",\n      \"dnsSuccess\": \"string\",\n      \"dnsFailure\": \"string\",\n      \"onboarding\": {\n        \"averageRunDuration\": \"string\",\n        \"maxRunDuration\": \"string\",\n        \"averageAssocDuration\": \"string\",\n        \"maxAssocDuration\": \"string\",\n        \"averageAuthDuration\": \"string\",\n        \"maxAuthDuration\": \"string\",\n        \"averageDhcpDuration\": \"string\",\n        \"maxDhcpDuration\": \"string\",\n        \"aaaServerIp\": \"string\",\n        \"dhcpServerIp\": \"string\",\n        \"authDoneTime\": \"string\",\n        \"assocDoneTime\": \"string\",\n        \"dhcpDoneTime\": \"string\"\n      },\n      \"onboardingTime\": \"string\",\n      \"port\": \"string\"\n    },\n    \"connectionInfo\": {\n      \"hostType\": \"string\",\n      \"nwDeviceName\": \"string\",\n      \"nwDeviceMac\": \"string\",\n      \"protocol\": \"string\",\n      \"band\": \"string\",\n      \"spatialStream\": \"string\",\n      \"channel\": \"string\",\n      \"channelWidth\": \"string\",\n      \"wmm\": \"string\",\n      \"uapsd\": \"string\",\n      \"timestamp\": \"string\"\n    },\n    \"topology\": {\n      \"nodes\": [\n        {\n          \"role\": \"string\",\n          \"name\": \"string\",\n          \"id\": \"string\",\n          \"description\": \"string\",\n          \"deviceType\": \"string\",\n          \"platformId\": \"string\",\n          \"family\": \"string\",\n          \"ip\": \"string\",\n          \"softwareVersion\": \"string\",\n          \"userId\": \"string\",\n          \"nodeType\": \"string\",\n          \"radioFrequency\": \"string\",\n          \"clients\": \"string\",\n          \"count\": \"string\",\n          \"healthScore\": \"string\",\n          \"level\": \"string\",\n          \"fabricGroup\": \"string\",\n          \"connectedDevice\": \"string\"\n        }\n      ],\n      \"links\": [\n        {\n          \"source\": \"string\",\n          \"linkStatus\": \"string\",\n          \"label\": [\n            \"string\"\n          ],\n          \"target\": \"string\",\n          \"id\": \"string\",\n          \"portUtilization\": \"string\"\n        }\n      ]\n    }\n  }\n}"
								}
							]
						},
						{
							"name": "Get Overall Client Health",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "__runsync",
										"value": "true",
										"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
									},
									{
										"key": "__timeout",
										"value": "30",
										"description": "(number, required) If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution"
									},
									{
										"key": "__persistbapioutput",
										"value": "true",
										"description": "(string, required) Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/client-health?timestamp",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"client-health"
									],
									"query": [
										{
											"key": "timestamp",
											"value": null,
											"description": "(string, required) Epoch time(in milliseconds) when the Client health data is required"
										}
									]
								},
								"description": "Returns Overall Client Health information by Client type (Wired and Wireless) for any given point of time\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - siteId: (string, optional) Site Id\n    - scoreDetail: (array[map], optional)\n      - scoreCategory: (map, optional)\n        - scoreCategory: (string, optional) Score Category\n        - value: (string, optional) Value\n      - scoreValue: (string, optional) Score Value\n      - clientCount: (string, optional) Client Count\n      - clientUniqueCount: (string, optional) Client Unique Count\n      - starttime: (string, optional) Starttime\n      - endtime: (string, optional) Endtime\n      - scoreList: (array[string], optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "__runsync",
												"value": "true",
												"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
											},
											{
												"key": "__timeout",
												"value": "30",
												"description": "(number, required) If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution"
											},
											{
												"key": "__persistbapioutput",
												"value": "true",
												"description": "(string, required) Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/client-health?timestamp",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"client-health"
											],
											"query": [
												{
													"key": "timestamp",
													"value": null,
													"description": "(string, required) Epoch time(in milliseconds) when the Client health data is required"
												}
											]
										},
										"description": "Returns Overall Client Health information by Client type (Wired and Wireless) for any given point of time\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - siteId: (string, optional) Site Id\n    - scoreDetail: (array[map], optional)\n      - scoreCategory: (map, optional)\n        - scoreCategory: (string, optional) Score Category\n        - value: (string, optional) Value\n      - scoreValue: (string, optional) Score Value\n      - clientCount: (string, optional) Client Count\n      - clientUniqueCount: (string, optional) Client Unique Count\n      - starttime: (string, optional) Starttime\n      - endtime: (string, optional) Endtime\n      - scoreList: (array[string], optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"siteId\": \"string\",\n      \"scoreDetail\": [\n        {\n          \"scoreCategory\": {\n            \"scoreCategory\": \"string\",\n            \"value\": \"string\"\n          },\n          \"scoreValue\": \"string\",\n          \"clientCount\": \"string\",\n          \"clientUniqueCount\": \"string\",\n          \"starttime\": \"string\",\n          \"endtime\": \"string\",\n          \"scoreList\": [\n            \"string\"\n          ]\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Devices",
					"item": [
						{
							"name": "Get Device Detail",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "__runsync",
										"value": "true",
										"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
									},
									{
										"key": "__timeout",
										"value": "30",
										"description": "(number, required) If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution"
									},
									{
										"key": "__persistbapioutput",
										"value": "true",
										"description": "(string, required) Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/device-detail?timestamp&searchBy&identifier",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"device-detail"
									],
									"query": [
										{
											"key": "timestamp",
											"value": null,
											"description": "(string, required) Epoch time(in milliseconds) when the device data is required"
										},
										{
											"key": "searchBy",
											"value": null,
											"description": "(string, required) MAC Address or Device Name value or UUID of the network device"
										},
										{
											"key": "identifier",
											"value": null,
											"description": "(string, required) One of keywords : macAddress or uuid or nwDeviceName"
										}
									]
								},
								"description": "Returns detailed Network Device information retrieved by Mac Address, Device Name or UUID for any given point of time. \n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - managementIpAddr: (string, optional) Management Ip Addr\n    - serialNumber: (string, optional) Serial Number\n    - nwDeviceName: (string, optional) Nw Device Name\n    - opState: (string, optional) Op State\n    - platformId: (string, optional) Platform Id\n    - nwDeviceId: (string, optional) Nw Device Id\n    - sysUptime: (string, optional) Sys Uptime\n    - mode: (string, optional) Mode\n    - resetReason: (string, optional) Reset Reason\n    - nwDeviceRole: (string, optional) Nw Device Role\n    - upTime: (string, optional) Up Time\n    - nwDeviceFamily: (string, optional) Nw Device Family\n    - macAddress: (string, optional) Mac Address\n    - connectedTime: (string, optional) Connected Time\n    - softwareVersion: (string, optional) Software Version\n    - subMode: (string, optional) Sub Mode\n    - nwDeviceType: (string, optional) Nw Device Type\n    - overallHealth: (string, optional) Overall Health\n    - memoryScore: (string, optional) Memory Score\n    - cpuScore: (string, optional) Cpu Score"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "__runsync",
												"value": "true",
												"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
											},
											{
												"key": "__timeout",
												"value": "30",
												"description": "(number, required) If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution"
											},
											{
												"key": "__persistbapioutput",
												"value": "true",
												"description": "(string, required) Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/device-detail?timestamp&searchBy&identifier",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"device-detail"
											],
											"query": [
												{
													"key": "timestamp",
													"value": null,
													"description": "(string, required) Epoch time(in milliseconds) when the device data is required"
												},
												{
													"key": "searchBy",
													"value": null,
													"description": "(string, required) MAC Address or Device Name value or UUID of the network device"
												},
												{
													"key": "identifier",
													"value": null,
													"description": "(string, required) One of keywords : macAddress or uuid or nwDeviceName"
												}
											]
										},
										"description": "Returns detailed Network Device information retrieved by Mac Address, Device Name or UUID for any given point of time. \n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - managementIpAddr: (string, optional) Management Ip Addr\n    - serialNumber: (string, optional) Serial Number\n    - nwDeviceName: (string, optional) Nw Device Name\n    - opState: (string, optional) Op State\n    - platformId: (string, optional) Platform Id\n    - nwDeviceId: (string, optional) Nw Device Id\n    - sysUptime: (string, optional) Sys Uptime\n    - mode: (string, optional) Mode\n    - resetReason: (string, optional) Reset Reason\n    - nwDeviceRole: (string, optional) Nw Device Role\n    - upTime: (string, optional) Up Time\n    - nwDeviceFamily: (string, optional) Nw Device Family\n    - macAddress: (string, optional) Mac Address\n    - connectedTime: (string, optional) Connected Time\n    - softwareVersion: (string, optional) Software Version\n    - subMode: (string, optional) Sub Mode\n    - nwDeviceType: (string, optional) Nw Device Type\n    - overallHealth: (string, optional) Overall Health\n    - memoryScore: (string, optional) Memory Score\n    - cpuScore: (string, optional) Cpu Score"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"managementIpAddr\": \"string\",\n    \"serialNumber\": \"string\",\n    \"nwDeviceName\": \"string\",\n    \"opState\": \"string\",\n    \"platformId\": \"string\",\n    \"nwDeviceId\": \"string\",\n    \"sysUptime\": \"string\",\n    \"mode\": \"string\",\n    \"resetReason\": \"string\",\n    \"nwDeviceRole\": \"string\",\n    \"upTime\": \"string\",\n    \"nwDeviceFamily\": \"string\",\n    \"macAddress\": \"string\",\n    \"connectedTime\": \"string\",\n    \"softwareVersion\": \"string\",\n    \"subMode\": \"string\",\n    \"nwDeviceType\": \"string\",\n    \"overallHealth\": \"string\",\n    \"memoryScore\": \"string\",\n    \"cpuScore\": \"string\"\n  }\n}"
								}
							]
						},
						{
							"name": "Get all interfaces",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"interface"
									]
								},
								"description": "Returns all available interfaces. This endpoint can return a maximum of 500 interfaces\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"interface"
											]
										},
										"description": "Returns all available interfaces. This endpoint can return a maximum of 500 interfaces\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Interface by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"interface",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Interface ID"
										}
									]
								},
								"description": "Returns the interface for the given interface ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"interface",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Interface ID"
												}
											]
										},
										"description": "Returns the interface for the given interface ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"adminStatus\": \"string\",\n    \"className\": \"string\",\n    \"description\": \"string\",\n    \"deviceId\": \"string\",\n    \"duplex\": \"string\",\n    \"id\": \"string\",\n    \"ifIndex\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"interfaceType\": \"string\",\n    \"ipv4Address\": \"string\",\n    \"ipv4Mask\": \"string\",\n    \"isisSupport\": \"string\",\n    \"lastUpdated\": \"string\",\n    \"macAddress\": \"string\",\n    \"mappedPhysicalInterfaceId\": \"string\",\n    \"mappedPhysicalInterfaceName\": \"string\",\n    \"mediaType\": \"string\",\n    \"nativeVlanId\": \"string\",\n    \"ospfSupport\": \"string\",\n    \"pid\": \"string\",\n    \"portMode\": \"string\",\n    \"portName\": \"string\",\n    \"portType\": \"string\",\n    \"serialNo\": \"string\",\n    \"series\": \"string\",\n    \"speed\": \"string\",\n    \"status\": \"string\",\n    \"vlanId\": \"string\",\n    \"voiceVlan\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device Interface Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/count",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"interface",
										"count"
									]
								},
								"description": "Returns the count of interfaces for all devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/count",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"interface",
												"count"
											]
										},
										"description": "Returns the count of interfaces for all devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Interface by IP",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/ip-address/:ipAddress",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"interface",
										"ip-address",
										":ipAddress"
									],
									"variable": [
										{
											"key": "ipAddress",
											"value": "",
											"description": "(string, required) IP address of the interface"
										}
									]
								},
								"description": "Returns list of interfaces by specified IP address\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/ip-address/:ipAddress",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"interface",
												"ip-address",
												":ipAddress"
											],
											"variable": [
												{
													"key": "ipAddress",
													"value": "",
													"description": "(string, required) IP address of the interface"
												}
											]
										},
										"description": "Returns list of interfaces by specified IP address\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get ISIS interfaces",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/isis",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"interface",
										"isis"
									]
								},
								"description": "Returns the interfaces that has ISIS enabled\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/isis",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"interface",
												"isis"
											]
										},
										"description": "Returns the interfaces that has ISIS enabled\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Interface info by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/network-device/:deviceId",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"interface",
										"network-device",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId",
											"value": "",
											"description": "(string, required) Device ID"
										}
									]
								},
								"description": "Returns list of interfaces by specified device\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/network-device/:deviceId",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"interface",
												"network-device",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "",
													"description": "(string, required) Device ID"
												}
											]
										},
										"description": "Returns list of interfaces by specified device\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device Interfaces by specified range",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/network-device/:deviceId/:startIndex/:recordsToReturn",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"interface",
										"network-device",
										":deviceId",
										":startIndex",
										":recordsToReturn"
									],
									"variable": [
										{
											"key": "deviceId",
											"value": "",
											"description": "(string, required) Device ID"
										},
										{
											"key": "startIndex",
											"value": "",
											"description": "(integer, required) Start index"
										},
										{
											"key": "recordsToReturn",
											"value": "",
											"description": "(integer, required) Number of records to return"
										}
									]
								},
								"description": "Returns the list of interfaces for the device for the specified range\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/network-device/:deviceId/:startIndex/:recordsToReturn",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"interface",
												"network-device",
												":deviceId",
												":startIndex",
												":recordsToReturn"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "",
													"description": "(string, required) Device ID"
												},
												{
													"key": "startIndex",
													"value": "",
													"description": "(integer, required) Start index"
												},
												{
													"key": "recordsToReturn",
													"value": "",
													"description": "(integer, required) Number of records to return"
												}
											]
										},
										"description": "Returns the list of interfaces for the device for the specified range\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device Interface count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/network-device/:deviceId/count",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"interface",
										"network-device",
										":deviceId",
										"count"
									],
									"variable": [
										{
											"key": "deviceId",
											"value": "",
											"description": "(string, required) Device ID"
										}
									]
								},
								"description": "Returns the interface count for the given device\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/network-device/:deviceId/count",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"interface",
												"network-device",
												":deviceId",
												"count"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "",
													"description": "(string, required) Device ID"
												}
											]
										},
										"description": "Returns the interface count for the given device\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Interface details by device Id and interface name",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/network-device/:deviceId/interface-name?name=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"interface",
										"network-device",
										":deviceId",
										"interface-name"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "(string, required) Interface name"
										}
									],
									"variable": [
										{
											"key": "deviceId",
											"value": "",
											"description": "(string, required) Device ID"
										}
									]
								},
								"description": "Returns interface by specified device Id and interface name\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/network-device/:deviceId/interface-name?name=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"interface",
												"network-device",
												":deviceId",
												"interface-name"
											],
											"query": [
												{
													"key": "name",
													"value": "",
													"description": "(string, required) Interface name"
												}
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "",
													"description": "(string, required) Device ID"
												}
											]
										},
										"description": "Returns interface by specified device Id and interface name\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"adminStatus\": \"string\",\n    \"className\": \"string\",\n    \"description\": \"string\",\n    \"deviceId\": \"string\",\n    \"duplex\": \"string\",\n    \"id\": \"string\",\n    \"ifIndex\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"interfaceType\": \"string\",\n    \"ipv4Address\": \"string\",\n    \"ipv4Mask\": \"string\",\n    \"isisSupport\": \"string\",\n    \"lastUpdated\": \"string\",\n    \"macAddress\": \"string\",\n    \"mappedPhysicalInterfaceId\": \"string\",\n    \"mappedPhysicalInterfaceName\": \"string\",\n    \"mediaType\": \"string\",\n    \"nativeVlanId\": \"string\",\n    \"ospfSupport\": \"string\",\n    \"pid\": \"string\",\n    \"portMode\": \"string\",\n    \"portName\": \"string\",\n    \"portType\": \"string\",\n    \"serialNo\": \"string\",\n    \"series\": \"string\",\n    \"speed\": \"string\",\n    \"status\": \"string\",\n    \"vlanId\": \"string\",\n    \"voiceVlan\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get OSPF interfaces",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/ospf",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"interface",
										"ospf"
									]
								},
								"description": "Returns the interfaces that has OSPF enabled\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/interface/ospf",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"interface",
												"ospf"
											]
										},
										"description": "Returns the interfaces that has OSPF enabled\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - adminStatus: (string, required)\n    - className: (string, optional)\n    - description: (string, optional)\n    - deviceId: (string, required)\n    - duplex: (string, required)\n    - id: (string, optional)\n    - ifIndex: (string, required)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceType: (string, required)\n    - ipv4Address: (string, optional)\n    - ipv4Mask: (string, optional)\n    - isisSupport: (string, required)\n    - lastUpdated: (string, required)\n    - macAddress: (string, optional)\n    - mappedPhysicalInterfaceId: (string, optional)\n    - mappedPhysicalInterfaceName: (string, optional)\n    - mediaType: (string, required)\n    - nativeVlanId: (string, optional)\n    - ospfSupport: (string, required)\n    - pid: (string, required)\n    - portMode: (string, required)\n    - portName: (string, required)\n    - portType: (string, optional)\n    - serialNo: (string, required)\n    - series: (string, required)\n    - speed: (string, required)\n    - status: (string, required)\n    - vlanId: (string, optional)\n    - voiceVlan: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"adminStatus\": \"string\",\n      \"className\": \"string\",\n      \"description\": \"string\",\n      \"deviceId\": \"string\",\n      \"duplex\": \"string\",\n      \"id\": \"string\",\n      \"ifIndex\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceType\": \"string\",\n      \"ipv4Address\": \"string\",\n      \"ipv4Mask\": \"string\",\n      \"isisSupport\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"macAddress\": \"string\",\n      \"mappedPhysicalInterfaceId\": \"string\",\n      \"mappedPhysicalInterfaceName\": \"string\",\n      \"mediaType\": \"string\",\n      \"nativeVlanId\": \"string\",\n      \"ospfSupport\": \"string\",\n      \"pid\": \"string\",\n      \"portMode\": \"string\",\n      \"portName\": \"string\",\n      \"portType\": \"string\",\n      \"serialNo\": \"string\",\n      \"series\": \"string\",\n      \"speed\": \"string\",\n      \"status\": \"string\",\n      \"vlanId\": \"string\",\n      \"voiceVlan\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device?hostname=&managementIpAddress=&macAddress=&locationName=&serialNumber=&location=&family=&type=&series=&collectionStatus=&collectionInterval=&notSyncedForMinutes=&errorCode=&errorDescription=&softwareVersion=&softwareType=&platformId=&role=&reachabilityStatus=&upTime=&associatedWlcIp=&license.name=&license.type=&license.status=&module+name=&module+equpimenttype=&module+servicestate=&module+vendorequipmenttype=&module+partnumber=&module+operationstatecode=&id=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device"
									],
									"query": [
										{
											"key": "hostname",
											"value": "",
											"description": "(array, optional) hostname"
										},
										{
											"key": "managementIpAddress",
											"value": "",
											"description": "(array, optional) managementIpAddress"
										},
										{
											"key": "macAddress",
											"value": "",
											"description": "(array, optional) macAddress"
										},
										{
											"key": "locationName",
											"value": "",
											"description": "(array, optional) locationName"
										},
										{
											"key": "serialNumber",
											"value": "",
											"description": "(array, optional) serialNumber"
										},
										{
											"key": "location",
											"value": "",
											"description": "(array, optional) location"
										},
										{
											"key": "family",
											"value": "",
											"description": "(array, optional) family"
										},
										{
											"key": "type",
											"value": "",
											"description": "(array, optional) type"
										},
										{
											"key": "series",
											"value": "",
											"description": "(array, optional) series"
										},
										{
											"key": "collectionStatus",
											"value": "",
											"description": "(array, optional) collectionStatus"
										},
										{
											"key": "collectionInterval",
											"value": "",
											"description": "(array, optional) collectionInterval"
										},
										{
											"key": "notSyncedForMinutes",
											"value": "",
											"description": "(array, optional) notSyncedForMinutes"
										},
										{
											"key": "errorCode",
											"value": "",
											"description": "(array, optional) errorCode"
										},
										{
											"key": "errorDescription",
											"value": "",
											"description": "(array, optional) errorDescription"
										},
										{
											"key": "softwareVersion",
											"value": "",
											"description": "(array, optional) softwareVersion"
										},
										{
											"key": "softwareType",
											"value": "",
											"description": "(array, optional) softwareType"
										},
										{
											"key": "platformId",
											"value": "",
											"description": "(array, optional) platformId"
										},
										{
											"key": "role",
											"value": "",
											"description": "(array, optional) role"
										},
										{
											"key": "reachabilityStatus",
											"value": "",
											"description": "(array, optional) reachabilityStatus"
										},
										{
											"key": "upTime",
											"value": "",
											"description": "(array, optional) upTime"
										},
										{
											"key": "associatedWlcIp",
											"value": "",
											"description": "(array, optional) associatedWlcIp"
										},
										{
											"key": "license.name",
											"value": "",
											"description": "(array, optional) licenseName"
										},
										{
											"key": "license.type",
											"value": "",
											"description": "(array, optional) licenseType"
										},
										{
											"key": "license.status",
											"value": "",
											"description": "(array, optional) licenseStatus"
										},
										{
											"key": "module+name",
											"value": "",
											"description": "(array, optional) moduleName"
										},
										{
											"key": "module+equpimenttype",
											"value": "",
											"description": "(array, optional) moduleEqupimentType"
										},
										{
											"key": "module+servicestate",
											"value": "",
											"description": "(array, optional) moduleServiceState"
										},
										{
											"key": "module+vendorequipmenttype",
											"value": "",
											"description": "(array, optional) moduleVendorEquipmentType"
										},
										{
											"key": "module+partnumber",
											"value": "",
											"description": "(array, optional) modulePartNumber"
										},
										{
											"key": "module+operationstatecode",
											"value": "",
											"description": "(array, optional) moduleOperationStateCode"
										},
										{
											"key": "id",
											"value": "",
											"description": "(string, optional) Accepts comma separated id's and return list of network-devices for the given id's. If invalid or not-found id's are provided, null entry will be returned in the list."
										}
									]
								},
								"description": "Returns the count of network devices based on the fitler critieria by management IP address, mac address, hostname and location name. If id param is provided, it will be returning the list of network-devices for the given id's and other request params will be ignored. In case of autocomplete request, returns the list of specified attributes.\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device?hostname=&managementIpAddress=&macAddress=&locationName=&serialNumber=&location=&family=&type=&series=&collectionStatus=&collectionInterval=&notSyncedForMinutes=&errorCode=&errorDescription=&softwareVersion=&softwareType=&platformId=&role=&reachabilityStatus=&upTime=&associatedWlcIp=&license.name=&license.type=&license.status=&module+name=&module+equpimenttype=&module+servicestate=&module+vendorequipmenttype=&module+partnumber=&module+operationstatecode=&id=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device"
											],
											"query": [
												{
													"key": "hostname",
													"value": "",
													"description": "(array, optional) hostname"
												},
												{
													"key": "managementIpAddress",
													"value": "",
													"description": "(array, optional) managementIpAddress"
												},
												{
													"key": "macAddress",
													"value": "",
													"description": "(array, optional) macAddress"
												},
												{
													"key": "locationName",
													"value": "",
													"description": "(array, optional) locationName"
												},
												{
													"key": "serialNumber",
													"value": "",
													"description": "(array, optional) serialNumber"
												},
												{
													"key": "location",
													"value": "",
													"description": "(array, optional) location"
												},
												{
													"key": "family",
													"value": "",
													"description": "(array, optional) family"
												},
												{
													"key": "type",
													"value": "",
													"description": "(array, optional) type"
												},
												{
													"key": "series",
													"value": "",
													"description": "(array, optional) series"
												},
												{
													"key": "collectionStatus",
													"value": "",
													"description": "(array, optional) collectionStatus"
												},
												{
													"key": "collectionInterval",
													"value": "",
													"description": "(array, optional) collectionInterval"
												},
												{
													"key": "notSyncedForMinutes",
													"value": "",
													"description": "(array, optional) notSyncedForMinutes"
												},
												{
													"key": "errorCode",
													"value": "",
													"description": "(array, optional) errorCode"
												},
												{
													"key": "errorDescription",
													"value": "",
													"description": "(array, optional) errorDescription"
												},
												{
													"key": "softwareVersion",
													"value": "",
													"description": "(array, optional) softwareVersion"
												},
												{
													"key": "softwareType",
													"value": "",
													"description": "(array, optional) softwareType"
												},
												{
													"key": "platformId",
													"value": "",
													"description": "(array, optional) platformId"
												},
												{
													"key": "role",
													"value": "",
													"description": "(array, optional) role"
												},
												{
													"key": "reachabilityStatus",
													"value": "",
													"description": "(array, optional) reachabilityStatus"
												},
												{
													"key": "upTime",
													"value": "",
													"description": "(array, optional) upTime"
												},
												{
													"key": "associatedWlcIp",
													"value": "",
													"description": "(array, optional) associatedWlcIp"
												},
												{
													"key": "license.name",
													"value": "",
													"description": "(array, optional) licenseName"
												},
												{
													"key": "license.type",
													"value": "",
													"description": "(array, optional) licenseType"
												},
												{
													"key": "license.status",
													"value": "",
													"description": "(array, optional) licenseStatus"
												},
												{
													"key": "module+name",
													"value": "",
													"description": "(array, optional) moduleName"
												},
												{
													"key": "module+equpimenttype",
													"value": "",
													"description": "(array, optional) moduleEqupimentType"
												},
												{
													"key": "module+servicestate",
													"value": "",
													"description": "(array, optional) moduleServiceState"
												},
												{
													"key": "module+vendorequipmenttype",
													"value": "",
													"description": "(array, optional) moduleVendorEquipmentType"
												},
												{
													"key": "module+partnumber",
													"value": "",
													"description": "(array, optional) modulePartNumber"
												},
												{
													"key": "module+operationstatecode",
													"value": "",
													"description": "(array, optional) moduleOperationStateCode"
												},
												{
													"key": "id",
													"value": "",
													"description": "(string, optional) Accepts comma separated id's and return list of network-devices for the given id's. If invalid or not-found id's are provided, null entry will be returned in the list."
												}
											]
										},
										"description": "Returns the count of network devices based on the fitler critieria by management IP address, mac address, hostname and location name. If id param is provided, it will be returning the list of network-devices for the given id's and other request params will be ignored. In case of autocomplete request, returns the list of specified attributes.\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"apManagerInterfaceIp\": \"string\",\n      \"associatedWlcIp\": \"string\",\n      \"bootDateTime\": \"string\",\n      \"collectionInterval\": \"string\",\n      \"collectionStatus\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorDescription\": \"string\",\n      \"family\": \"string\",\n      \"hostname\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceCount\": \"string\",\n      \"inventoryStatusDetail\": \"string\",\n      \"lastUpdateTime\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"lineCardCount\": \"string\",\n      \"lineCardId\": \"string\",\n      \"location\": \"string\",\n      \"locationName\": \"string\",\n      \"macAddress\": \"string\",\n      \"managementIpAddress\": \"string\",\n      \"memorySize\": \"string\",\n      \"platformId\": \"string\",\n      \"reachabilityFailureReason\": \"string\",\n      \"reachabilityStatus\": \"string\",\n      \"role\": \"string\",\n      \"roleSource\": \"string\",\n      \"serialNumber\": \"string\",\n      \"series\": \"string\",\n      \"snmpContact\": \"string\",\n      \"snmpLocation\": \"string\",\n      \"softwareType\": \"string\",\n      \"softwareVersion\": \"string\",\n      \"tagCount\": \"string\",\n      \"tunnelUdpPort\": \"string\",\n      \"type\": \"string\",\n      \"upTime\": \"string\",\n      \"waasDeviceMode\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Add Device",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cliTransport\": \"string\",\n  \"computeDevice\": false,\n  \"enablePassword\": \"string\",\n  \"extendedDiscoveryInfo\": \"string\",\n  \"httpPassword\": \"string\",\n  \"httpPort\": \"string\",\n  \"httpSecure\": false,\n  \"httpUserName\": \"string\",\n  \"ipAddress\": [\n    \"string\"\n  ],\n  \"merakiOrgId\": [\n    \"string\"\n  ],\n  \"netconfPort\": \"string\",\n  \"password\": \"string\",\n  \"serialNumber\": \"string\",\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpROCommunity\": \"string\",\n  \"snmpRWCommunity\": \"string\",\n  \"snmpRetry\": 0,\n  \"snmpTimeout\": 0,\n  \"snmpUserName\": \"string\",\n  \"snmpVersion\": \"string\",\n  \"type\": \"string\",\n  \"updateMgmtIPaddressList\": [\n    {\n      \"existMgmtIpAddress\": \"string\",\n      \"newMgmtIpAddress\": \"string\"\n    }\n  ],\n  \"userName\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device"
									]
								},
								"description": "Adds the device with given credential\n\n###### Request Model\n- root: (map, optional)\n  - cliTransport: (string, required)\n  - computeDevice: (boolean, optional)\n  - enablePassword: (string, required)\n  - extendedDiscoveryInfo: (string, optional)\n  - httpPassword: (string, optional)\n  - httpPort: (string, optional)\n  - httpSecure: (boolean, optional)\n  - httpUserName: (string, optional)\n  - ipAddress: (array[string], required)\n  - merakiOrgId: (array[string], optional)\n  - netconfPort: (string, optional)\n  - password: (string, required)\n  - serialNumber: (string, optional)\n  - snmpAuthPassphrase: (string, required)\n  - snmpAuthProtocol: (string, required)\n  - snmpMode: (string, required)\n  - snmpPrivPassphrase: (string, required)\n  - snmpPrivProtocol: (string, required)\n  - snmpROCommunity: (string, required)\n  - snmpRWCommunity: (string, required)\n  - snmpRetry: (integer, required)\n  - snmpTimeout: (integer, required)\n  - snmpUserName: (string, required)\n  - snmpVersion: (string, optional)\n  - type: (enum[\"COMPUTE_DEVICE\",\"MERAKI_DASHBOARD\",\"NETWORK_DEVICE\",\"NODATACHANGE\"], optional)\n  - updateMgmtIPaddressList: (array[map], optional)\n    - existMgmtIpAddress: (string, optional)\n    - newMgmtIpAddress: (string, optional)\n  - userName: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cliTransport\": \"string\",\n  \"computeDevice\": false,\n  \"enablePassword\": \"string\",\n  \"extendedDiscoveryInfo\": \"string\",\n  \"httpPassword\": \"string\",\n  \"httpPort\": \"string\",\n  \"httpSecure\": false,\n  \"httpUserName\": \"string\",\n  \"ipAddress\": [\n    \"string\"\n  ],\n  \"merakiOrgId\": [\n    \"string\"\n  ],\n  \"netconfPort\": \"string\",\n  \"password\": \"string\",\n  \"serialNumber\": \"string\",\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpROCommunity\": \"string\",\n  \"snmpRWCommunity\": \"string\",\n  \"snmpRetry\": 0,\n  \"snmpTimeout\": 0,\n  \"snmpUserName\": \"string\",\n  \"snmpVersion\": \"string\",\n  \"type\": \"string\",\n  \"updateMgmtIPaddressList\": [\n    {\n      \"existMgmtIpAddress\": \"string\",\n      \"newMgmtIpAddress\": \"string\"\n    }\n  ],\n  \"userName\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device"
											]
										},
										"description": "Adds the device with given credential\n\n###### Request Model\n- root: (map, optional)\n  - cliTransport: (string, required)\n  - computeDevice: (boolean, optional)\n  - enablePassword: (string, required)\n  - extendedDiscoveryInfo: (string, optional)\n  - httpPassword: (string, optional)\n  - httpPort: (string, optional)\n  - httpSecure: (boolean, optional)\n  - httpUserName: (string, optional)\n  - ipAddress: (array[string], required)\n  - merakiOrgId: (array[string], optional)\n  - netconfPort: (string, optional)\n  - password: (string, required)\n  - serialNumber: (string, optional)\n  - snmpAuthPassphrase: (string, required)\n  - snmpAuthProtocol: (string, required)\n  - snmpMode: (string, required)\n  - snmpPrivPassphrase: (string, required)\n  - snmpPrivProtocol: (string, required)\n  - snmpROCommunity: (string, required)\n  - snmpRWCommunity: (string, required)\n  - snmpRetry: (integer, required)\n  - snmpTimeout: (integer, required)\n  - snmpUserName: (string, required)\n  - snmpVersion: (string, optional)\n  - type: (enum[\"COMPUTE_DEVICE\",\"MERAKI_DASHBOARD\",\"NETWORK_DEVICE\",\"NODATACHANGE\"], optional)\n  - updateMgmtIPaddressList: (array[map], optional)\n    - existMgmtIpAddress: (string, optional)\n    - newMgmtIpAddress: (string, optional)\n  - userName: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Sync Devices",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cliTransport\": \"string\",\n  \"computeDevice\": false,\n  \"enablePassword\": \"string\",\n  \"extendedDiscoveryInfo\": \"string\",\n  \"httpPassword\": \"string\",\n  \"httpPort\": \"string\",\n  \"httpSecure\": false,\n  \"httpUserName\": \"string\",\n  \"ipAddress\": [\n    \"string\"\n  ],\n  \"merakiOrgId\": [\n    \"string\"\n  ],\n  \"netconfPort\": \"string\",\n  \"password\": \"string\",\n  \"serialNumber\": \"string\",\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpROCommunity\": \"string\",\n  \"snmpRWCommunity\": \"string\",\n  \"snmpRetry\": 0,\n  \"snmpTimeout\": 0,\n  \"snmpUserName\": \"string\",\n  \"snmpVersion\": \"string\",\n  \"type\": \"string\",\n  \"updateMgmtIPaddressList\": [\n    {\n      \"existMgmtIpAddress\": \"string\",\n      \"newMgmtIpAddress\": \"string\"\n    }\n  ],\n  \"userName\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device"
									]
								},
								"description": "Sync the devices provided as input\n\n###### Request Model\n- root: (map, optional)\n  - cliTransport: (string, required)\n  - computeDevice: (boolean, optional)\n  - enablePassword: (string, required)\n  - extendedDiscoveryInfo: (string, optional)\n  - httpPassword: (string, optional)\n  - httpPort: (string, optional)\n  - httpSecure: (boolean, optional)\n  - httpUserName: (string, optional)\n  - ipAddress: (array[string], required)\n  - merakiOrgId: (array[string], optional)\n  - netconfPort: (string, optional)\n  - password: (string, required)\n  - serialNumber: (string, optional)\n  - snmpAuthPassphrase: (string, required)\n  - snmpAuthProtocol: (string, required)\n  - snmpMode: (string, required)\n  - snmpPrivPassphrase: (string, required)\n  - snmpPrivProtocol: (string, required)\n  - snmpROCommunity: (string, required)\n  - snmpRWCommunity: (string, required)\n  - snmpRetry: (integer, required)\n  - snmpTimeout: (integer, required)\n  - snmpUserName: (string, required)\n  - snmpVersion: (string, optional)\n  - type: (enum[\"COMPUTE_DEVICE\",\"MERAKI_DASHBOARD\",\"NETWORK_DEVICE\",\"NODATACHANGE\"], optional)\n  - updateMgmtIPaddressList: (array[map], optional)\n    - existMgmtIpAddress: (string, optional)\n    - newMgmtIpAddress: (string, optional)\n  - userName: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cliTransport\": \"string\",\n  \"computeDevice\": false,\n  \"enablePassword\": \"string\",\n  \"extendedDiscoveryInfo\": \"string\",\n  \"httpPassword\": \"string\",\n  \"httpPort\": \"string\",\n  \"httpSecure\": false,\n  \"httpUserName\": \"string\",\n  \"ipAddress\": [\n    \"string\"\n  ],\n  \"merakiOrgId\": [\n    \"string\"\n  ],\n  \"netconfPort\": \"string\",\n  \"password\": \"string\",\n  \"serialNumber\": \"string\",\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpROCommunity\": \"string\",\n  \"snmpRWCommunity\": \"string\",\n  \"snmpRetry\": 0,\n  \"snmpTimeout\": 0,\n  \"snmpUserName\": \"string\",\n  \"snmpVersion\": \"string\",\n  \"type\": \"string\",\n  \"updateMgmtIPaddressList\": [\n    {\n      \"existMgmtIpAddress\": \"string\",\n      \"newMgmtIpAddress\": \"string\"\n    }\n  ],\n  \"userName\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device"
											]
										},
										"description": "Sync the devices provided as input\n\n###### Request Model\n- root: (map, optional)\n  - cliTransport: (string, required)\n  - computeDevice: (boolean, optional)\n  - enablePassword: (string, required)\n  - extendedDiscoveryInfo: (string, optional)\n  - httpPassword: (string, optional)\n  - httpPort: (string, optional)\n  - httpSecure: (boolean, optional)\n  - httpUserName: (string, optional)\n  - ipAddress: (array[string], required)\n  - merakiOrgId: (array[string], optional)\n  - netconfPort: (string, optional)\n  - password: (string, required)\n  - serialNumber: (string, optional)\n  - snmpAuthPassphrase: (string, required)\n  - snmpAuthProtocol: (string, required)\n  - snmpMode: (string, required)\n  - snmpPrivPassphrase: (string, required)\n  - snmpPrivProtocol: (string, required)\n  - snmpROCommunity: (string, required)\n  - snmpRWCommunity: (string, required)\n  - snmpRetry: (integer, required)\n  - snmpTimeout: (integer, required)\n  - snmpUserName: (string, required)\n  - snmpVersion: (string, optional)\n  - type: (enum[\"COMPUTE_DEVICE\",\"MERAKI_DASHBOARD\",\"NETWORK_DEVICE\",\"NODATACHANGE\"], optional)\n  - updateMgmtIPaddressList: (array[map], optional)\n    - existMgmtIpAddress: (string, optional)\n    - newMgmtIpAddress: (string, optional)\n  - userName: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete Device by Id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id?isForceDelete=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										":id"
									],
									"query": [
										{
											"key": "isForceDelete",
											"value": "",
											"description": "(boolean, optional) isForceDelete"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Device ID"
										}
									]
								},
								"description": "Deletes the network device for the given Id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id?isForceDelete=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												":id"
											],
											"query": [
												{
													"key": "isForceDelete",
													"value": "",
													"description": "(boolean, optional) isForceDelete"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Device ID"
												}
											]
										},
										"description": "Deletes the network device for the given Id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Device ID"
										}
									]
								},
								"description": "Returns the network device details for the given device ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Device ID"
												}
											]
										},
										"description": "Returns the network device details for the given device ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"apManagerInterfaceIp\": \"string\",\n    \"associatedWlcIp\": \"string\",\n    \"bootDateTime\": \"string\",\n    \"collectionInterval\": \"string\",\n    \"collectionStatus\": \"string\",\n    \"errorCode\": \"string\",\n    \"errorDescription\": \"string\",\n    \"family\": \"string\",\n    \"hostname\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"interfaceCount\": \"string\",\n    \"inventoryStatusDetail\": \"string\",\n    \"lastUpdateTime\": \"string\",\n    \"lastUpdated\": \"string\",\n    \"lineCardCount\": \"string\",\n    \"lineCardId\": \"string\",\n    \"location\": \"string\",\n    \"locationName\": \"string\",\n    \"macAddress\": \"string\",\n    \"managementIpAddress\": \"string\",\n    \"memorySize\": \"string\",\n    \"platformId\": \"string\",\n    \"reachabilityFailureReason\": \"string\",\n    \"reachabilityStatus\": \"string\",\n    \"role\": \"string\",\n    \"roleSource\": \"string\",\n    \"serialNumber\": \"string\",\n    \"series\": \"string\",\n    \"snmpContact\": \"string\",\n    \"snmpLocation\": \"string\",\n    \"softwareType\": \"string\",\n    \"softwareVersion\": \"string\",\n    \"tagCount\": \"string\",\n    \"tunnelUdpPort\": \"string\",\n    \"type\": \"string\",\n    \"upTime\": \"string\",\n    \"waasDeviceMode\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device Summary",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id/brief",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										":id",
										"brief"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Device ID"
										}
									]
								},
								"description": "Returns brief summary of device info such as hostname, management IP address for the given device Id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, required)\n    - role: (string, required)\n    - roleSource: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id/brief",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												":id",
												"brief"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Device ID"
												}
											]
										},
										"description": "Returns brief summary of device info such as hostname, management IP address for the given device Id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, required)\n    - role: (string, required)\n    - roleSource: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"id\": \"string\",\n    \"role\": \"string\",\n    \"roleSource\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Polling Interval by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id/collection-schedule",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										":id",
										"collection-schedule"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Device ID"
										}
									]
								},
								"description": "Returns polling interval by device id\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id/collection-schedule",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												":id",
												"collection-schedule"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Device ID"
												}
											]
										},
										"description": "Returns polling interval by device id\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Organization list for Meraki",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id/meraki-organization",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										":id",
										"meraki-organization"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) id"
										}
									]
								},
								"description": "Returns list of organizations for meraki dashboard\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id/meraki-organization",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												":id",
												"meraki-organization"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) id"
												}
											]
										},
										"description": "Returns list of organizations for meraki dashboard\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    \"string\"\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device Interface VLANs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id/vlan?interfaceType=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										":id",
										"vlan"
									],
									"query": [
										{
											"key": "interfaceType",
											"value": "",
											"description": "(string, optional) Vlan assocaited with sub-interface"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) deviceUUID"
										}
									]
								},
								"description": "Returns Device Interface VLANs\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - interfaceName: (string, required)\n    - ipAddress: (string, required)\n    - mask: (integer, required)\n    - networkAddress: (string, required)\n    - numberOfIPs: (integer, required)\n    - prefix: (string, required)\n    - vlanNumber: (integer, required)\n    - vlanType: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id/vlan?interfaceType=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												":id",
												"vlan"
											],
											"query": [
												{
													"key": "interfaceType",
													"value": "",
													"description": "(string, optional) Vlan assocaited with sub-interface"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) deviceUUID"
												}
											]
										},
										"description": "Returns Device Interface VLANs\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - interfaceName: (string, required)\n    - ipAddress: (string, required)\n    - mask: (integer, required)\n    - networkAddress: (string, required)\n    - numberOfIPs: (integer, required)\n    - prefix: (string, required)\n    - vlanNumber: (integer, required)\n    - vlanType: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"interfaceName\": \"string\",\n      \"ipAddress\": \"string\",\n      \"mask\": 0,\n      \"networkAddress\": \"string\",\n      \"numberOfIPs\": 0,\n      \"prefix\": \"string\",\n      \"vlanNumber\": 0,\n      \"vlanType\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get wireless lan controller details by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id/wireless-info",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										":id",
										"wireless-info"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Device ID"
										}
									]
								},
								"description": "Returns the wireless lan controller info with given device ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - adminEnabledPorts: (array[integer], optional)\n    - apGroupName: (string, optional)\n    - deviceId: (string, optional)\n    - ethMacAddress: (string, optional)\n    - flexGroupName: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - lagModeEnabled: (boolean, optional)\n    - netconfEnabled: (boolean, optional)\n    - wirelessLicenseInfo: (enum[\"ADVANTAGE\",\"ESSENTIALS\"], optional)\n    - wirelessPackageInstalled: (boolean, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:id/wireless-info",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												":id",
												"wireless-info"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Device ID"
												}
											]
										},
										"description": "Returns the wireless lan controller info with given device ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - adminEnabledPorts: (array[integer], optional)\n    - apGroupName: (string, optional)\n    - deviceId: (string, optional)\n    - ethMacAddress: (string, optional)\n    - flexGroupName: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - lagModeEnabled: (boolean, optional)\n    - netconfEnabled: (boolean, optional)\n    - wirelessLicenseInfo: (enum[\"ADVANTAGE\",\"ESSENTIALS\"], optional)\n    - wirelessPackageInstalled: (boolean, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"adminEnabledPorts\": [\n      0\n    ],\n    \"apGroupName\": \"string\",\n    \"deviceId\": \"string\",\n    \"ethMacAddress\": \"string\",\n    \"flexGroupName\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"lagModeEnabled\": false,\n    \"netconfEnabled\": false,\n    \"wirelessLicenseInfo\": \"string\",\n    \"wirelessPackageInstalled\": false\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device Config by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:networkDeviceId/config",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										":networkDeviceId",
										"config"
									],
									"variable": [
										{
											"key": "networkDeviceId",
											"value": "",
											"description": "(string, required) networkDeviceId"
										}
									]
								},
								"description": "Returns the device config by specified device ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:networkDeviceId/config",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												":networkDeviceId",
												"config"
											],
											"variable": [
												{
													"key": "networkDeviceId",
													"value": "",
													"description": "(string, required) networkDeviceId"
												}
											]
										},
										"description": "Returns the device config by specified device ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": \"string\",\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Network Device by pagination range",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:startIndex/:recordsToReturn",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										":startIndex",
										":recordsToReturn"
									],
									"variable": [
										{
											"key": "startIndex",
											"value": "",
											"description": "(integer, required) Start index"
										},
										{
											"key": "recordsToReturn",
											"value": "",
											"description": "(integer, required) Number of records to return"
										}
									]
								},
								"description": "Returns the list of network devices for the given pagination range\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/:startIndex/:recordsToReturn",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												":startIndex",
												":recordsToReturn"
											],
											"variable": [
												{
													"key": "startIndex",
													"value": "",
													"description": "(integer, required) Start index"
												},
												{
													"key": "recordsToReturn",
													"value": "",
													"description": "(integer, required) Number of records to return"
												}
											]
										},
										"description": "Returns the list of network devices for the given pagination range\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"apManagerInterfaceIp\": \"string\",\n      \"associatedWlcIp\": \"string\",\n      \"bootDateTime\": \"string\",\n      \"collectionInterval\": \"string\",\n      \"collectionStatus\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorDescription\": \"string\",\n      \"family\": \"string\",\n      \"hostname\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"interfaceCount\": \"string\",\n      \"inventoryStatusDetail\": \"string\",\n      \"lastUpdateTime\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"lineCardCount\": \"string\",\n      \"lineCardId\": \"string\",\n      \"location\": \"string\",\n      \"locationName\": \"string\",\n      \"macAddress\": \"string\",\n      \"managementIpAddress\": \"string\",\n      \"memorySize\": \"string\",\n      \"platformId\": \"string\",\n      \"reachabilityFailureReason\": \"string\",\n      \"reachabilityStatus\": \"string\",\n      \"role\": \"string\",\n      \"roleSource\": \"string\",\n      \"serialNumber\": \"string\",\n      \"series\": \"string\",\n      \"snmpContact\": \"string\",\n      \"snmpLocation\": \"string\",\n      \"softwareType\": \"string\",\n      \"softwareVersion\": \"string\",\n      \"tagCount\": \"string\",\n      \"tunnelUdpPort\": \"string\",\n      \"type\": \"string\",\n      \"upTime\": \"string\",\n      \"waasDeviceMode\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Retrieves all network devices",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/autocomplete?vrfName=&managementIpAddress=&hostname=&macAddress=&family=&collectionStatus=&collectionInterval=&softwareVersion=&softwareType=&reachabilityStatus=&reachabilityFailureReason=&errorCode=&platformId=&series=&type=&serialNumber=&upTime=&role=&roleSource=&associatedWlcIp=&offset=&limit=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"autocomplete"
									],
									"query": [
										{
											"key": "vrfName",
											"value": "",
											"description": "(string, optional) vrfName"
										},
										{
											"key": "managementIpAddress",
											"value": "",
											"description": "(string, optional) managementIpAddress"
										},
										{
											"key": "hostname",
											"value": "",
											"description": "(string, optional) hostname"
										},
										{
											"key": "macAddress",
											"value": "",
											"description": "(string, optional) macAddress"
										},
										{
											"key": "family",
											"value": "",
											"description": "(string, optional) family"
										},
										{
											"key": "collectionStatus",
											"value": "",
											"description": "(string, optional) collectionStatus"
										},
										{
											"key": "collectionInterval",
											"value": "",
											"description": "(string, optional) collectionInterval"
										},
										{
											"key": "softwareVersion",
											"value": "",
											"description": "(string, optional) softwareVersion"
										},
										{
											"key": "softwareType",
											"value": "",
											"description": "(string, optional) softwareType"
										},
										{
											"key": "reachabilityStatus",
											"value": "",
											"description": "(string, optional) reachabilityStatus"
										},
										{
											"key": "reachabilityFailureReason",
											"value": "",
											"description": "(string, optional) reachabilityFailureReason"
										},
										{
											"key": "errorCode",
											"value": "",
											"description": "(string, optional) errorCode"
										},
										{
											"key": "platformId",
											"value": "",
											"description": "(string, optional) platformId"
										},
										{
											"key": "series",
											"value": "",
											"description": "(string, optional) series"
										},
										{
											"key": "type",
											"value": "",
											"description": "(string, optional) type"
										},
										{
											"key": "serialNumber",
											"value": "",
											"description": "(string, optional) serialNumber"
										},
										{
											"key": "upTime",
											"value": "",
											"description": "(string, optional) upTime"
										},
										{
											"key": "role",
											"value": "",
											"description": "(string, optional) role"
										},
										{
											"key": "roleSource",
											"value": "",
											"description": "(string, optional) roleSource"
										},
										{
											"key": "associatedWlcIp",
											"value": "",
											"description": "(string, optional) associatedWlcIp"
										},
										{
											"key": "offset",
											"value": "",
											"description": "(string, optional) offset"
										},
										{
											"key": "limit",
											"value": "",
											"description": "(string, optional) limit"
										}
									]
								},
								"description": "Gets the list of first 500 network devices sorted lexicographically based on host name. It can be filtered using management IP address, mac address, hostname and location name. If id param is provided, it will be returning the list of network-devices for the given id's and other request params will be ignored. In case of autocomplete request, returns the list of specified attributes.\n\n###### Response Model\n- root: (map, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/autocomplete?vrfName=&managementIpAddress=&hostname=&macAddress=&family=&collectionStatus=&collectionInterval=&softwareVersion=&softwareType=&reachabilityStatus=&reachabilityFailureReason=&errorCode=&platformId=&series=&type=&serialNumber=&upTime=&role=&roleSource=&associatedWlcIp=&offset=&limit=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"autocomplete"
											],
											"query": [
												{
													"key": "vrfName",
													"value": "",
													"description": "(string, optional) vrfName"
												},
												{
													"key": "managementIpAddress",
													"value": "",
													"description": "(string, optional) managementIpAddress"
												},
												{
													"key": "hostname",
													"value": "",
													"description": "(string, optional) hostname"
												},
												{
													"key": "macAddress",
													"value": "",
													"description": "(string, optional) macAddress"
												},
												{
													"key": "family",
													"value": "",
													"description": "(string, optional) family"
												},
												{
													"key": "collectionStatus",
													"value": "",
													"description": "(string, optional) collectionStatus"
												},
												{
													"key": "collectionInterval",
													"value": "",
													"description": "(string, optional) collectionInterval"
												},
												{
													"key": "softwareVersion",
													"value": "",
													"description": "(string, optional) softwareVersion"
												},
												{
													"key": "softwareType",
													"value": "",
													"description": "(string, optional) softwareType"
												},
												{
													"key": "reachabilityStatus",
													"value": "",
													"description": "(string, optional) reachabilityStatus"
												},
												{
													"key": "reachabilityFailureReason",
													"value": "",
													"description": "(string, optional) reachabilityFailureReason"
												},
												{
													"key": "errorCode",
													"value": "",
													"description": "(string, optional) errorCode"
												},
												{
													"key": "platformId",
													"value": "",
													"description": "(string, optional) platformId"
												},
												{
													"key": "series",
													"value": "",
													"description": "(string, optional) series"
												},
												{
													"key": "type",
													"value": "",
													"description": "(string, optional) type"
												},
												{
													"key": "serialNumber",
													"value": "",
													"description": "(string, optional) serialNumber"
												},
												{
													"key": "upTime",
													"value": "",
													"description": "(string, optional) upTime"
												},
												{
													"key": "role",
													"value": "",
													"description": "(string, optional) role"
												},
												{
													"key": "roleSource",
													"value": "",
													"description": "(string, optional) roleSource"
												},
												{
													"key": "associatedWlcIp",
													"value": "",
													"description": "(string, optional) associatedWlcIp"
												},
												{
													"key": "offset",
													"value": "",
													"description": "(string, optional) offset"
												},
												{
													"key": "limit",
													"value": "",
													"description": "(string, optional) limit"
												}
											]
										},
										"description": "Gets the list of first 500 network devices sorted lexicographically based on host name. It can be filtered using management IP address, mac address, hostname and location name. If id param is provided, it will be returning the list of network-devices for the given id's and other request params will be ignored. In case of autocomplete request, returns the list of specified attributes.\n\n###### Response Model\n- root: (map, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \n}"
								}
							]
						},
						{
							"name": "Update Device role",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"string\",\n  \"role\": \"string\",\n  \"roleSource\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/brief",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"brief"
									]
								},
								"description": "Updates the role of the device as access, core, distribution, border router\n\n###### Request Model\n- root: (map, optional)\n  - id: (string, required)\n  - role: (string, required)\n  - roleSource: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"string\",\n  \"role\": \"string\",\n  \"roleSource\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/brief",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"brief"
											]
										},
										"description": "Updates the role of the device as access, core, distribution, border router\n\n###### Request Model\n- root: (map, optional)\n  - id: (string, required)\n  - role: (string, required)\n  - roleSource: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Polling Interval for all devices",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/collection-schedule/global",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"collection-schedule",
										"global"
									]
								},
								"description": "Returns polling interval of all devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/collection-schedule/global",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"collection-schedule",
												"global"
											]
										},
										"description": "Returns polling interval of all devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device Config for all devices",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/config",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"config"
									]
								},
								"description": "Returns the config for all devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cdpNeighbors: (string, optional)\n    - healthMonitor: (string, optional)\n    - id: (string, required)\n    - intfDescription: (string, optional)\n    - inventory: (string, optional)\n    - ipIntfBrief: (string, optional)\n    - macAddressTable: (string, optional)\n    - runningConfig: (string, required)\n    - snmp: (string, optional)\n    - version: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/config",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"config"
											]
										},
										"description": "Returns the config for all devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cdpNeighbors: (string, optional)\n    - healthMonitor: (string, optional)\n    - id: (string, required)\n    - intfDescription: (string, optional)\n    - inventory: (string, optional)\n    - ipIntfBrief: (string, optional)\n    - macAddressTable: (string, optional)\n    - runningConfig: (string, required)\n    - snmp: (string, optional)\n    - version: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"cdpNeighbors\": \"string\",\n      \"healthMonitor\": \"string\",\n      \"id\": \"string\",\n      \"intfDescription\": \"string\",\n      \"inventory\": \"string\",\n      \"ipIntfBrief\": \"string\",\n      \"macAddressTable\": \"string\",\n      \"runningConfig\": \"string\",\n      \"snmp\": \"string\",\n      \"version\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device Config Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/config/count",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"config",
										"count"
									]
								},
								"description": "Returns the count of device configs\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/config/count",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"config",
												"count"
											]
										},
										"description": "Returns the count of device configs\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/count",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"count"
									]
								},
								"description": "Returns the count of network devices based on the filter criteria by management IP address, mac address, hostname and location name\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/count",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"count"
											]
										},
										"description": "Returns the count of network devices based on the filter criteria by management IP address, mac address, hostname and location name\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Export Device list",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceUuids\": [\n    \"string\"\n  ],\n  \"id\": \"string\",\n  \"operationEnum\": \"string\",\n  \"parameters\": [\n    \"string\"\n  ],\n  \"password\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/file",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"file"
									]
								},
								"description": "Exports the selected network device to a file\n\n###### Request Model\n- root: (map, optional)\n  - deviceUuids: (array[string], required)\n  - id: (string, optional)\n  - operationEnum: (enum[\"CREDENTIALDETAILS\",\"DEVICEDETAILS\"], optional)\n  - parameters: (array[string], optional)\n  - password: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceUuids\": [\n    \"string\"\n  ],\n  \"id\": \"string\",\n  \"operationEnum\": \"string\",\n  \"parameters\": [\n    \"string\"\n  ],\n  \"password\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/file",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"file"
											]
										},
										"description": "Exports the selected network device to a file\n\n###### Request Model\n- root: (map, optional)\n  - deviceUuids: (array[string], required)\n  - id: (string, optional)\n  - operationEnum: (enum[\"CREDENTIALDETAILS\",\"DEVICEDETAILS\"], optional)\n  - parameters: (array[string], optional)\n  - password: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Functional Capability for devices",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/functional-capability?deviceId=&functionName=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"functional-capability"
									],
									"query": [
										{
											"key": "deviceId",
											"value": "",
											"description": "(string, optional) Accepts comma separated deviceid's and return list of functional-capabilities for the given id's. If invalid or not-found id's are provided, null entry will be returned in the list."
										},
										{
											"key": "functionName",
											"value": "",
											"description": "(array, optional) functionName"
										}
									]
								},
								"description": "Returns the functional-capability for given devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - deviceId: (string, optional)\n    - functionalCapability: (array[map], optional)\n      - attributeInfo: (map, optional)\n      - functionDetails: (array[map], optional)\n        - attributeInfo: (map, optional)\n        - id: (string, optional)\n        - propertyName: (string, optional)\n        - stringValue: (string, optional)\n      - functionName: (string, optional)\n      - functionOpState: (enum[\"UNKNOWN\",\"NOT_APPLICABLE\",\"DISABLED\",\"ENABLED\"], optional)\n      - id: (string, optional)\n    - id: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/functional-capability?deviceId=&functionName=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"functional-capability"
											],
											"query": [
												{
													"key": "deviceId",
													"value": "",
													"description": "(string, optional) Accepts comma separated deviceid's and return list of functional-capabilities for the given id's. If invalid or not-found id's are provided, null entry will be returned in the list."
												},
												{
													"key": "functionName",
													"value": "",
													"description": "(array, optional) functionName"
												}
											]
										},
										"description": "Returns the functional-capability for given devices\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - deviceId: (string, optional)\n    - functionalCapability: (array[map], optional)\n      - attributeInfo: (map, optional)\n      - functionDetails: (array[map], optional)\n        - attributeInfo: (map, optional)\n        - id: (string, optional)\n        - propertyName: (string, optional)\n        - stringValue: (string, optional)\n      - functionName: (string, optional)\n      - functionOpState: (enum[\"UNKNOWN\",\"NOT_APPLICABLE\",\"DISABLED\",\"ENABLED\"], optional)\n      - id: (string, optional)\n    - id: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"deviceId\": \"string\",\n      \"functionalCapability\": [\n        {\n          \"attributeInfo\": {\n            \n          },\n          \"functionDetails\": [\n            {\n              \"attributeInfo\": {\n                \n              },\n              \"id\": \"string\",\n              \"propertyName\": \"string\",\n              \"stringValue\": \"string\"\n            }\n          ],\n          \"functionName\": \"string\",\n          \"functionOpState\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"id\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Functional Capability by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/functional-capability/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"functional-capability",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Device ID"
										}
									]
								},
								"description": "Returns functional capability with given Id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - attributeInfo: (map, optional)\n    - functionDetails: (array[map], optional)\n      - attributeInfo: (map, optional)\n      - id: (string, optional)\n      - propertyName: (string, optional)\n      - stringValue: (string, optional)\n    - functionName: (string, optional)\n    - functionOpState: (enum[\"UNKNOWN\",\"NOT_APPLICABLE\",\"DISABLED\",\"ENABLED\"], optional)\n    - id: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/functional-capability/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"functional-capability",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Device ID"
												}
											]
										},
										"description": "Returns functional capability with given Id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - attributeInfo: (map, optional)\n    - functionDetails: (array[map], optional)\n      - attributeInfo: (map, optional)\n      - id: (string, optional)\n      - propertyName: (string, optional)\n      - stringValue: (string, optional)\n    - functionName: (string, optional)\n    - functionOpState: (enum[\"UNKNOWN\",\"NOT_APPLICABLE\",\"DISABLED\",\"ENABLED\"], optional)\n    - id: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"attributeInfo\": {\n      \n    },\n    \"functionDetails\": [\n      {\n        \"attributeInfo\": {\n          \n        },\n        \"id\": \"string\",\n        \"propertyName\": \"string\",\n        \"stringValue\": \"string\"\n      }\n    ],\n    \"functionName\": \"string\",\n    \"functionOpState\": \"string\",\n    \"id\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Network Device by IP",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/ip-address/:ipAddress",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"ip-address",
										":ipAddress"
									],
									"variable": [
										{
											"key": "ipAddress",
											"value": "",
											"description": "(string, required) Device IP address"
										}
									]
								},
								"description": "Returns the network device by specified IP address\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/ip-address/:ipAddress",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"ip-address",
												":ipAddress"
											],
											"variable": [
												{
													"key": "ipAddress",
													"value": "",
													"description": "(string, required) Device IP address"
												}
											]
										},
										"description": "Returns the network device by specified IP address\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"apManagerInterfaceIp\": \"string\",\n    \"associatedWlcIp\": \"string\",\n    \"bootDateTime\": \"string\",\n    \"collectionInterval\": \"string\",\n    \"collectionStatus\": \"string\",\n    \"errorCode\": \"string\",\n    \"errorDescription\": \"string\",\n    \"family\": \"string\",\n    \"hostname\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"interfaceCount\": \"string\",\n    \"inventoryStatusDetail\": \"string\",\n    \"lastUpdateTime\": \"string\",\n    \"lastUpdated\": \"string\",\n    \"lineCardCount\": \"string\",\n    \"lineCardId\": \"string\",\n    \"location\": \"string\",\n    \"locationName\": \"string\",\n    \"macAddress\": \"string\",\n    \"managementIpAddress\": \"string\",\n    \"memorySize\": \"string\",\n    \"platformId\": \"string\",\n    \"reachabilityFailureReason\": \"string\",\n    \"reachabilityStatus\": \"string\",\n    \"role\": \"string\",\n    \"roleSource\": \"string\",\n    \"serialNumber\": \"string\",\n    \"series\": \"string\",\n    \"snmpContact\": \"string\",\n    \"snmpLocation\": \"string\",\n    \"softwareType\": \"string\",\n    \"softwareVersion\": \"string\",\n    \"tagCount\": \"string\",\n    \"tunnelUdpPort\": \"string\",\n    \"type\": \"string\",\n    \"upTime\": \"string\",\n    \"waasDeviceMode\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Modules",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/module?deviceId=&limit=&offset=&nameList=&vendorEquipmentTypeList=&partNumberList=&operationalStateCodeList=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"module"
									],
									"query": [
										{
											"key": "deviceId",
											"value": "",
											"description": "(string, required) deviceId"
										},
										{
											"key": "limit",
											"value": "",
											"description": "(string, optional) limit"
										},
										{
											"key": "offset",
											"value": "",
											"description": "(string, optional) offset"
										},
										{
											"key": "nameList",
											"value": "",
											"description": "(array, optional) nameList"
										},
										{
											"key": "vendorEquipmentTypeList",
											"value": "",
											"description": "(array, optional) vendorEquipmentTypeList"
										},
										{
											"key": "partNumberList",
											"value": "",
											"description": "(array, optional) partNumberList"
										},
										{
											"key": "operationalStateCodeList",
											"value": "",
											"description": "(array, optional) operationalStateCodeList"
										}
									]
								},
								"description": "Returns modules by specified device id\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - assemblyNumber: (string, required)\n    - assemblyRevision: (string, required)\n    - attributeInfo: (map, optional)\n    - containmentEntity: (string, required)\n    - description: (string, required)\n    - entityPhysicalIndex: (string, required)\n    - id: (string, required)\n    - isFieldReplaceable: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - isReportingAlarmsAllowed: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - manufacturer: (string, required)\n    - moduleIndex: (integer, required)\n    - name: (string, required)\n    - operationalStateCode: (string, required)\n    - partNumber: (string, required)\n    - serialNumber: (string, required)\n    - vendorEquipmentType: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/module?deviceId=&limit=&offset=&nameList=&vendorEquipmentTypeList=&partNumberList=&operationalStateCodeList=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"module"
											],
											"query": [
												{
													"key": "deviceId",
													"value": "",
													"description": "(string, required) deviceId"
												},
												{
													"key": "limit",
													"value": "",
													"description": "(string, optional) limit"
												},
												{
													"key": "offset",
													"value": "",
													"description": "(string, optional) offset"
												},
												{
													"key": "nameList",
													"value": "",
													"description": "(array, optional) nameList"
												},
												{
													"key": "vendorEquipmentTypeList",
													"value": "",
													"description": "(array, optional) vendorEquipmentTypeList"
												},
												{
													"key": "partNumberList",
													"value": "",
													"description": "(array, optional) partNumberList"
												},
												{
													"key": "operationalStateCodeList",
													"value": "",
													"description": "(array, optional) operationalStateCodeList"
												}
											]
										},
										"description": "Returns modules by specified device id\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - assemblyNumber: (string, required)\n    - assemblyRevision: (string, required)\n    - attributeInfo: (map, optional)\n    - containmentEntity: (string, required)\n    - description: (string, required)\n    - entityPhysicalIndex: (string, required)\n    - id: (string, required)\n    - isFieldReplaceable: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - isReportingAlarmsAllowed: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - manufacturer: (string, required)\n    - moduleIndex: (integer, required)\n    - name: (string, required)\n    - operationalStateCode: (string, required)\n    - partNumber: (string, required)\n    - serialNumber: (string, required)\n    - vendorEquipmentType: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"assemblyNumber\": \"string\",\n      \"assemblyRevision\": \"string\",\n      \"attributeInfo\": {\n        \n      },\n      \"containmentEntity\": \"string\",\n      \"description\": \"string\",\n      \"entityPhysicalIndex\": \"string\",\n      \"id\": \"string\",\n      \"isFieldReplaceable\": \"string\",\n      \"isReportingAlarmsAllowed\": \"string\",\n      \"manufacturer\": \"string\",\n      \"moduleIndex\": 0,\n      \"name\": \"string\",\n      \"operationalStateCode\": \"string\",\n      \"partNumber\": \"string\",\n      \"serialNumber\": \"string\",\n      \"vendorEquipmentType\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Module Info by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/module/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"module",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) id"
										}
									]
								},
								"description": "Returns Module info by id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - assemblyNumber: (string, required)\n    - assemblyRevision: (string, required)\n    - attributeInfo: (map, optional)\n    - containmentEntity: (string, required)\n    - description: (string, required)\n    - entityPhysicalIndex: (string, required)\n    - id: (string, required)\n    - isFieldReplaceable: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - isReportingAlarmsAllowed: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - manufacturer: (string, required)\n    - moduleIndex: (integer, required)\n    - name: (string, required)\n    - operationalStateCode: (string, required)\n    - partNumber: (string, required)\n    - serialNumber: (string, required)\n    - vendorEquipmentType: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/module/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"module",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) id"
												}
											]
										},
										"description": "Returns Module info by id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - assemblyNumber: (string, required)\n    - assemblyRevision: (string, required)\n    - attributeInfo: (map, optional)\n    - containmentEntity: (string, required)\n    - description: (string, required)\n    - entityPhysicalIndex: (string, required)\n    - id: (string, required)\n    - isFieldReplaceable: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - isReportingAlarmsAllowed: (enum[\"UNKNOWN\",\"TRUE\",\"FALSE\",\"NOT_APPLICABLE\"], required)\n    - manufacturer: (string, required)\n    - moduleIndex: (integer, required)\n    - name: (string, required)\n    - operationalStateCode: (string, required)\n    - partNumber: (string, required)\n    - serialNumber: (string, required)\n    - vendorEquipmentType: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"assemblyNumber\": \"string\",\n    \"assemblyRevision\": \"string\",\n    \"attributeInfo\": {\n      \n    },\n    \"containmentEntity\": \"string\",\n    \"description\": \"string\",\n    \"entityPhysicalIndex\": \"string\",\n    \"id\": \"string\",\n    \"isFieldReplaceable\": \"string\",\n    \"isReportingAlarmsAllowed\": \"string\",\n    \"manufacturer\": \"string\",\n    \"moduleIndex\": 0,\n    \"name\": \"string\",\n    \"operationalStateCode\": \"string\",\n    \"partNumber\": \"string\",\n    \"serialNumber\": \"string\",\n    \"vendorEquipmentType\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Module count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/module/count?deviceId=&nameList=&vendorEquipmentTypeList=&partNumberList=&operationalStateCodeList=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"module",
										"count"
									],
									"query": [
										{
											"key": "deviceId",
											"value": "",
											"description": "(string, required) deviceId"
										},
										{
											"key": "nameList",
											"value": "",
											"description": "(array, optional) nameList"
										},
										{
											"key": "vendorEquipmentTypeList",
											"value": "",
											"description": "(array, optional) vendorEquipmentTypeList"
										},
										{
											"key": "partNumberList",
											"value": "",
											"description": "(array, optional) partNumberList"
										},
										{
											"key": "operationalStateCodeList",
											"value": "",
											"description": "(array, optional) operationalStateCodeList"
										}
									]
								},
								"description": "Returns Module Count\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/module/count?deviceId=&nameList=&vendorEquipmentTypeList=&partNumberList=&operationalStateCodeList=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"module",
												"count"
											],
											"query": [
												{
													"key": "deviceId",
													"value": "",
													"description": "(string, required) deviceId"
												},
												{
													"key": "nameList",
													"value": "",
													"description": "(array, optional) nameList"
												},
												{
													"key": "vendorEquipmentTypeList",
													"value": "",
													"description": "(array, optional) vendorEquipmentTypeList"
												},
												{
													"key": "partNumberList",
													"value": "",
													"description": "(array, optional) partNumberList"
												},
												{
													"key": "operationalStateCodeList",
													"value": "",
													"description": "(array, optional) operationalStateCodeList"
												}
											]
										},
										"description": "Returns Module Count\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device by Serial number",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/serial-number/:serialNumber",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"serial-number",
										":serialNumber"
									],
									"variable": [
										{
											"key": "serialNumber",
											"value": "",
											"description": "(string, required) Device serial number"
										}
									]
								},
								"description": "Returns the network device with given serial number\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/serial-number/:serialNumber",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"serial-number",
												":serialNumber"
											],
											"variable": [
												{
													"key": "serialNumber",
													"value": "",
													"description": "(string, required) Device serial number"
												}
											]
										},
										"description": "Returns the network device with given serial number\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - apManagerInterfaceIp: (string, optional)\n    - associatedWlcIp: (string, optional)\n    - bootDateTime: (string, optional)\n    - collectionInterval: (string, optional)\n    - collectionStatus: (string, required)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryStatusDetail: (string, required)\n    - lastUpdateTime: (string, optional)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - platformId: (string, required)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - series: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - softwareType: (string, required)\n    - softwareVersion: (string, required)\n    - tagCount: (string, required)\n    - tunnelUdpPort: (string, optional)\n    - type: (string, required)\n    - upTime: (string, required)\n    - waasDeviceMode: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"apManagerInterfaceIp\": \"string\",\n    \"associatedWlcIp\": \"string\",\n    \"bootDateTime\": \"string\",\n    \"collectionInterval\": \"string\",\n    \"collectionStatus\": \"string\",\n    \"errorCode\": \"string\",\n    \"errorDescription\": \"string\",\n    \"family\": \"string\",\n    \"hostname\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"interfaceCount\": \"string\",\n    \"inventoryStatusDetail\": \"string\",\n    \"lastUpdateTime\": \"string\",\n    \"lastUpdated\": \"string\",\n    \"lineCardCount\": \"string\",\n    \"lineCardId\": \"string\",\n    \"location\": \"string\",\n    \"locationName\": \"string\",\n    \"macAddress\": \"string\",\n    \"managementIpAddress\": \"string\",\n    \"memorySize\": \"string\",\n    \"platformId\": \"string\",\n    \"reachabilityFailureReason\": \"string\",\n    \"reachabilityStatus\": \"string\",\n    \"role\": \"string\",\n    \"roleSource\": \"string\",\n    \"serialNumber\": \"string\",\n    \"series\": \"string\",\n    \"snmpContact\": \"string\",\n    \"snmpLocation\": \"string\",\n    \"softwareType\": \"string\",\n    \"softwareVersion\": \"string\",\n    \"tagCount\": \"string\",\n    \"tunnelUdpPort\": \"string\",\n    \"type\": \"string\",\n    \"upTime\": \"string\",\n    \"waasDeviceMode\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Sync Devices",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"any\"\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/sync?forceSync=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"sync"
									],
									"query": [
										{
											"key": "forceSync",
											"value": "",
											"description": "(boolean, optional) forceSync"
										}
									]
								},
								"description": "Synchronizes the devices. If forceSync param is false (default) then the sync would run in normal priority thread. If forceSync param is true then the sync would run in high priority thread if available, else the sync will fail. Result can be seen in the child task of each device\n\n###### Request Model\n- root: (array[any], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"any\"\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/sync?forceSync=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"sync"
											],
											"query": [
												{
													"key": "forceSync",
													"value": "",
													"description": "(boolean, optional) forceSync"
												}
											]
										},
										"description": "Synchronizes the devices. If forceSync param is false (default) then the sync would run in normal priority thread. If forceSync param is true then the sync would run in high priority thread if available, else the sync will fail. Result can be seen in the child task of each device\n\n###### Request Model\n- root: (array[any], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Register device for WSA",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/tenantinfo/macaddress?serialNumber=&macaddress=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device",
										"tenantinfo",
										"macaddress"
									],
									"query": [
										{
											"key": "serialNumber",
											"value": "",
											"description": "(string, optional) Serial number of the device"
										},
										{
											"key": "macaddress",
											"value": "",
											"description": "(string, optional) Mac addres of the device"
										}
									]
								},
								"description": "Registers a device for WSA notification\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - macAddress: (string, optional)\n    - modelNumber: (string, optional)\n    - name: (string, optional)\n    - serialNumber: (string, optional)\n    - tenantId: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device/tenantinfo/macaddress?serialNumber=&macaddress=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device",
												"tenantinfo",
												"macaddress"
											],
											"query": [
												{
													"key": "serialNumber",
													"value": "",
													"description": "(string, optional) Serial number of the device"
												},
												{
													"key": "macaddress",
													"value": "",
													"description": "(string, optional) Mac addres of the device"
												}
											]
										},
										"description": "Registers a device for WSA notification\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - macAddress: (string, optional)\n    - modelNumber: (string, optional)\n    - name: (string, optional)\n    - serialNumber: (string, optional)\n    - tenantId: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"macAddress\": \"string\",\n    \"modelNumber\": \"string\",\n    \"name\": \"string\",\n    \"serialNumber\": \"string\",\n    \"tenantId\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Networks",
					"item": [
						{
							"name": "Get Overall Network Health",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "__runsync",
										"value": "true",
										"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
									},
									{
										"key": "__timeout",
										"value": "30",
										"description": "(number, required) If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution"
									},
									{
										"key": "__persistbapioutput",
										"value": "true",
										"description": "(string, required) Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-health?timestamp",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-health"
									],
									"query": [
										{
											"key": "timestamp",
											"value": null,
											"description": "(string, required) Epoch time(in milliseconds) when the Network health data is required"
										}
									]
								},
								"description": "Returns Overall Network Health information by Device category (Access, Distribution, Core, Router, Wireless) for any given point of time\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - measuredBy: (string, optional) Measured By\n    - latestMeasuredByEntity: (string, optional) Latest Measured By Entity\n    - latestHealthScore: (string, optional) Latest Health Score\n    - monitoredDevices: (string, optional) Monitored Devices\n    - unMonitoredDevices: (string, optional) Un Monitored Devices\n    - healthDistirubution: (array[map], optional)\n      - category: (string, optional) Category\n      - totalCount: (string, optional) Total Count\n      - healthScore: (string, optional) Health Score\n      - goodPercentage: (string, optional) Good Percentage\n      - badPercentage: (string, optional) Bad Percentage\n      - fairPercentage: (string, optional) Fair Percentage"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "__runsync",
												"value": "true",
												"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
											},
											{
												"key": "__timeout",
												"value": "30",
												"description": "(number, required) If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned.  If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution"
											},
											{
												"key": "__persistbapioutput",
												"value": "true",
												"description": "(string, required) Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-health?timestamp",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-health"
											],
											"query": [
												{
													"key": "timestamp",
													"value": null,
													"description": "(string, required) Epoch time(in milliseconds) when the Network health data is required"
												}
											]
										},
										"description": "Returns Overall Network Health information by Device category (Access, Distribution, Core, Router, Wireless) for any given point of time\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - measuredBy: (string, optional) Measured By\n    - latestMeasuredByEntity: (string, optional) Latest Measured By Entity\n    - latestHealthScore: (string, optional) Latest Health Score\n    - monitoredDevices: (string, optional) Monitored Devices\n    - unMonitoredDevices: (string, optional) Un Monitored Devices\n    - healthDistirubution: (array[map], optional)\n      - category: (string, optional) Category\n      - totalCount: (string, optional) Total Count\n      - healthScore: (string, optional) Health Score\n      - goodPercentage: (string, optional) Good Percentage\n      - badPercentage: (string, optional) Bad Percentage\n      - fairPercentage: (string, optional) Fair Percentage"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"measuredBy\": \"string\",\n    \"latestMeasuredByEntity\": \"string\",\n    \"latestHealthScore\": \"string\",\n    \"monitoredDevices\": \"string\",\n    \"unMonitoredDevices\": \"string\",\n    \"healthDistirubution\": [\n      {\n        \"category\": \"string\",\n        \"totalCount\": \"string\",\n        \"healthScore\": \"string\",\n        \"goodPercentage\": \"string\",\n        \"badPercentage\": \"string\",\n        \"fairPercentage\": \"string\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Get topology details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/topology/l2/:vlanID",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"topology",
										"l2",
										":vlanID"
									],
									"variable": [
										{
											"key": "vlanID",
											"value": "",
											"description": "(string, required) Vlan Name for e.g Vlan1, Vlan23 etc"
										}
									]
								},
								"description": "Returns Layer 2 network topology by specified VLAN ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, optional)\n    - links: (array[map], required)\n      - additionalInfo: (map, optional)\n      - endPortID: (string, required)\n      - endPortIpv4Address: (string, required)\n      - endPortIpv4Mask: (string, required)\n      - endPortName: (string, required)\n      - endPortSpeed: (string, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - linkStatus: (string, required)\n      - source: (string, required)\n      - startPortID: (string, required)\n      - startPortIpv4Address: (string, required)\n      - startPortIpv4Mask: (string, required)\n      - startPortName: (string, required)\n      - startPortSpeed: (string, required)\n      - tag: (string, required)\n      - target: (string, required)\n    - nodes: (array[map], required)\n      - aclApplied: (boolean, required)\n      - additionalInfo: (map, optional)\n      - customParam: (map, optional)\n        - id: (string, optional)\n        - label: (string, optional)\n        - parentNodeId: (string, optional)\n        - x: (integer, optional)\n        - y: (integer, optional)\n      - dataPathId: (string, optional)\n      - deviceType: (string, required)\n      - family: (string, required)\n      - fixed: (boolean, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - ip: (string, required)\n      - label: (string, required)\n      - networkType: (string, optional)\n      - nodeType: (string, required)\n      - order: (integer, optional)\n      - osType: (string, optional)\n      - platformId: (string, required)\n      - role: (string, required)\n      - roleSource: (string, required)\n      - softwareVersion: (string, optional)\n      - tags: (array[string], required)\n      - upperNode: (string, optional)\n      - userId: (string, optional)\n      - vlanId: (string, required)\n      - x: (integer, required)\n      - y: (integer, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/topology/l2/:vlanID",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"topology",
												"l2",
												":vlanID"
											],
											"variable": [
												{
													"key": "vlanID",
													"value": "",
													"description": "(string, required) Vlan Name for e.g Vlan1, Vlan23 etc"
												}
											]
										},
										"description": "Returns Layer 2 network topology by specified VLAN ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, optional)\n    - links: (array[map], required)\n      - additionalInfo: (map, optional)\n      - endPortID: (string, required)\n      - endPortIpv4Address: (string, required)\n      - endPortIpv4Mask: (string, required)\n      - endPortName: (string, required)\n      - endPortSpeed: (string, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - linkStatus: (string, required)\n      - source: (string, required)\n      - startPortID: (string, required)\n      - startPortIpv4Address: (string, required)\n      - startPortIpv4Mask: (string, required)\n      - startPortName: (string, required)\n      - startPortSpeed: (string, required)\n      - tag: (string, required)\n      - target: (string, required)\n    - nodes: (array[map], required)\n      - aclApplied: (boolean, required)\n      - additionalInfo: (map, optional)\n      - customParam: (map, optional)\n        - id: (string, optional)\n        - label: (string, optional)\n        - parentNodeId: (string, optional)\n        - x: (integer, optional)\n        - y: (integer, optional)\n      - dataPathId: (string, optional)\n      - deviceType: (string, required)\n      - family: (string, required)\n      - fixed: (boolean, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - ip: (string, required)\n      - label: (string, required)\n      - networkType: (string, optional)\n      - nodeType: (string, required)\n      - order: (integer, optional)\n      - osType: (string, optional)\n      - platformId: (string, required)\n      - role: (string, required)\n      - roleSource: (string, required)\n      - softwareVersion: (string, optional)\n      - tags: (array[string], required)\n      - upperNode: (string, optional)\n      - userId: (string, optional)\n      - vlanId: (string, required)\n      - x: (integer, required)\n      - y: (integer, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"id\": \"string\",\n    \"links\": [\n      {\n        \"additionalInfo\": {\n          \n        },\n        \"endPortID\": \"string\",\n        \"endPortIpv4Address\": \"string\",\n        \"endPortIpv4Mask\": \"string\",\n        \"endPortName\": \"string\",\n        \"endPortSpeed\": \"string\",\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"linkStatus\": \"string\",\n        \"source\": \"string\",\n        \"startPortID\": \"string\",\n        \"startPortIpv4Address\": \"string\",\n        \"startPortIpv4Mask\": \"string\",\n        \"startPortName\": \"string\",\n        \"startPortSpeed\": \"string\",\n        \"tag\": \"string\",\n        \"target\": \"string\"\n      }\n    ],\n    \"nodes\": [\n      {\n        \"aclApplied\": false,\n        \"additionalInfo\": {\n          \n        },\n        \"customParam\": {\n          \"id\": \"string\",\n          \"label\": \"string\",\n          \"parentNodeId\": \"string\",\n          \"x\": 0,\n          \"y\": 0\n        },\n        \"dataPathId\": \"string\",\n        \"deviceType\": \"string\",\n        \"family\": \"string\",\n        \"fixed\": false,\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"ip\": \"string\",\n        \"label\": \"string\",\n        \"networkType\": \"string\",\n        \"nodeType\": \"string\",\n        \"order\": 0,\n        \"osType\": \"string\",\n        \"platformId\": \"string\",\n        \"role\": \"string\",\n        \"roleSource\": \"string\",\n        \"softwareVersion\": \"string\",\n        \"tags\": [\n          \"string\"\n        ],\n        \"upperNode\": \"string\",\n        \"userId\": \"string\",\n        \"vlanId\": \"string\",\n        \"x\": 0,\n        \"y\": 0\n      }\n    ]\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get L3 Topology Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/topology/l3/:topologyType",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"topology",
										"l3",
										":topologyType"
									],
									"variable": [
										{
											"key": "topologyType",
											"value": "",
											"description": "(string, required) Type of topology(OSPF,ISIS,etc)"
										}
									]
								},
								"description": "Returns the Layer 3 network topology by routing protocol\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, optional)\n    - links: (array[map], required)\n      - additionalInfo: (map, optional)\n      - endPortID: (string, required)\n      - endPortIpv4Address: (string, required)\n      - endPortIpv4Mask: (string, required)\n      - endPortName: (string, required)\n      - endPortSpeed: (string, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - linkStatus: (string, required)\n      - source: (string, required)\n      - startPortID: (string, required)\n      - startPortIpv4Address: (string, required)\n      - startPortIpv4Mask: (string, required)\n      - startPortName: (string, required)\n      - startPortSpeed: (string, required)\n      - tag: (string, required)\n      - target: (string, required)\n    - nodes: (array[map], required)\n      - aclApplied: (boolean, required)\n      - additionalInfo: (map, optional)\n      - customParam: (map, optional)\n        - id: (string, optional)\n        - label: (string, optional)\n        - parentNodeId: (string, optional)\n        - x: (integer, optional)\n        - y: (integer, optional)\n      - dataPathId: (string, optional)\n      - deviceType: (string, required)\n      - family: (string, required)\n      - fixed: (boolean, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - ip: (string, required)\n      - label: (string, required)\n      - networkType: (string, optional)\n      - nodeType: (string, required)\n      - order: (integer, optional)\n      - osType: (string, optional)\n      - platformId: (string, required)\n      - role: (string, required)\n      - roleSource: (string, required)\n      - softwareVersion: (string, optional)\n      - tags: (array[string], required)\n      - upperNode: (string, optional)\n      - userId: (string, optional)\n      - vlanId: (string, required)\n      - x: (integer, required)\n      - y: (integer, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/topology/l3/:topologyType",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"topology",
												"l3",
												":topologyType"
											],
											"variable": [
												{
													"key": "topologyType",
													"value": "",
													"description": "(string, required) Type of topology(OSPF,ISIS,etc)"
												}
											]
										},
										"description": "Returns the Layer 3 network topology by routing protocol\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, optional)\n    - links: (array[map], required)\n      - additionalInfo: (map, optional)\n      - endPortID: (string, required)\n      - endPortIpv4Address: (string, required)\n      - endPortIpv4Mask: (string, required)\n      - endPortName: (string, required)\n      - endPortSpeed: (string, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - linkStatus: (string, required)\n      - source: (string, required)\n      - startPortID: (string, required)\n      - startPortIpv4Address: (string, required)\n      - startPortIpv4Mask: (string, required)\n      - startPortName: (string, required)\n      - startPortSpeed: (string, required)\n      - tag: (string, required)\n      - target: (string, required)\n    - nodes: (array[map], required)\n      - aclApplied: (boolean, required)\n      - additionalInfo: (map, optional)\n      - customParam: (map, optional)\n        - id: (string, optional)\n        - label: (string, optional)\n        - parentNodeId: (string, optional)\n        - x: (integer, optional)\n        - y: (integer, optional)\n      - dataPathId: (string, optional)\n      - deviceType: (string, required)\n      - family: (string, required)\n      - fixed: (boolean, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - ip: (string, required)\n      - label: (string, required)\n      - networkType: (string, optional)\n      - nodeType: (string, required)\n      - order: (integer, optional)\n      - osType: (string, optional)\n      - platformId: (string, required)\n      - role: (string, required)\n      - roleSource: (string, required)\n      - softwareVersion: (string, optional)\n      - tags: (array[string], required)\n      - upperNode: (string, optional)\n      - userId: (string, optional)\n      - vlanId: (string, required)\n      - x: (integer, required)\n      - y: (integer, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"id\": \"string\",\n    \"links\": [\n      {\n        \"additionalInfo\": {\n          \n        },\n        \"endPortID\": \"string\",\n        \"endPortIpv4Address\": \"string\",\n        \"endPortIpv4Mask\": \"string\",\n        \"endPortName\": \"string\",\n        \"endPortSpeed\": \"string\",\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"linkStatus\": \"string\",\n        \"source\": \"string\",\n        \"startPortID\": \"string\",\n        \"startPortIpv4Address\": \"string\",\n        \"startPortIpv4Mask\": \"string\",\n        \"startPortName\": \"string\",\n        \"startPortSpeed\": \"string\",\n        \"tag\": \"string\",\n        \"target\": \"string\"\n      }\n    ],\n    \"nodes\": [\n      {\n        \"aclApplied\": false,\n        \"additionalInfo\": {\n          \n        },\n        \"customParam\": {\n          \"id\": \"string\",\n          \"label\": \"string\",\n          \"parentNodeId\": \"string\",\n          \"x\": 0,\n          \"y\": 0\n        },\n        \"dataPathId\": \"string\",\n        \"deviceType\": \"string\",\n        \"family\": \"string\",\n        \"fixed\": false,\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"ip\": \"string\",\n        \"label\": \"string\",\n        \"networkType\": \"string\",\n        \"nodeType\": \"string\",\n        \"order\": 0,\n        \"osType\": \"string\",\n        \"platformId\": \"string\",\n        \"role\": \"string\",\n        \"roleSource\": \"string\",\n        \"softwareVersion\": \"string\",\n        \"tags\": [\n          \"string\"\n        ],\n        \"upperNode\": \"string\",\n        \"userId\": \"string\",\n        \"vlanId\": \"string\",\n        \"x\": 0,\n        \"y\": 0\n      }\n    ]\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Physical Topology",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/topology/physical-topology?nodeType=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"topology",
										"physical-topology"
									],
									"query": [
										{
											"key": "nodeType",
											"value": "",
											"description": "(string, optional) nodeType"
										}
									]
								},
								"description": "Returns the raw physical topology by specified criteria of nodeType\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, optional)\n    - links: (array[map], required)\n      - additionalInfo: (map, optional)\n      - endPortID: (string, required)\n      - endPortIpv4Address: (string, required)\n      - endPortIpv4Mask: (string, required)\n      - endPortName: (string, required)\n      - endPortSpeed: (string, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - linkStatus: (string, required)\n      - source: (string, required)\n      - startPortID: (string, required)\n      - startPortIpv4Address: (string, required)\n      - startPortIpv4Mask: (string, required)\n      - startPortName: (string, required)\n      - startPortSpeed: (string, required)\n      - tag: (string, required)\n      - target: (string, required)\n    - nodes: (array[map], required)\n      - aclApplied: (boolean, required)\n      - additionalInfo: (map, optional)\n      - customParam: (map, optional)\n        - id: (string, optional)\n        - label: (string, optional)\n        - parentNodeId: (string, optional)\n        - x: (integer, optional)\n        - y: (integer, optional)\n      - dataPathId: (string, optional)\n      - deviceType: (string, required)\n      - family: (string, required)\n      - fixed: (boolean, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - ip: (string, required)\n      - label: (string, required)\n      - networkType: (string, optional)\n      - nodeType: (string, required)\n      - order: (integer, optional)\n      - osType: (string, optional)\n      - platformId: (string, required)\n      - role: (string, required)\n      - roleSource: (string, required)\n      - softwareVersion: (string, optional)\n      - tags: (array[string], required)\n      - upperNode: (string, optional)\n      - userId: (string, optional)\n      - vlanId: (string, required)\n      - x: (integer, required)\n      - y: (integer, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/topology/physical-topology?nodeType=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"topology",
												"physical-topology"
											],
											"query": [
												{
													"key": "nodeType",
													"value": "",
													"description": "(string, optional) nodeType"
												}
											]
										},
										"description": "Returns the raw physical topology by specified criteria of nodeType\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - id: (string, optional)\n    - links: (array[map], required)\n      - additionalInfo: (map, optional)\n      - endPortID: (string, required)\n      - endPortIpv4Address: (string, required)\n      - endPortIpv4Mask: (string, required)\n      - endPortName: (string, required)\n      - endPortSpeed: (string, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - linkStatus: (string, required)\n      - source: (string, required)\n      - startPortID: (string, required)\n      - startPortIpv4Address: (string, required)\n      - startPortIpv4Mask: (string, required)\n      - startPortName: (string, required)\n      - startPortSpeed: (string, required)\n      - tag: (string, required)\n      - target: (string, required)\n    - nodes: (array[map], required)\n      - aclApplied: (boolean, required)\n      - additionalInfo: (map, optional)\n      - customParam: (map, optional)\n        - id: (string, optional)\n        - label: (string, optional)\n        - parentNodeId: (string, optional)\n        - x: (integer, optional)\n        - y: (integer, optional)\n      - dataPathId: (string, optional)\n      - deviceType: (string, required)\n      - family: (string, required)\n      - fixed: (boolean, required)\n      - greyOut: (boolean, required)\n      - id: (string, required)\n      - ip: (string, required)\n      - label: (string, required)\n      - networkType: (string, optional)\n      - nodeType: (string, required)\n      - order: (integer, optional)\n      - osType: (string, optional)\n      - platformId: (string, required)\n      - role: (string, required)\n      - roleSource: (string, required)\n      - softwareVersion: (string, optional)\n      - tags: (array[string], required)\n      - upperNode: (string, optional)\n      - userId: (string, optional)\n      - vlanId: (string, required)\n      - x: (integer, required)\n      - y: (integer, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"id\": \"string\",\n    \"links\": [\n      {\n        \"additionalInfo\": {\n          \n        },\n        \"endPortID\": \"string\",\n        \"endPortIpv4Address\": \"string\",\n        \"endPortIpv4Mask\": \"string\",\n        \"endPortName\": \"string\",\n        \"endPortSpeed\": \"string\",\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"linkStatus\": \"string\",\n        \"source\": \"string\",\n        \"startPortID\": \"string\",\n        \"startPortIpv4Address\": \"string\",\n        \"startPortIpv4Mask\": \"string\",\n        \"startPortName\": \"string\",\n        \"startPortSpeed\": \"string\",\n        \"tag\": \"string\",\n        \"target\": \"string\"\n      }\n    ],\n    \"nodes\": [\n      {\n        \"aclApplied\": false,\n        \"additionalInfo\": {\n          \n        },\n        \"customParam\": {\n          \"id\": \"string\",\n          \"label\": \"string\",\n          \"parentNodeId\": \"string\",\n          \"x\": 0,\n          \"y\": 0\n        },\n        \"dataPathId\": \"string\",\n        \"deviceType\": \"string\",\n        \"family\": \"string\",\n        \"fixed\": false,\n        \"greyOut\": false,\n        \"id\": \"string\",\n        \"ip\": \"string\",\n        \"label\": \"string\",\n        \"networkType\": \"string\",\n        \"nodeType\": \"string\",\n        \"order\": 0,\n        \"osType\": \"string\",\n        \"platformId\": \"string\",\n        \"role\": \"string\",\n        \"roleSource\": \"string\",\n        \"softwareVersion\": \"string\",\n        \"tags\": [\n          \"string\"\n        ],\n        \"upperNode\": \"string\",\n        \"userId\": \"string\",\n        \"vlanId\": \"string\",\n        \"x\": 0,\n        \"y\": 0\n      }\n    ]\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Site Topology",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/topology/site-topology",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"topology",
										"site-topology"
									]
								},
								"description": "Returns site topology\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - sites: (array[map], optional)\n      - displayName: (string, optional)\n      - groupNameHierarchy: (string, optional)\n      - id: (string, optional)\n      - latitude: (string, optional)\n      - locationAddress: (string, optional)\n      - locationCountry: (string, optional)\n      - locationType: (string, optional)\n      - longitude: (string, optional)\n      - name: (string, optional)\n      - parentId: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/topology/site-topology",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"topology",
												"site-topology"
											]
										},
										"description": "Returns site topology\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - sites: (array[map], optional)\n      - displayName: (string, optional)\n      - groupNameHierarchy: (string, optional)\n      - id: (string, optional)\n      - latitude: (string, optional)\n      - locationAddress: (string, optional)\n      - locationCountry: (string, optional)\n      - locationType: (string, optional)\n      - longitude: (string, optional)\n      - name: (string, optional)\n      - parentId: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"sites\": [\n      {\n        \"displayName\": \"string\",\n        \"groupNameHierarchy\": \"string\",\n        \"id\": \"string\",\n        \"latitude\": \"string\",\n        \"locationAddress\": \"string\",\n        \"locationCountry\": \"string\",\n        \"locationType\": \"string\",\n        \"longitude\": \"string\",\n        \"name\": \"string\",\n        \"parentId\": \"string\"\n      }\n    ]\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get VLAN details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/topology/vlan/vlan-names",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"topology",
										"vlan",
										"vlan-names"
									]
								},
								"description": "Returns the list of VLAN names\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/topology/vlan/vlan-names",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"topology",
												"vlan",
												"vlan-names"
											]
										},
										"description": "Returns the list of VLAN names\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    \"string\"\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Sites",
					"item": [
						{
							"name": "Get Site Health",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "__runsync",
										"value": "true",
										"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
									},
									{
										"key": "__timeout",
										"value": "30",
										"description": "(number, required) If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned. If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution"
									},
									{
										"key": "__persistbapioutput",
										"value": "true",
										"description": "(string, required) Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/site-health?timestamp",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"site-health"
									],
									"query": [
										{
											"key": "timestamp",
											"value": null,
											"description": "(string, required) Epoch time(in milliseconds) when the Site Hierarchy data is required"
										}
									]
								},
								"description": "Returns Overall Health information for all sites\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - siteName: (string, optional) Site Name\n    - siteId: (string, optional) Site Id\n    - parentSiteId: (string, optional) Parent Site Id\n    - parentSiteName: (string, optional) Parent Site Name\n    - siteType: (string, optional) Site Type\n    - latitude: (map, optional)\n    - longitude: (map, optional)\n    - healthyNetworkDevicePercentage: (string, optional) Healthy Network Device Percentage\n    - healthyClientsPercentage: (string, optional) Healthy Clients Percentage\n    - clientHealthWired: (string, optional) Client Health Wired\n    - clientHealthWireless: (map, optional)\n    - numberOfClients: (string, optional) Number Of Clients\n    - clientNumberOfIssues: (map, optional)\n    - networkNumberOfIssues: (map, optional)\n    - numberOfNetworkDevice: (string, optional) Number Of Network Device\n    - networkHealthAverage: (map, optional)\n    - networkHealthAccess: (string, optional) Network Health Access\n    - networkHealthCore: (string, optional) Network Health Core\n    - networkHealthDistribution: (string, optional) Network Health Distribution\n    - networkHealthRouter: (string, optional) Network Health Router\n    - networkHealthWireless: (map, optional)\n    - networkHealthOthers: (map, optional)\n    - numberOfWiredClients: (string, optional) Number Of Wired Clients\n    - numberOfWirelessClients: (map, optional)\n    - wiredGoodClients: (string, optional) Wired Good Clients\n    - wirelessGoodClients: (map, optional)\n    - clientIssueCount: (map, optional)\n    - overallGoodDevices: (string, optional) Overall Good Devices\n    - accessGoodCount: (string, optional) Access Good Count\n    - accessTotalCount: (string, optional) Access Total Count\n    - coreGoodCount: (string, optional) Core Good Count\n    - coreTotalCount: (string, optional) Core Total Count\n    - distributionGoodCount: (string, optional) Distribution Good Count\n    - distributionTotalCount: (string, optional) Distribution Total Count\n    - routerGoodCount: (string, optional) Router Good Count\n    - routerTotalCount: (string, optional) Router Total Count\n    - wirelessDeviceGoodCount: (string, optional) Wireless Device Good Count\n    - wirelessDeviceTotalCount: (string, optional) Wireless Device Total Count\n    - applicationHealth: (map, optional)\n    - applicationGoodCount: (map, optional)\n    - applicationTotalCount: (map, optional)\n    - applicationBytesTotalCount: (map, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "__runsync",
												"value": "true",
												"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
											},
											{
												"key": "__timeout",
												"value": "30",
												"description": "(number, required) If __runsync is set to ‘true’, this defines the maximum time before which if the API completes its execution, then a synchronous response is returned. If the time taken for the API to complete the execution, exceeds this time, then an asynchronous response is returned with an execution id, that can be used to get the status and response associated with the API execution"
											},
											{
												"key": "__persistbapioutput",
												"value": "true",
												"description": "(string, required) Enable this parameter to ensure that the synchronous response of the API is made available as part of the logs and the execution status"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/site-health?timestamp",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"site-health"
											],
											"query": [
												{
													"key": "timestamp",
													"value": null,
													"description": "(string, required) Epoch time(in milliseconds) when the Site Hierarchy data is required"
												}
											]
										},
										"description": "Returns Overall Health information for all sites\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - siteName: (string, optional) Site Name\n    - siteId: (string, optional) Site Id\n    - parentSiteId: (string, optional) Parent Site Id\n    - parentSiteName: (string, optional) Parent Site Name\n    - siteType: (string, optional) Site Type\n    - latitude: (map, optional)\n    - longitude: (map, optional)\n    - healthyNetworkDevicePercentage: (string, optional) Healthy Network Device Percentage\n    - healthyClientsPercentage: (string, optional) Healthy Clients Percentage\n    - clientHealthWired: (string, optional) Client Health Wired\n    - clientHealthWireless: (map, optional)\n    - numberOfClients: (string, optional) Number Of Clients\n    - clientNumberOfIssues: (map, optional)\n    - networkNumberOfIssues: (map, optional)\n    - numberOfNetworkDevice: (string, optional) Number Of Network Device\n    - networkHealthAverage: (map, optional)\n    - networkHealthAccess: (string, optional) Network Health Access\n    - networkHealthCore: (string, optional) Network Health Core\n    - networkHealthDistribution: (string, optional) Network Health Distribution\n    - networkHealthRouter: (string, optional) Network Health Router\n    - networkHealthWireless: (map, optional)\n    - networkHealthOthers: (map, optional)\n    - numberOfWiredClients: (string, optional) Number Of Wired Clients\n    - numberOfWirelessClients: (map, optional)\n    - wiredGoodClients: (string, optional) Wired Good Clients\n    - wirelessGoodClients: (map, optional)\n    - clientIssueCount: (map, optional)\n    - overallGoodDevices: (string, optional) Overall Good Devices\n    - accessGoodCount: (string, optional) Access Good Count\n    - accessTotalCount: (string, optional) Access Total Count\n    - coreGoodCount: (string, optional) Core Good Count\n    - coreTotalCount: (string, optional) Core Total Count\n    - distributionGoodCount: (string, optional) Distribution Good Count\n    - distributionTotalCount: (string, optional) Distribution Total Count\n    - routerGoodCount: (string, optional) Router Good Count\n    - routerTotalCount: (string, optional) Router Total Count\n    - wirelessDeviceGoodCount: (string, optional) Wireless Device Good Count\n    - wirelessDeviceTotalCount: (string, optional) Wireless Device Total Count\n    - applicationHealth: (map, optional)\n    - applicationGoodCount: (map, optional)\n    - applicationTotalCount: (map, optional)\n    - applicationBytesTotalCount: (map, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"siteName\": \"string\",\n      \"siteId\": \"string\",\n      \"parentSiteId\": \"string\",\n      \"parentSiteName\": \"string\",\n      \"siteType\": \"string\",\n      \"latitude\": {\n        \n      },\n      \"longitude\": {\n        \n      },\n      \"healthyNetworkDevicePercentage\": \"string\",\n      \"healthyClientsPercentage\": \"string\",\n      \"clientHealthWired\": \"string\",\n      \"clientHealthWireless\": {\n        \n      },\n      \"numberOfClients\": \"string\",\n      \"clientNumberOfIssues\": {\n        \n      },\n      \"networkNumberOfIssues\": {\n        \n      },\n      \"numberOfNetworkDevice\": \"string\",\n      \"networkHealthAverage\": {\n        \n      },\n      \"networkHealthAccess\": \"string\",\n      \"networkHealthCore\": \"string\",\n      \"networkHealthDistribution\": \"string\",\n      \"networkHealthRouter\": \"string\",\n      \"networkHealthWireless\": {\n        \n      },\n      \"networkHealthOthers\": {\n        \n      },\n      \"numberOfWiredClients\": \"string\",\n      \"numberOfWirelessClients\": {\n        \n      },\n      \"wiredGoodClients\": \"string\",\n      \"wirelessGoodClients\": {\n        \n      },\n      \"clientIssueCount\": {\n        \n      },\n      \"overallGoodDevices\": \"string\",\n      \"accessGoodCount\": \"string\",\n      \"accessTotalCount\": \"string\",\n      \"coreGoodCount\": \"string\",\n      \"coreTotalCount\": \"string\",\n      \"distributionGoodCount\": \"string\",\n      \"distributionTotalCount\": \"string\",\n      \"routerGoodCount\": \"string\",\n      \"routerTotalCount\": \"string\",\n      \"wirelessDeviceGoodCount\": \"string\",\n      \"wirelessDeviceTotalCount\": \"string\",\n      \"applicationHealth\": {\n        \n      },\n      \"applicationGoodCount\": {\n        \n      },\n      \"applicationTotalCount\": {\n        \n      },\n      \"applicationBytesTotalCount\": {\n        \n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Assign Device To Site",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "__runsync",
										"value": "false",
										"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
									},
									{
										"key": "__persistbapioutput",
										"value": "true",
										"description": "(boolean, required) Persist bapi sync response"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"device\": [\n    {\n      \"ip\": \"string\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/site/:siteId/device",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"site",
										":siteId",
										"device"
									],
									"variable": [
										{
											"key": "siteId",
											"value": null,
											"description": "(string, required) Site id to which the device is assigned"
										}
									]
								},
								"description": "API to assign a list of ENCS devices to a site.\n\n###### Request Model\n- root: (map, optional)\n  - device: (array[map], optional)\n    - ip: (string, optional) Ip\n\n###### Response Model\n- root: (map, optional)\n  - executionId: (string, optional) Execution Id\n  - executionStatusUrl: (string, optional) Execution Status Url\n  - message: (string, optional) Message"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "__runsync",
												"value": "false",
												"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
											},
											{
												"key": "__persistbapioutput",
												"value": "true",
												"description": "(boolean, required) Persist bapi sync response"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"device\": [\n    {\n      \"ip\": \"string\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/site/:siteId/device",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"site",
												":siteId",
												"device"
											],
											"variable": [
												{
													"key": "siteId",
													"value": null,
													"description": "(string, required) Site id to which the device is assigned"
												}
											]
										},
										"description": "API to assign a list of ENCS devices to a site.\n\n###### Request Model\n- root: (map, optional)\n  - device: (array[map], optional)\n    - ip: (string, optional) Ip\n\n###### Response Model\n- root: (map, optional)\n  - executionId: (string, optional) Execution Id\n  - executionStatusUrl: (string, optional) Execution Status Url\n  - message: (string, optional) Message"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"executionId\": \"string\",\n  \"executionStatusUrl\": \"string\",\n  \"message\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Create Site",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "__runsync",
										"value": "false",
										"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
									},
									{
										"key": "__timeout",
										"value": "30",
										"description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
									},
									{
										"key": "__persistbapioutput",
										"value": "true",
										"description": "(boolean, required) Persist bapi sync response"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"string\",\n  \"site\": {\n    \"area\": {\n      \"name\": \"string\",\n      \"parentName\": \"string\"\n    },\n    \"building\": {\n      \"name\": \"string\",\n      \"address\": \"string\"\n    },\n    \"floor\": {\n      \"name\": \"string\",\n      \"parentName\": \"string\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/system/api/v1/site",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"system",
										"api",
										"v1",
										"site"
									]
								},
								"description": "API to create an area/building/floor with a specified hierarchy.  This api looks for the type attribute to create the corresponding site.\n\n###### Request Model\n- root: (map, required)\n  - type: (enum[\"area\",\"building\",\"floor\"], required) Type\n  - site: (map, required)\n    - area: (map, optional)\n      - name: (string, optional) Name\n      - parentName: (string, optional) Parent Name\n    - building: (map, optional)\n      - name: (string, optional) Name\n      - address: (string, optional) Address\n    - floor: (map, optional)\n      - name: (string, optional) Name\n      - parentName: (string, optional) Parent Name\n\n###### Response Model\n- root: (map, optional)\n  - executionId: (string, optional) Execution Id\n  - executionStatusUrl: (string, optional) Execution Status Url\n  - message: (string, optional) Message"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "__runsync",
												"value": "false",
												"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
											},
											{
												"key": "__timeout",
												"value": "30",
												"description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
											},
											{
												"key": "__persistbapioutput",
												"value": "true",
												"description": "(boolean, required) Persist bapi sync response"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"string\",\n  \"site\": {\n    \"area\": {\n      \"name\": \"string\",\n      \"parentName\": \"string\"\n    },\n    \"building\": {\n      \"name\": \"string\",\n      \"address\": \"string\"\n    },\n    \"floor\": {\n      \"name\": \"string\",\n      \"parentName\": \"string\"\n    }\n  }\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/system/api/v1/site",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"system",
												"api",
												"v1",
												"site"
											]
										},
										"description": "API to create an area/building/floor with a specified hierarchy.  This api looks for the type attribute to create the corresponding site.\n\n###### Request Model\n- root: (map, required)\n  - type: (enum[\"area\",\"building\",\"floor\"], required) Type\n  - site: (map, required)\n    - area: (map, optional)\n      - name: (string, optional) Name\n      - parentName: (string, optional) Parent Name\n    - building: (map, optional)\n      - name: (string, optional) Name\n      - address: (string, optional) Address\n    - floor: (map, optional)\n      - name: (string, optional) Name\n      - parentName: (string, optional) Parent Name\n\n###### Response Model\n- root: (map, optional)\n  - executionId: (string, optional) Execution Id\n  - executionStatusUrl: (string, optional) Execution Status Url\n  - message: (string, optional) Message"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"executionId\": \"string\",\n  \"executionStatusUrl\": \"string\",\n  \"message\": \"string\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Operational Tools",
			"item": [
				{
					"name": "Command Runner",
					"item": [
						{
							"name": "Get all keywords of CLIs accepted by command runner",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device-poller/cli/legit-reads",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device-poller",
										"cli",
										"legit-reads"
									]
								},
								"description": "Get valid keywords\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device-poller/cli/legit-reads",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device-poller",
												"cli",
												"legit-reads"
											]
										},
										"description": "Get valid keywords\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    \"string\"\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Run read-only commands on devices to get their real-time configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commands\": [\n    \"string\"\n  ],\n  \"description\": \"string\",\n  \"deviceUuids\": [\n    \"string\"\n  ],\n  \"name\": \"string\",\n  \"timeout\": 0\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device-poller/cli/read-request",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"network-device-poller",
										"cli",
										"read-request"
									]
								},
								"description": "Submit request for read-only CLIs\n\n###### Request Model\n- root: (map, optional)\n  - commands: (array[string], required)\n  - description: (string, optional)\n  - deviceUuids: (array[string], required)\n  - name: (string, optional)\n  - timeout: (integer, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"commands\": [\n    \"string\"\n  ],\n  \"description\": \"string\",\n  \"deviceUuids\": [\n    \"string\"\n  ],\n  \"name\": \"string\",\n  \"timeout\": 0\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/network-device-poller/cli/read-request",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"network-device-poller",
												"cli",
												"read-request"
											]
										},
										"description": "Submit request for read-only CLIs\n\n###### Request Model\n- root: (map, optional)\n  - commands: (array[string], required)\n  - description: (string, optional)\n  - deviceUuids: (array[string], required)\n  - name: (string, optional)\n  - timeout: (integer, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "File",
					"item": [
						{
							"name": "Download a file by fileId",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/file/:fileId",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"file",
										":fileId"
									],
									"variable": [
										{
											"key": "fileId",
											"value": "",
											"description": "(string, required) File Identification number"
										}
									]
								},
								"description": "Downloads a file specified by fileId\n\n###### Response Model\n- root: (any, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/file/:fileId",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"file",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId",
													"value": "",
													"description": "(string, required) File Identification number"
												}
											]
										},
										"description": "Downloads a file specified by fileId\n\n###### Response Model\n- root: (any, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "\"any\""
								}
							]
						},
						{
							"name": "Get list of available namespaces",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/file/namespace",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"file",
										"namespace"
									]
								},
								"description": "Returns list of available namespaces\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/file/namespace",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"file",
												"namespace"
											]
										},
										"description": "Returns list of available namespaces\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[string], optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    \"string\"\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get list of files",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/file/namespace/:nameSpace",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"file",
										"namespace",
										":nameSpace"
									],
									"variable": [
										{
											"key": "nameSpace",
											"value": "",
											"description": "(string, required) A listing of fileId's"
										}
									]
								},
								"description": "Returns list of files under a specific namespace\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - downloadPath: (string, required)\n    - encrypted: (boolean, optional)\n    - fileFormat: (string, required)\n    - fileSize: (string, required)\n    - id: (string, required)\n    - md5Checksum: (string, required)\n    - name: (string, required)\n    - nameSpace: (string, required)\n    - sftpServerList: (array[any], optional)\n    - sha1Checksum: (string, required)\n    - taskId: (any, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/file/namespace/:nameSpace",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"file",
												"namespace",
												":nameSpace"
											],
											"variable": [
												{
													"key": "nameSpace",
													"value": "",
													"description": "(string, required) A listing of fileId's"
												}
											]
										},
										"description": "Returns list of files under a specific namespace\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - downloadPath: (string, required)\n    - encrypted: (boolean, optional)\n    - fileFormat: (string, required)\n    - fileSize: (string, required)\n    - id: (string, required)\n    - md5Checksum: (string, required)\n    - name: (string, required)\n    - nameSpace: (string, required)\n    - sftpServerList: (array[any], optional)\n    - sha1Checksum: (string, required)\n    - taskId: (any, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"downloadPath\": \"string\",\n      \"encrypted\": false,\n      \"fileFormat\": \"string\",\n      \"fileSize\": \"string\",\n      \"id\": \"string\",\n      \"md5Checksum\": \"string\",\n      \"name\": \"string\",\n      \"nameSpace\": \"string\",\n      \"sftpServerList\": [\n        \"any\"\n      ],\n      \"sha1Checksum\": \"string\",\n      \"taskId\": \"any\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Network Discovery",
					"item": [
						{
							"name": "Delete all discovery",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery"
									]
								},
								"description": "Stops all the discoveries and removes them\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery"
											]
										},
										"description": "Stops all the discoveries and removes them\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Start discovery",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cdpLevel\": 0,\n  \"discoveryType\": \"string\",\n  \"enablePasswordList\": [\n    \"string\"\n  ],\n  \"globalCredentialIdList\": [\n    \"string\"\n  ],\n  \"httpReadCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"httpWriteCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"ipAddressList\": \"string\",\n  \"ipFilterList\": [\n    \"string\"\n  ],\n  \"lldpLevel\": 0,\n  \"name\": \"string\",\n  \"netconfPort\": \"string\",\n  \"noAddNewDevice\": false,\n  \"parentDiscoveryId\": \"string\",\n  \"passwordList\": [\n    \"string\"\n  ],\n  \"preferredMgmtIPMethod\": \"string\",\n  \"protocolOrder\": \"string\",\n  \"reDiscovery\": false,\n  \"retry\": 0,\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpROCommunity\": \"string\",\n  \"snmpROCommunityDesc\": \"string\",\n  \"snmpRWCommunity\": \"string\",\n  \"snmpRWCommunityDesc\": \"string\",\n  \"snmpUserName\": \"string\",\n  \"snmpVersion\": \"string\",\n  \"timeout\": 0,\n  \"updateMgmtIp\": false,\n  \"userNameList\": [\n    \"string\"\n  ]\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery"
									]
								},
								"description": "Initiates discovery with the given parameters\n\n###### Request Model\n- root: (map, optional)\n  - cdpLevel: (integer, optional)\n  - discoveryType: (string, required)\n  - enablePasswordList: (array[string], optional)\n  - globalCredentialIdList: (array[string], optional)\n  - httpReadCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - httpWriteCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - ipAddressList: (string, required)\n  - ipFilterList: (array[string], optional)\n  - lldpLevel: (integer, optional)\n  - name: (string, required)\n  - netconfPort: (string, optional)\n  - noAddNewDevice: (boolean, optional)\n  - parentDiscoveryId: (string, optional)\n  - passwordList: (array[string], optional)\n  - preferredMgmtIPMethod: (string, optional)\n  - protocolOrder: (string, optional)\n  - reDiscovery: (boolean, optional)\n  - retry: (integer, optional)\n  - snmpAuthPassphrase: (string, optional)\n  - snmpAuthProtocol: (string, optional)\n  - snmpMode: (string, optional)\n  - snmpPrivPassphrase: (string, optional)\n  - snmpPrivProtocol: (string, optional)\n  - snmpROCommunity: (string, optional)\n  - snmpROCommunityDesc: (string, optional)\n  - snmpRWCommunity: (string, optional)\n  - snmpRWCommunityDesc: (string, optional)\n  - snmpUserName: (string, optional)\n  - snmpVersion: (string, required)\n  - timeout: (integer, optional)\n  - updateMgmtIp: (boolean, optional)\n  - userNameList: (array[string], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cdpLevel\": 0,\n  \"discoveryType\": \"string\",\n  \"enablePasswordList\": [\n    \"string\"\n  ],\n  \"globalCredentialIdList\": [\n    \"string\"\n  ],\n  \"httpReadCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"httpWriteCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"ipAddressList\": \"string\",\n  \"ipFilterList\": [\n    \"string\"\n  ],\n  \"lldpLevel\": 0,\n  \"name\": \"string\",\n  \"netconfPort\": \"string\",\n  \"noAddNewDevice\": false,\n  \"parentDiscoveryId\": \"string\",\n  \"passwordList\": [\n    \"string\"\n  ],\n  \"preferredMgmtIPMethod\": \"string\",\n  \"protocolOrder\": \"string\",\n  \"reDiscovery\": false,\n  \"retry\": 0,\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpROCommunity\": \"string\",\n  \"snmpROCommunityDesc\": \"string\",\n  \"snmpRWCommunity\": \"string\",\n  \"snmpRWCommunityDesc\": \"string\",\n  \"snmpUserName\": \"string\",\n  \"snmpVersion\": \"string\",\n  \"timeout\": 0,\n  \"updateMgmtIp\": false,\n  \"userNameList\": [\n    \"string\"\n  ]\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery"
											]
										},
										"description": "Initiates discovery with the given parameters\n\n###### Request Model\n- root: (map, optional)\n  - cdpLevel: (integer, optional)\n  - discoveryType: (string, required)\n  - enablePasswordList: (array[string], optional)\n  - globalCredentialIdList: (array[string], optional)\n  - httpReadCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - httpWriteCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - ipAddressList: (string, required)\n  - ipFilterList: (array[string], optional)\n  - lldpLevel: (integer, optional)\n  - name: (string, required)\n  - netconfPort: (string, optional)\n  - noAddNewDevice: (boolean, optional)\n  - parentDiscoveryId: (string, optional)\n  - passwordList: (array[string], optional)\n  - preferredMgmtIPMethod: (string, optional)\n  - protocolOrder: (string, optional)\n  - reDiscovery: (boolean, optional)\n  - retry: (integer, optional)\n  - snmpAuthPassphrase: (string, optional)\n  - snmpAuthProtocol: (string, optional)\n  - snmpMode: (string, optional)\n  - snmpPrivPassphrase: (string, optional)\n  - snmpPrivProtocol: (string, optional)\n  - snmpROCommunity: (string, optional)\n  - snmpROCommunityDesc: (string, optional)\n  - snmpRWCommunity: (string, optional)\n  - snmpRWCommunityDesc: (string, optional)\n  - snmpUserName: (string, optional)\n  - snmpVersion: (string, required)\n  - timeout: (integer, optional)\n  - updateMgmtIp: (boolean, optional)\n  - userNameList: (array[string], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Updates an existing discovery by specified Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributeInfo\": {\n    \n  },\n  \"cdpLevel\": 0,\n  \"deviceIds\": \"string\",\n  \"discoveryCondition\": \"string\",\n  \"discoveryStatus\": \"string\",\n  \"discoveryType\": \"string\",\n  \"enablePasswordList\": \"string\",\n  \"globalCredentialIdList\": [\n    \"string\"\n  ],\n  \"httpReadCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"httpWriteCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"id\": \"string\",\n  \"ipAddressList\": \"string\",\n  \"ipFilterList\": \"string\",\n  \"isAutoCdp\": false,\n  \"lldpLevel\": 0,\n  \"name\": \"string\",\n  \"netconfPort\": \"string\",\n  \"numDevices\": 0,\n  \"parentDiscoveryId\": \"string\",\n  \"passwordList\": \"string\",\n  \"preferredMgmtIPMethod\": \"string\",\n  \"protocolOrder\": \"string\",\n  \"retryCount\": 0,\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpRoCommunity\": \"string\",\n  \"snmpRoCommunityDesc\": \"string\",\n  \"snmpRwCommunity\": \"string\",\n  \"snmpRwCommunityDesc\": \"string\",\n  \"snmpUserName\": \"string\",\n  \"timeOut\": 0,\n  \"updateMgmtIp\": false,\n  \"userNameList\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery"
									]
								},
								"description": "Stops or starts an existing discovery\n\n###### Request Model\n- root: (map, optional)\n  - attributeInfo: (map, optional)\n  - cdpLevel: (integer, optional)\n  - deviceIds: (string, optional)\n  - discoveryCondition: (string, optional)\n  - discoveryStatus: (string, required)\n  - discoveryType: (string, optional)\n  - enablePasswordList: (string, optional)\n  - globalCredentialIdList: (array[string], optional)\n  - httpReadCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - httpWriteCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - id: (string, required)\n  - ipAddressList: (string, optional)\n  - ipFilterList: (string, optional)\n  - isAutoCdp: (boolean, optional)\n  - lldpLevel: (integer, optional)\n  - name: (string, optional)\n  - netconfPort: (string, optional)\n  - numDevices: (integer, optional)\n  - parentDiscoveryId: (string, optional)\n  - passwordList: (string, optional)\n  - preferredMgmtIPMethod: (string, optional)\n  - protocolOrder: (string, optional)\n  - retryCount: (integer, optional)\n  - snmpAuthPassphrase: (string, optional)\n  - snmpAuthProtocol: (string, optional)\n  - snmpMode: (string, optional)\n  - snmpPrivPassphrase: (string, optional)\n  - snmpPrivProtocol: (string, optional)\n  - snmpRoCommunity: (string, optional)\n  - snmpRoCommunityDesc: (string, optional)\n  - snmpRwCommunity: (string, optional)\n  - snmpRwCommunityDesc: (string, optional)\n  - snmpUserName: (string, optional)\n  - timeOut: (integer, optional)\n  - updateMgmtIp: (boolean, optional)\n  - userNameList: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributeInfo\": {\n    \n  },\n  \"cdpLevel\": 0,\n  \"deviceIds\": \"string\",\n  \"discoveryCondition\": \"string\",\n  \"discoveryStatus\": \"string\",\n  \"discoveryType\": \"string\",\n  \"enablePasswordList\": \"string\",\n  \"globalCredentialIdList\": [\n    \"string\"\n  ],\n  \"httpReadCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"httpWriteCredential\": {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  },\n  \"id\": \"string\",\n  \"ipAddressList\": \"string\",\n  \"ipFilterList\": \"string\",\n  \"isAutoCdp\": false,\n  \"lldpLevel\": 0,\n  \"name\": \"string\",\n  \"netconfPort\": \"string\",\n  \"numDevices\": 0,\n  \"parentDiscoveryId\": \"string\",\n  \"passwordList\": \"string\",\n  \"preferredMgmtIPMethod\": \"string\",\n  \"protocolOrder\": \"string\",\n  \"retryCount\": 0,\n  \"snmpAuthPassphrase\": \"string\",\n  \"snmpAuthProtocol\": \"string\",\n  \"snmpMode\": \"string\",\n  \"snmpPrivPassphrase\": \"string\",\n  \"snmpPrivProtocol\": \"string\",\n  \"snmpRoCommunity\": \"string\",\n  \"snmpRoCommunityDesc\": \"string\",\n  \"snmpRwCommunity\": \"string\",\n  \"snmpRwCommunityDesc\": \"string\",\n  \"snmpUserName\": \"string\",\n  \"timeOut\": 0,\n  \"updateMgmtIp\": false,\n  \"userNameList\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery"
											]
										},
										"description": "Stops or starts an existing discovery\n\n###### Request Model\n- root: (map, optional)\n  - attributeInfo: (map, optional)\n  - cdpLevel: (integer, optional)\n  - deviceIds: (string, optional)\n  - discoveryCondition: (string, optional)\n  - discoveryStatus: (string, required)\n  - discoveryType: (string, optional)\n  - enablePasswordList: (string, optional)\n  - globalCredentialIdList: (array[string], optional)\n  - httpReadCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - httpWriteCredential: (map, optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - password: (string, required)\n    - port: (integer, required)\n    - secure: (boolean, optional)\n    - username: (string, required)\n  - id: (string, required)\n  - ipAddressList: (string, optional)\n  - ipFilterList: (string, optional)\n  - isAutoCdp: (boolean, optional)\n  - lldpLevel: (integer, optional)\n  - name: (string, optional)\n  - netconfPort: (string, optional)\n  - numDevices: (integer, optional)\n  - parentDiscoveryId: (string, optional)\n  - passwordList: (string, optional)\n  - preferredMgmtIPMethod: (string, optional)\n  - protocolOrder: (string, optional)\n  - retryCount: (integer, optional)\n  - snmpAuthPassphrase: (string, optional)\n  - snmpAuthProtocol: (string, optional)\n  - snmpMode: (string, optional)\n  - snmpPrivPassphrase: (string, optional)\n  - snmpPrivProtocol: (string, optional)\n  - snmpRoCommunity: (string, optional)\n  - snmpRoCommunityDesc: (string, optional)\n  - snmpRwCommunity: (string, optional)\n  - snmpRwCommunityDesc: (string, optional)\n  - snmpUserName: (string, optional)\n  - timeOut: (integer, optional)\n  - updateMgmtIp: (boolean, optional)\n  - userNameList: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete discovery by Id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Discovery ID"
										}
									]
								},
								"description": "Stops the discovery for the given ID and removes it\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Discovery ID"
												}
											]
										},
										"description": "Stops the discovery for the given ID and removes it\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Discovery by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Discovery ID"
										}
									]
								},
								"description": "Returns discovery by ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - attributeInfo: (map, optional)\n    - cdpLevel: (integer, optional)\n    - deviceIds: (string, optional)\n    - discoveryCondition: (string, optional)\n    - discoveryStatus: (string, required)\n    - discoveryType: (string, optional)\n    - enablePasswordList: (string, optional)\n    - globalCredentialIdList: (array[string], optional)\n    - httpReadCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - httpWriteCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - id: (string, required)\n    - ipAddressList: (string, optional)\n    - ipFilterList: (string, optional)\n    - isAutoCdp: (boolean, optional)\n    - lldpLevel: (integer, optional)\n    - name: (string, optional)\n    - netconfPort: (string, optional)\n    - numDevices: (integer, optional)\n    - parentDiscoveryId: (string, optional)\n    - passwordList: (string, optional)\n    - preferredMgmtIPMethod: (string, optional)\n    - protocolOrder: (string, optional)\n    - retryCount: (integer, optional)\n    - snmpAuthPassphrase: (string, optional)\n    - snmpAuthProtocol: (string, optional)\n    - snmpMode: (string, optional)\n    - snmpPrivPassphrase: (string, optional)\n    - snmpPrivProtocol: (string, optional)\n    - snmpRoCommunity: (string, optional)\n    - snmpRoCommunityDesc: (string, optional)\n    - snmpRwCommunity: (string, optional)\n    - snmpRwCommunityDesc: (string, optional)\n    - snmpUserName: (string, optional)\n    - timeOut: (integer, optional)\n    - updateMgmtIp: (boolean, optional)\n    - userNameList: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Discovery ID"
												}
											]
										},
										"description": "Returns discovery by ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - attributeInfo: (map, optional)\n    - cdpLevel: (integer, optional)\n    - deviceIds: (string, optional)\n    - discoveryCondition: (string, optional)\n    - discoveryStatus: (string, required)\n    - discoveryType: (string, optional)\n    - enablePasswordList: (string, optional)\n    - globalCredentialIdList: (array[string], optional)\n    - httpReadCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - httpWriteCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - id: (string, required)\n    - ipAddressList: (string, optional)\n    - ipFilterList: (string, optional)\n    - isAutoCdp: (boolean, optional)\n    - lldpLevel: (integer, optional)\n    - name: (string, optional)\n    - netconfPort: (string, optional)\n    - numDevices: (integer, optional)\n    - parentDiscoveryId: (string, optional)\n    - passwordList: (string, optional)\n    - preferredMgmtIPMethod: (string, optional)\n    - protocolOrder: (string, optional)\n    - retryCount: (integer, optional)\n    - snmpAuthPassphrase: (string, optional)\n    - snmpAuthProtocol: (string, optional)\n    - snmpMode: (string, optional)\n    - snmpPrivPassphrase: (string, optional)\n    - snmpPrivProtocol: (string, optional)\n    - snmpRoCommunity: (string, optional)\n    - snmpRoCommunityDesc: (string, optional)\n    - snmpRwCommunity: (string, optional)\n    - snmpRwCommunityDesc: (string, optional)\n    - snmpUserName: (string, optional)\n    - timeOut: (integer, optional)\n    - updateMgmtIp: (boolean, optional)\n    - userNameList: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"attributeInfo\": {\n      \n    },\n    \"cdpLevel\": 0,\n    \"deviceIds\": \"string\",\n    \"discoveryCondition\": \"string\",\n    \"discoveryStatus\": \"string\",\n    \"discoveryType\": \"string\",\n    \"enablePasswordList\": \"string\",\n    \"globalCredentialIdList\": [\n      \"string\"\n    ],\n    \"httpReadCredential\": {\n      \"comments\": \"string\",\n      \"credentialType\": \"string\",\n      \"description\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"password\": \"string\",\n      \"port\": 0,\n      \"secure\": false,\n      \"username\": \"string\"\n    },\n    \"httpWriteCredential\": {\n      \"comments\": \"string\",\n      \"credentialType\": \"string\",\n      \"description\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"password\": \"string\",\n      \"port\": 0,\n      \"secure\": false,\n      \"username\": \"string\"\n    },\n    \"id\": \"string\",\n    \"ipAddressList\": \"string\",\n    \"ipFilterList\": \"string\",\n    \"isAutoCdp\": false,\n    \"lldpLevel\": 0,\n    \"name\": \"string\",\n    \"netconfPort\": \"string\",\n    \"numDevices\": 0,\n    \"parentDiscoveryId\": \"string\",\n    \"passwordList\": \"string\",\n    \"preferredMgmtIPMethod\": \"string\",\n    \"protocolOrder\": \"string\",\n    \"retryCount\": 0,\n    \"snmpAuthPassphrase\": \"string\",\n    \"snmpAuthProtocol\": \"string\",\n    \"snmpMode\": \"string\",\n    \"snmpPrivPassphrase\": \"string\",\n    \"snmpPrivProtocol\": \"string\",\n    \"snmpRoCommunity\": \"string\",\n    \"snmpRoCommunityDesc\": \"string\",\n    \"snmpRwCommunity\": \"string\",\n    \"snmpRwCommunityDesc\": \"string\",\n    \"snmpUserName\": \"string\",\n    \"timeOut\": 0,\n    \"updateMgmtIp\": false,\n    \"userNameList\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get list of discoveries by discovery Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id/job?offset=&limit=&ipAddress=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery",
										":id",
										"job"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "(integer, optional) offset"
										},
										{
											"key": "limit",
											"value": "",
											"description": "(integer, optional) limit"
										},
										{
											"key": "ipAddress",
											"value": "",
											"description": "(string, optional) ipAddress"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Discovery ID"
										}
									]
								},
								"description": "Returns the list of discovery jobs for the given id. The results can be optionally filtered based on IP\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cliStatus: (string, required)\n    - discoveryStatus: (string, required)\n    - endTime: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, optional)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - ipAddress: (string, required)\n    - jobStatus: (string, required)\n    - name: (string, required)\n    - netconfStatus: (string, required)\n    - pingStatus: (string, required)\n    - snmpStatus: (string, required)\n    - startTime: (string, required)\n    - taskId: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id/job?offset=&limit=&ipAddress=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery",
												":id",
												"job"
											],
											"query": [
												{
													"key": "offset",
													"value": "",
													"description": "(integer, optional) offset"
												},
												{
													"key": "limit",
													"value": "",
													"description": "(integer, optional) limit"
												},
												{
													"key": "ipAddress",
													"value": "",
													"description": "(string, optional) ipAddress"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Discovery ID"
												}
											]
										},
										"description": "Returns the list of discovery jobs for the given id. The results can be optionally filtered based on IP\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cliStatus: (string, required)\n    - discoveryStatus: (string, required)\n    - endTime: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, optional)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - ipAddress: (string, required)\n    - jobStatus: (string, required)\n    - name: (string, required)\n    - netconfStatus: (string, required)\n    - pingStatus: (string, required)\n    - snmpStatus: (string, required)\n    - startTime: (string, required)\n    - taskId: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"cliStatus\": \"string\",\n      \"discoveryStatus\": \"string\",\n      \"endTime\": \"string\",\n      \"httpStatus\": \"string\",\n      \"id\": \"string\",\n      \"inventoryCollectionStatus\": \"string\",\n      \"inventoryReachabilityStatus\": \"string\",\n      \"ipAddress\": \"string\",\n      \"jobStatus\": \"string\",\n      \"name\": \"string\",\n      \"netconfStatus\": \"string\",\n      \"pingStatus\": \"string\",\n      \"snmpStatus\": \"string\",\n      \"startTime\": \"string\",\n      \"taskId\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Discovered network devices by discovery Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id/network-device?taskId=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery",
										":id",
										"network-device"
									],
									"query": [
										{
											"key": "taskId",
											"value": "",
											"description": "(string, optional) taskId"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) id"
										}
									]
								},
								"description": "Returns the network devices discovered for the given discovery ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - anchorWlcForAp: (string, optional)\n    - authModelId: (string, optional)\n    - avgUpdateFrequency: (integer, optional)\n    - bootDateTime: (string, optional)\n    - cliStatus: (string, required)\n    - duplicateDeviceId: (string, optional)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, required)\n    - imageName: (string, optional)\n    - ingressQueueConfig: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - netconfStatus: (string, required)\n    - numUpdates: (integer, optional)\n    - pingStatus: (string, optional)\n    - platformId: (string, required)\n    - portRange: (string, optional)\n    - qosStatus: (string, optional)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - snmpStatus: (string, required)\n    - softwareVersion: (string, required)\n    - tag: (string, optional)\n    - tagCount: (integer, required)\n    - type: (string, required)\n    - upTime: (string, required)\n    - vendor: (string, optional)\n    - wlcApDeviceStatus: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id/network-device?taskId=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery",
												":id",
												"network-device"
											],
											"query": [
												{
													"key": "taskId",
													"value": "",
													"description": "(string, optional) taskId"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) id"
												}
											]
										},
										"description": "Returns the network devices discovered for the given discovery ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - anchorWlcForAp: (string, optional)\n    - authModelId: (string, optional)\n    - avgUpdateFrequency: (integer, optional)\n    - bootDateTime: (string, optional)\n    - cliStatus: (string, required)\n    - duplicateDeviceId: (string, optional)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, required)\n    - imageName: (string, optional)\n    - ingressQueueConfig: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - netconfStatus: (string, required)\n    - numUpdates: (integer, optional)\n    - pingStatus: (string, optional)\n    - platformId: (string, required)\n    - portRange: (string, optional)\n    - qosStatus: (string, optional)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - snmpStatus: (string, required)\n    - softwareVersion: (string, required)\n    - tag: (string, optional)\n    - tagCount: (integer, required)\n    - type: (string, required)\n    - upTime: (string, required)\n    - vendor: (string, optional)\n    - wlcApDeviceStatus: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"anchorWlcForAp\": \"string\",\n      \"authModelId\": \"string\",\n      \"avgUpdateFrequency\": 0,\n      \"bootDateTime\": \"string\",\n      \"cliStatus\": \"string\",\n      \"duplicateDeviceId\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorDescription\": \"string\",\n      \"family\": \"string\",\n      \"hostname\": \"string\",\n      \"httpStatus\": \"string\",\n      \"id\": \"string\",\n      \"imageName\": \"string\",\n      \"ingressQueueConfig\": \"string\",\n      \"interfaceCount\": \"string\",\n      \"inventoryCollectionStatus\": \"string\",\n      \"inventoryReachabilityStatus\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"lineCardCount\": \"string\",\n      \"lineCardId\": \"string\",\n      \"location\": \"string\",\n      \"locationName\": \"string\",\n      \"macAddress\": \"string\",\n      \"managementIpAddress\": \"string\",\n      \"memorySize\": \"string\",\n      \"netconfStatus\": \"string\",\n      \"numUpdates\": 0,\n      \"pingStatus\": \"string\",\n      \"platformId\": \"string\",\n      \"portRange\": \"string\",\n      \"qosStatus\": \"string\",\n      \"reachabilityFailureReason\": \"string\",\n      \"reachabilityStatus\": \"string\",\n      \"role\": \"string\",\n      \"roleSource\": \"string\",\n      \"serialNumber\": \"string\",\n      \"snmpContact\": \"string\",\n      \"snmpLocation\": \"string\",\n      \"snmpStatus\": \"string\",\n      \"softwareVersion\": \"string\",\n      \"tag\": \"string\",\n      \"tagCount\": 0,\n      \"type\": \"string\",\n      \"upTime\": \"string\",\n      \"vendor\": \"string\",\n      \"wlcApDeviceStatus\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Discovered devices by range",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id/network-device/:startIndex/:recordsToReturn?taskId=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery",
										":id",
										"network-device",
										":startIndex",
										":recordsToReturn"
									],
									"query": [
										{
											"key": "taskId",
											"value": "",
											"description": "(string, optional) taskId"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Discovery ID"
										},
										{
											"key": "startIndex",
											"value": "",
											"description": "(integer, required) Start index"
										},
										{
											"key": "recordsToReturn",
											"value": "",
											"description": "(integer, required) Number of records to return"
										}
									]
								},
								"description": "Returns the network devices discovered for the given discovery and for the given range. The maximum number of records that can be retrieved is 500\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - anchorWlcForAp: (string, optional)\n    - authModelId: (string, optional)\n    - avgUpdateFrequency: (integer, optional)\n    - bootDateTime: (string, optional)\n    - cliStatus: (string, required)\n    - duplicateDeviceId: (string, optional)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, required)\n    - imageName: (string, optional)\n    - ingressQueueConfig: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - netconfStatus: (string, required)\n    - numUpdates: (integer, optional)\n    - pingStatus: (string, optional)\n    - platformId: (string, required)\n    - portRange: (string, optional)\n    - qosStatus: (string, optional)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - snmpStatus: (string, required)\n    - softwareVersion: (string, required)\n    - tag: (string, optional)\n    - tagCount: (integer, required)\n    - type: (string, required)\n    - upTime: (string, required)\n    - vendor: (string, optional)\n    - wlcApDeviceStatus: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id/network-device/:startIndex/:recordsToReturn?taskId=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery",
												":id",
												"network-device",
												":startIndex",
												":recordsToReturn"
											],
											"query": [
												{
													"key": "taskId",
													"value": "",
													"description": "(string, optional) taskId"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Discovery ID"
												},
												{
													"key": "startIndex",
													"value": "",
													"description": "(integer, required) Start index"
												},
												{
													"key": "recordsToReturn",
													"value": "",
													"description": "(integer, required) Number of records to return"
												}
											]
										},
										"description": "Returns the network devices discovered for the given discovery and for the given range. The maximum number of records that can be retrieved is 500\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - anchorWlcForAp: (string, optional)\n    - authModelId: (string, optional)\n    - avgUpdateFrequency: (integer, optional)\n    - bootDateTime: (string, optional)\n    - cliStatus: (string, required)\n    - duplicateDeviceId: (string, optional)\n    - errorCode: (string, optional)\n    - errorDescription: (string, optional)\n    - family: (string, required)\n    - hostname: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, required)\n    - imageName: (string, optional)\n    - ingressQueueConfig: (string, optional)\n    - interfaceCount: (string, required)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - lastUpdated: (string, required)\n    - lineCardCount: (string, required)\n    - lineCardId: (string, required)\n    - location: (string, optional)\n    - locationName: (string, optional)\n    - macAddress: (string, required)\n    - managementIpAddress: (string, required)\n    - memorySize: (string, required)\n    - netconfStatus: (string, required)\n    - numUpdates: (integer, optional)\n    - pingStatus: (string, optional)\n    - platformId: (string, required)\n    - portRange: (string, optional)\n    - qosStatus: (string, optional)\n    - reachabilityFailureReason: (string, optional)\n    - reachabilityStatus: (string, required)\n    - role: (string, required)\n    - roleSource: (string, optional)\n    - serialNumber: (string, required)\n    - snmpContact: (string, optional)\n    - snmpLocation: (string, optional)\n    - snmpStatus: (string, required)\n    - softwareVersion: (string, required)\n    - tag: (string, optional)\n    - tagCount: (integer, required)\n    - type: (string, required)\n    - upTime: (string, required)\n    - vendor: (string, optional)\n    - wlcApDeviceStatus: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"anchorWlcForAp\": \"string\",\n      \"authModelId\": \"string\",\n      \"avgUpdateFrequency\": 0,\n      \"bootDateTime\": \"string\",\n      \"cliStatus\": \"string\",\n      \"duplicateDeviceId\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorDescription\": \"string\",\n      \"family\": \"string\",\n      \"hostname\": \"string\",\n      \"httpStatus\": \"string\",\n      \"id\": \"string\",\n      \"imageName\": \"string\",\n      \"ingressQueueConfig\": \"string\",\n      \"interfaceCount\": \"string\",\n      \"inventoryCollectionStatus\": \"string\",\n      \"inventoryReachabilityStatus\": \"string\",\n      \"lastUpdated\": \"string\",\n      \"lineCardCount\": \"string\",\n      \"lineCardId\": \"string\",\n      \"location\": \"string\",\n      \"locationName\": \"string\",\n      \"macAddress\": \"string\",\n      \"managementIpAddress\": \"string\",\n      \"memorySize\": \"string\",\n      \"netconfStatus\": \"string\",\n      \"numUpdates\": 0,\n      \"pingStatus\": \"string\",\n      \"platformId\": \"string\",\n      \"portRange\": \"string\",\n      \"qosStatus\": \"string\",\n      \"reachabilityFailureReason\": \"string\",\n      \"reachabilityStatus\": \"string\",\n      \"role\": \"string\",\n      \"roleSource\": \"string\",\n      \"serialNumber\": \"string\",\n      \"snmpContact\": \"string\",\n      \"snmpLocation\": \"string\",\n      \"snmpStatus\": \"string\",\n      \"softwareVersion\": \"string\",\n      \"tag\": \"string\",\n      \"tagCount\": 0,\n      \"type\": \"string\",\n      \"upTime\": \"string\",\n      \"vendor\": \"string\",\n      \"wlcApDeviceStatus\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Devices discovered by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id/network-device/count?taskId=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery",
										":id",
										"network-device",
										"count"
									],
									"query": [
										{
											"key": "taskId",
											"value": "",
											"description": "(string, optional) taskId"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Discovery ID"
										}
									]
								},
								"description": "Returns the count of network devices discovered in the given discovery\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id/network-device/count?taskId=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery",
												":id",
												"network-device",
												"count"
											],
											"query": [
												{
													"key": "taskId",
													"value": "",
													"description": "(string, optional) taskId"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Discovery ID"
												}
											]
										},
										"description": "Returns the count of network devices discovered in the given discovery\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get network devices from Discovery",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id/summary?taskId=&sortBy=&sortOrder=&ipAddress=&pingStatus=&snmpStatus=&cliStatus=&netconfStatus=&httpStatus=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery",
										":id",
										"summary"
									],
									"query": [
										{
											"key": "taskId",
											"value": "",
											"description": "(string, optional) taskId"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "(string, optional) sortBy"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "(string, optional) sortOrder"
										},
										{
											"key": "ipAddress",
											"value": "",
											"description": "(array, optional) ipAddress"
										},
										{
											"key": "pingStatus",
											"value": "",
											"description": "(array, optional) pingStatus"
										},
										{
											"key": "snmpStatus",
											"value": "",
											"description": "(array, optional) snmpStatus"
										},
										{
											"key": "cliStatus",
											"value": "",
											"description": "(array, optional) cliStatus"
										},
										{
											"key": "netconfStatus",
											"value": "",
											"description": "(array, optional) netconfStatus"
										},
										{
											"key": "httpStatus",
											"value": "",
											"description": "(array, optional) httpStatus"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) id"
										}
									]
								},
								"description": "Returns the network devices from a discovery job based on given filters\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:id/summary?taskId=&sortBy=&sortOrder=&ipAddress=&pingStatus=&snmpStatus=&cliStatus=&netconfStatus=&httpStatus=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery",
												":id",
												"summary"
											],
											"query": [
												{
													"key": "taskId",
													"value": "",
													"description": "(string, optional) taskId"
												},
												{
													"key": "sortBy",
													"value": "",
													"description": "(string, optional) sortBy"
												},
												{
													"key": "sortOrder",
													"value": "",
													"description": "(string, optional) sortOrder"
												},
												{
													"key": "ipAddress",
													"value": "",
													"description": "(array, optional) ipAddress"
												},
												{
													"key": "pingStatus",
													"value": "",
													"description": "(array, optional) pingStatus"
												},
												{
													"key": "snmpStatus",
													"value": "",
													"description": "(array, optional) snmpStatus"
												},
												{
													"key": "cliStatus",
													"value": "",
													"description": "(array, optional) cliStatus"
												},
												{
													"key": "netconfStatus",
													"value": "",
													"description": "(array, optional) netconfStatus"
												},
												{
													"key": "httpStatus",
													"value": "",
													"description": "(array, optional) httpStatus"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) id"
												}
											]
										},
										"description": "Returns the network devices from a discovery job based on given filters\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete discovery by specified range",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:startIndex/:recordsToDelete",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery",
										":startIndex",
										":recordsToDelete"
									],
									"variable": [
										{
											"key": "startIndex",
											"value": "",
											"description": "(integer, required) Start index"
										},
										{
											"key": "recordsToDelete",
											"value": "",
											"description": "(integer, required) Number of records to delete"
										}
									]
								},
								"description": "Stops discovery for the given range and removes them\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:startIndex/:recordsToDelete",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery",
												":startIndex",
												":recordsToDelete"
											],
											"variable": [
												{
													"key": "startIndex",
													"value": "",
													"description": "(integer, required) Start index"
												},
												{
													"key": "recordsToDelete",
													"value": "",
													"description": "(integer, required) Number of records to delete"
												}
											]
										},
										"description": "Stops discovery for the given range and removes them\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Discoveries by range",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:startIndex/:recordsToReturn",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery",
										":startIndex",
										":recordsToReturn"
									],
									"variable": [
										{
											"key": "startIndex",
											"value": "",
											"description": "(integer, required) Start index"
										},
										{
											"key": "recordsToReturn",
											"value": "",
											"description": "(integer, required) Number of records to return"
										}
									]
								},
								"description": "Returns the discovery by specified range\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cdpLevel: (integer, optional)\n    - deviceIds: (string, optional)\n    - discoveryCondition: (string, optional)\n    - discoveryStatus: (string, required)\n    - discoveryType: (string, optional)\n    - enablePasswordList: (string, optional)\n    - globalCredentialIdList: (array[string], optional)\n    - httpReadCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - httpWriteCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - id: (string, required)\n    - ipAddressList: (string, optional)\n    - ipFilterList: (string, optional)\n    - isAutoCdp: (boolean, optional)\n    - lldpLevel: (integer, optional)\n    - name: (string, optional)\n    - netconfPort: (string, optional)\n    - numDevices: (integer, optional)\n    - parentDiscoveryId: (string, optional)\n    - passwordList: (string, optional)\n    - preferredMgmtIPMethod: (string, optional)\n    - protocolOrder: (string, optional)\n    - retryCount: (integer, optional)\n    - snmpAuthPassphrase: (string, optional)\n    - snmpAuthProtocol: (string, optional)\n    - snmpMode: (string, optional)\n    - snmpPrivPassphrase: (string, optional)\n    - snmpPrivProtocol: (string, optional)\n    - snmpRoCommunity: (string, optional)\n    - snmpRoCommunityDesc: (string, optional)\n    - snmpRwCommunity: (string, optional)\n    - snmpRwCommunityDesc: (string, optional)\n    - snmpUserName: (string, optional)\n    - timeOut: (integer, optional)\n    - updateMgmtIp: (boolean, optional)\n    - userNameList: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/:startIndex/:recordsToReturn",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery",
												":startIndex",
												":recordsToReturn"
											],
											"variable": [
												{
													"key": "startIndex",
													"value": "",
													"description": "(integer, required) Start index"
												},
												{
													"key": "recordsToReturn",
													"value": "",
													"description": "(integer, required) Number of records to return"
												}
											]
										},
										"description": "Returns the discovery by specified range\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cdpLevel: (integer, optional)\n    - deviceIds: (string, optional)\n    - discoveryCondition: (string, optional)\n    - discoveryStatus: (string, required)\n    - discoveryType: (string, optional)\n    - enablePasswordList: (string, optional)\n    - globalCredentialIdList: (array[string], optional)\n    - httpReadCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - httpWriteCredential: (map, optional)\n      - comments: (string, optional)\n      - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n      - description: (string, optional)\n      - id: (string, optional)\n      - instanceTenantId: (string, optional)\n      - instanceUuid: (string, optional)\n      - password: (string, required)\n      - port: (integer, required)\n      - secure: (boolean, optional)\n      - username: (string, required)\n    - id: (string, required)\n    - ipAddressList: (string, optional)\n    - ipFilterList: (string, optional)\n    - isAutoCdp: (boolean, optional)\n    - lldpLevel: (integer, optional)\n    - name: (string, optional)\n    - netconfPort: (string, optional)\n    - numDevices: (integer, optional)\n    - parentDiscoveryId: (string, optional)\n    - passwordList: (string, optional)\n    - preferredMgmtIPMethod: (string, optional)\n    - protocolOrder: (string, optional)\n    - retryCount: (integer, optional)\n    - snmpAuthPassphrase: (string, optional)\n    - snmpAuthProtocol: (string, optional)\n    - snmpMode: (string, optional)\n    - snmpPrivPassphrase: (string, optional)\n    - snmpPrivProtocol: (string, optional)\n    - snmpRoCommunity: (string, optional)\n    - snmpRoCommunityDesc: (string, optional)\n    - snmpRwCommunity: (string, optional)\n    - snmpRwCommunityDesc: (string, optional)\n    - snmpUserName: (string, optional)\n    - timeOut: (integer, optional)\n    - updateMgmtIp: (boolean, optional)\n    - userNameList: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"cdpLevel\": 0,\n      \"deviceIds\": \"string\",\n      \"discoveryCondition\": \"string\",\n      \"discoveryStatus\": \"string\",\n      \"discoveryType\": \"string\",\n      \"enablePasswordList\": \"string\",\n      \"globalCredentialIdList\": [\n        \"string\"\n      ],\n      \"httpReadCredential\": {\n        \"comments\": \"string\",\n        \"credentialType\": \"string\",\n        \"description\": \"string\",\n        \"id\": \"string\",\n        \"instanceTenantId\": \"string\",\n        \"instanceUuid\": \"string\",\n        \"password\": \"string\",\n        \"port\": 0,\n        \"secure\": false,\n        \"username\": \"string\"\n      },\n      \"httpWriteCredential\": {\n        \"comments\": \"string\",\n        \"credentialType\": \"string\",\n        \"description\": \"string\",\n        \"id\": \"string\",\n        \"instanceTenantId\": \"string\",\n        \"instanceUuid\": \"string\",\n        \"password\": \"string\",\n        \"port\": 0,\n        \"secure\": false,\n        \"username\": \"string\"\n      },\n      \"id\": \"string\",\n      \"ipAddressList\": \"string\",\n      \"ipFilterList\": \"string\",\n      \"isAutoCdp\": false,\n      \"lldpLevel\": 0,\n      \"name\": \"string\",\n      \"netconfPort\": \"string\",\n      \"numDevices\": 0,\n      \"parentDiscoveryId\": \"string\",\n      \"passwordList\": \"string\",\n      \"preferredMgmtIPMethod\": \"string\",\n      \"protocolOrder\": \"string\",\n      \"retryCount\": 0,\n      \"snmpAuthPassphrase\": \"string\",\n      \"snmpAuthProtocol\": \"string\",\n      \"snmpMode\": \"string\",\n      \"snmpPrivPassphrase\": \"string\",\n      \"snmpPrivProtocol\": \"string\",\n      \"snmpRoCommunity\": \"string\",\n      \"snmpRoCommunityDesc\": \"string\",\n      \"snmpRwCommunity\": \"string\",\n      \"snmpRwCommunityDesc\": \"string\",\n      \"snmpUserName\": \"string\",\n      \"timeOut\": 0,\n      \"updateMgmtIp\": false,\n      \"userNameList\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get count of all discovery jobs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/count",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery",
										"count"
									]
								},
								"description": "Returns the count of all available discovery jobs\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/count",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery",
												"count"
											]
										},
										"description": "Returns the count of all available discovery jobs\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Discovery jobs by IP",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/job?offset=&limit=&ipAddress=&name=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"discovery",
										"job"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "(integer, optional) offset"
										},
										{
											"key": "limit",
											"value": "",
											"description": "(integer, optional) limit"
										},
										{
											"key": "ipAddress",
											"value": "",
											"description": "(string, required) ipAddress"
										},
										{
											"key": "name",
											"value": "",
											"description": "(string, optional) name"
										}
									]
								},
								"description": "Returns the list of discovery jobs for the given IP\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cliStatus: (string, required)\n    - discoveryStatus: (string, required)\n    - endTime: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, optional)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - ipAddress: (string, required)\n    - jobStatus: (string, required)\n    - name: (string, required)\n    - netconfStatus: (string, required)\n    - pingStatus: (string, required)\n    - snmpStatus: (string, required)\n    - startTime: (string, required)\n    - taskId: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/discovery/job?offset=&limit=&ipAddress=&name=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"discovery",
												"job"
											],
											"query": [
												{
													"key": "offset",
													"value": "",
													"description": "(integer, optional) offset"
												},
												{
													"key": "limit",
													"value": "",
													"description": "(integer, optional) limit"
												},
												{
													"key": "ipAddress",
													"value": "",
													"description": "(string, required) ipAddress"
												},
												{
													"key": "name",
													"value": "",
													"description": "(string, optional) name"
												}
											]
										},
										"description": "Returns the list of discovery jobs for the given IP\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - attributeInfo: (map, optional)\n    - cliStatus: (string, required)\n    - discoveryStatus: (string, required)\n    - endTime: (string, required)\n    - httpStatus: (string, required)\n    - id: (string, optional)\n    - inventoryCollectionStatus: (string, required)\n    - inventoryReachabilityStatus: (string, required)\n    - ipAddress: (string, required)\n    - jobStatus: (string, required)\n    - name: (string, required)\n    - netconfStatus: (string, required)\n    - pingStatus: (string, required)\n    - snmpStatus: (string, required)\n    - startTime: (string, required)\n    - taskId: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"attributeInfo\": {\n        \n      },\n      \"cliStatus\": \"string\",\n      \"discoveryStatus\": \"string\",\n      \"endTime\": \"string\",\n      \"httpStatus\": \"string\",\n      \"id\": \"string\",\n      \"inventoryCollectionStatus\": \"string\",\n      \"inventoryReachabilityStatus\": \"string\",\n      \"ipAddress\": \"string\",\n      \"jobStatus\": \"string\",\n      \"name\": \"string\",\n      \"netconfStatus\": \"string\",\n      \"pingStatus\": \"string\",\n      \"snmpStatus\": \"string\",\n      \"startTime\": \"string\",\n      \"taskId\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Global credentials",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential?credentialSubType=&sortBy=&order=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential"
									],
									"query": [
										{
											"key": "credentialSubType",
											"value": "",
											"description": "(string, optional) Credential type as CLI / SNMPV2_READ_COMMUNITY / SNMPV2_WRITE_COMMUNITY / SNMPV3 / HTTP_WRITE / HTTP_READ / NETCONF"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "(string, optional) sortBy"
										},
										{
											"key": "order",
											"value": "",
											"description": "(string, optional) order"
										}
									]
								},
								"description": "Returns global credential for the given credential sub type\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential?credentialSubType=&sortBy=&order=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential"
											],
											"query": [
												{
													"key": "credentialSubType",
													"value": "",
													"description": "(string, optional) Credential type as CLI / SNMPV2_READ_COMMUNITY / SNMPV2_WRITE_COMMUNITY / SNMPV3 / HTTP_WRITE / HTTP_READ / NETCONF"
												},
												{
													"key": "sortBy",
													"value": "",
													"description": "(string, optional) sortBy"
												},
												{
													"key": "order",
													"value": "",
													"description": "(string, optional) order"
												}
											]
										},
										"description": "Returns global credential for the given credential sub type\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - comments: (string, optional)\n    - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n    - description: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"comments\": \"string\",\n      \"credentialType\": \"string\",\n      \"description\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete global credentials by Id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/:globalCredentialId",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										":globalCredentialId"
									],
									"variable": [
										{
											"key": "globalCredentialId",
											"value": "",
											"description": "(string, required) ID of global-credential"
										}
									]
								},
								"description": "Deletes global credential for the given ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/:globalCredentialId",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												":globalCredentialId"
											],
											"variable": [
												{
													"key": "globalCredentialId",
													"value": "",
													"description": "(string, required) ID of global-credential"
												}
											]
										},
										"description": "Deletes global credential for the given ID\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update global credentials",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"siteUuids\": [\n    \"string\"\n  ]\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/:globalCredentialId",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										":globalCredentialId"
									],
									"variable": [
										{
											"key": "globalCredentialId",
											"value": "",
											"description": "(string, required) Global credential Uuid"
										}
									]
								},
								"description": "Update global credential for network devices in site(s)\n\n###### Request Model\n- root: (map, optional)\n  - siteUuids: (array[string], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"siteUuids\": [\n    \"string\"\n  ]\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/:globalCredentialId",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												":globalCredentialId"
											],
											"variable": [
												{
													"key": "globalCredentialId",
													"value": "",
													"description": "(string, required) Global credential Uuid"
												}
											]
										},
										"description": "Update global credential for network devices in site(s)\n\n###### Request Model\n- root: (map, optional)\n  - siteUuids: (array[string], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Credential sub type by credential Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) Global Credential ID"
										}
									]
								},
								"description": "Returns the credential sub type for the given Id\n\n###### Response Model\n- root: (map, optional)\n  - response: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) Global Credential ID"
												}
											]
										},
										"description": "Returns the credential sub type for the given Id\n\n###### Response Model\n- root: (map, optional)\n  - response: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": \"string\",\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Create CLI credentials",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"enablePassword\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"username\": \"string\"\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/cli",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"cli"
									]
								},
								"description": "Adds global CLI credential\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - enablePassword: (string, required)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"enablePassword\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"username\": \"string\"\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/cli",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"cli"
											]
										},
										"description": "Adds global CLI credential\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - enablePassword: (string, required)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update CLI credentials",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"enablePassword\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"password\": \"string\",\n  \"username\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/cli",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"cli"
									]
								},
								"description": "Updates global CLI credentials\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - enablePassword: (string, required)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"enablePassword\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"password\": \"string\",\n  \"username\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/cli",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"cli"
											]
										},
										"description": "Updates global CLI credentials\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - enablePassword: (string, required)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Create HTTP read credentials",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/http-read",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"http-read"
									]
								},
								"description": "Adds HTTP read credentials\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/http-read",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"http-read"
											]
										},
										"description": "Adds HTTP read credentials\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update HTTP read credential",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"password\": \"string\",\n  \"port\": 0,\n  \"secure\": false,\n  \"username\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/http-read",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"http-read"
									]
								},
								"description": "Updates global HTTP Read credential\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"password\": \"string\",\n  \"port\": 0,\n  \"secure\": false,\n  \"username\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/http-read",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"http-read"
											]
										},
										"description": "Updates global HTTP Read credential\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Create HTTP write credentials",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/http-write",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"http-write"
									]
								},
								"description": "Adds global HTTP write credentials\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"password\": \"string\",\n    \"port\": 0,\n    \"secure\": false,\n    \"username\": \"string\"\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/http-write",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"http-write"
											]
										},
										"description": "Adds global HTTP write credentials\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update HTTP write credentials",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"password\": \"string\",\n  \"port\": 0,\n  \"secure\": false,\n  \"username\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/http-write",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"http-write"
									]
								},
								"description": "Updates global HTTP write credentials\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"password\": \"string\",\n  \"port\": 0,\n  \"secure\": false,\n  \"username\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/http-write",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"http-write"
											]
										},
										"description": "Updates global HTTP write credentials\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - password: (string, required)\n  - port: (integer, required)\n  - secure: (boolean, optional)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Create Netconf credentials",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"netconfPort\": \"string\"\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/netconf",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"netconf"
									]
								},
								"description": "Adds global netconf credentials\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - netconfPort: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"netconfPort\": \"string\"\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/netconf",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"netconf"
											]
										},
										"description": "Adds global netconf credentials\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - netconfPort: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update Netconf credentials",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"netconfPort\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/netconf",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"netconf"
									]
								},
								"description": "Updates global netconf credentials\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - netconfPort: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"netconfPort\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/netconf",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"netconf"
											]
										},
										"description": "Updates global netconf credentials\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - netconfPort: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Create SNMP read community",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"readCommunity\": \"string\"\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv2-read-community",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"snmpv2-read-community"
									]
								},
								"description": "Adds global SNMP read community\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - readCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"readCommunity\": \"string\"\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv2-read-community",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"snmpv2-read-community"
											]
										},
										"description": "Adds global SNMP read community\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - readCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update SNMP read community",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"readCommunity\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv2-read-community",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"snmpv2-read-community"
									]
								},
								"description": "Updates global SNMP read community\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - readCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"readCommunity\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv2-read-community",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"snmpv2-read-community"
											]
										},
										"description": "Updates global SNMP read community\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - readCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Create SNMP write community",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"writeCommunity\": \"string\"\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv2-write-community",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"snmpv2-write-community"
									]
								},
								"description": "Adds global SNMP write community\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - writeCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"writeCommunity\": \"string\"\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv2-write-community",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"snmpv2-write-community"
											]
										},
										"description": "Adds global SNMP write community\n\n###### Request Model\n- root: (array[map], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - writeCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update SNMP write community",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"writeCommunity\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv2-write-community",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"snmpv2-write-community"
									]
								},
								"description": "Updates global SNMP write community\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - writeCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"writeCommunity\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv2-write-community",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"snmpv2-write-community"
											]
										},
										"description": "Updates global SNMP write community\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - writeCommunity: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Create SNMPv3 credentials",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"authPassword\": \"string\",\n    \"authType\": \"string\",\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"privacyPassword\": \"string\",\n    \"privacyType\": \"string\",\n    \"snmpMode\": \"string\",\n    \"username\": \"string\"\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv3",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"snmpv3"
									]
								},
								"description": "Adds global SNMPv3 credentials\n\n###### Request Model\n- root: (array[map], optional)\n  - authPassword: (string, optional)\n  - authType: (enum[\"SHA\",\"MD5\"], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - privacyPassword: (string, optional)\n  - privacyType: (enum[\"DES\",\"AES128\"], optional)\n  - snmpMode: (enum[\"AUTHPRIV\",\"AUTHNOPRIV\",\"NOAUTHNOPRIV\"], required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"authPassword\": \"string\",\n    \"authType\": \"string\",\n    \"comments\": \"string\",\n    \"credentialType\": \"string\",\n    \"description\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"privacyPassword\": \"string\",\n    \"privacyType\": \"string\",\n    \"snmpMode\": \"string\",\n    \"username\": \"string\"\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv3",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"snmpv3"
											]
										},
										"description": "Adds global SNMPv3 credentials\n\n###### Request Model\n- root: (array[map], optional)\n  - authPassword: (string, optional)\n  - authType: (enum[\"SHA\",\"MD5\"], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - privacyPassword: (string, optional)\n  - privacyType: (enum[\"DES\",\"AES128\"], optional)\n  - snmpMode: (enum[\"AUTHPRIV\",\"AUTHNOPRIV\",\"NOAUTHNOPRIV\"], required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update SNMPv3 credentials",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authPassword\": \"string\",\n  \"authType\": \"string\",\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"privacyPassword\": \"string\",\n  \"privacyType\": \"string\",\n  \"snmpMode\": \"string\",\n  \"username\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv3",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"global-credential",
										"snmpv3"
									]
								},
								"description": "Updates global SNMPv3 credential\n\n###### Request Model\n- root: (map, optional)\n  - authPassword: (string, optional)\n  - authType: (enum[\"SHA\",\"MD5\"], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - privacyPassword: (string, optional)\n  - privacyType: (enum[\"DES\",\"AES128\"], optional)\n  - snmpMode: (enum[\"AUTHPRIV\",\"AUTHNOPRIV\",\"NOAUTHNOPRIV\"], required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authPassword\": \"string\",\n  \"authType\": \"string\",\n  \"comments\": \"string\",\n  \"credentialType\": \"string\",\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"instanceTenantId\": \"string\",\n  \"instanceUuid\": \"string\",\n  \"privacyPassword\": \"string\",\n  \"privacyType\": \"string\",\n  \"snmpMode\": \"string\",\n  \"username\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/global-credential/snmpv3",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"global-credential",
												"snmpv3"
											]
										},
										"description": "Updates global SNMPv3 credential\n\n###### Request Model\n- root: (map, optional)\n  - authPassword: (string, optional)\n  - authType: (enum[\"SHA\",\"MD5\"], optional)\n  - comments: (string, optional)\n  - credentialType: (enum[\"GLOBAL\",\"APP\"], optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - privacyPassword: (string, optional)\n  - privacyType: (enum[\"DES\",\"AES128\"], optional)\n  - snmpMode: (enum[\"AUTHPRIV\",\"AUTHNOPRIV\",\"NOAUTHNOPRIV\"], required)\n  - username: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get SNMP properties",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/snmp-property",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"snmp-property"
									]
								},
								"description": "Returns SNMP properties\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - intValue: (integer, optional)\n    - systemPropertyName: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/snmp-property",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"snmp-property"
											]
										},
										"description": "Returns SNMP properties\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - instanceUuid: (string, optional)\n    - intValue: (integer, optional)\n    - systemPropertyName: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"instanceUuid\": \"string\",\n      \"intValue\": 0,\n      \"systemPropertyName\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Create/Update SNMP properties",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"intValue\": 0,\n    \"systemPropertyName\": \"string\"\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/snmp-property",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"snmp-property"
									]
								},
								"description": "Adds SNMP properties\n\n###### Request Model\n- root: (array[map], optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - intValue: (integer, optional)\n  - systemPropertyName: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"instanceUuid\": \"string\",\n    \"intValue\": 0,\n    \"systemPropertyName\": \"string\"\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/snmp-property",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"snmp-property"
											]
										},
										"description": "Adds SNMP properties\n\n###### Request Model\n- root: (array[map], optional)\n  - id: (string, optional)\n  - instanceTenantId: (string, optional)\n  - instanceUuid: (string, optional)\n  - intValue: (integer, optional)\n  - systemPropertyName: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Path Trace",
					"item": [
						{
							"name": "Retrives all previous Pathtraces summary",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/flow-analysis?periodicRefresh=&sourceIP=&destIP=&sourcePort=&destPort=&gtCreateTime=&ltCreateTime=&protocol=&status=&taskId=&lastUpdateTime=&limit=&offset=&order=&sortBy=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"flow-analysis"
									],
									"query": [
										{
											"key": "periodicRefresh",
											"value": "",
											"description": "(boolean, optional) Is analysis periodically refreshed?"
										},
										{
											"key": "sourceIP",
											"value": "",
											"description": "(string, optional) Source IP address"
										},
										{
											"key": "destIP",
											"value": "",
											"description": "(string, optional) Destination IP adress"
										},
										{
											"key": "sourcePort",
											"value": "",
											"description": "(string, optional) Source port"
										},
										{
											"key": "destPort",
											"value": "",
											"description": "(string, optional) Destination port"
										},
										{
											"key": "gtCreateTime",
											"value": "",
											"description": "(string, optional) Analyses requested after this time"
										},
										{
											"key": "ltCreateTime",
											"value": "",
											"description": "(string, optional) Analyses requested before this time"
										},
										{
											"key": "protocol",
											"value": "",
											"description": "(string, optional) Protocol"
										},
										{
											"key": "status",
											"value": "",
											"description": "(string, optional) Status"
										},
										{
											"key": "taskId",
											"value": "",
											"description": "(string, optional) Task ID"
										},
										{
											"key": "lastUpdateTime",
											"value": "",
											"description": "(string, optional) Last update time"
										},
										{
											"key": "limit",
											"value": "",
											"description": "(string, optional) Number of resources returned"
										},
										{
											"key": "offset",
											"value": "",
											"description": "(string, optional) Start index of resources returned (1-based)"
										},
										{
											"key": "order",
											"value": "",
											"description": "(string, optional) Order by this field"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "(string, optional) Sort by this field"
										}
									]
								},
								"description": "Returns a summary of all flow analyses stored. Results can be filtered by specified parameters.\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - controlPath: (boolean, optional)\n    - createTime: (integer, required)\n    - destIP: (string, required)\n    - destPort: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - inclusions: (array[string], optional)\n    - lastUpdateTime: (integer, required)\n    - periodicRefresh: (boolean, optional)\n    - protocol: (string, optional)\n    - sourceIP: (string, required)\n    - sourcePort: (string, optional)\n    - status: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/flow-analysis?periodicRefresh=&sourceIP=&destIP=&sourcePort=&destPort=&gtCreateTime=&ltCreateTime=&protocol=&status=&taskId=&lastUpdateTime=&limit=&offset=&order=&sortBy=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"flow-analysis"
											],
											"query": [
												{
													"key": "periodicRefresh",
													"value": "",
													"description": "(boolean, optional) Is analysis periodically refreshed?"
												},
												{
													"key": "sourceIP",
													"value": "",
													"description": "(string, optional) Source IP address"
												},
												{
													"key": "destIP",
													"value": "",
													"description": "(string, optional) Destination IP adress"
												},
												{
													"key": "sourcePort",
													"value": "",
													"description": "(string, optional) Source port"
												},
												{
													"key": "destPort",
													"value": "",
													"description": "(string, optional) Destination port"
												},
												{
													"key": "gtCreateTime",
													"value": "",
													"description": "(string, optional) Analyses requested after this time"
												},
												{
													"key": "ltCreateTime",
													"value": "",
													"description": "(string, optional) Analyses requested before this time"
												},
												{
													"key": "protocol",
													"value": "",
													"description": "(string, optional) Protocol"
												},
												{
													"key": "status",
													"value": "",
													"description": "(string, optional) Status"
												},
												{
													"key": "taskId",
													"value": "",
													"description": "(string, optional) Task ID"
												},
												{
													"key": "lastUpdateTime",
													"value": "",
													"description": "(string, optional) Last update time"
												},
												{
													"key": "limit",
													"value": "",
													"description": "(string, optional) Number of resources returned"
												},
												{
													"key": "offset",
													"value": "",
													"description": "(string, optional) Start index of resources returned (1-based)"
												},
												{
													"key": "order",
													"value": "",
													"description": "(string, optional) Order by this field"
												},
												{
													"key": "sortBy",
													"value": "",
													"description": "(string, optional) Sort by this field"
												}
											]
										},
										"description": "Returns a summary of all flow analyses stored. Results can be filtered by specified parameters.\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - controlPath: (boolean, optional)\n    - createTime: (integer, required)\n    - destIP: (string, required)\n    - destPort: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - inclusions: (array[string], optional)\n    - lastUpdateTime: (integer, required)\n    - periodicRefresh: (boolean, optional)\n    - protocol: (string, optional)\n    - sourceIP: (string, required)\n    - sourcePort: (string, optional)\n    - status: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"controlPath\": false,\n      \"createTime\": 0,\n      \"destIP\": \"string\",\n      \"destPort\": \"string\",\n      \"failureReason\": \"string\",\n      \"id\": \"string\",\n      \"inclusions\": [\n        \"string\"\n      ],\n      \"lastUpdateTime\": 0,\n      \"periodicRefresh\": false,\n      \"protocol\": \"string\",\n      \"sourceIP\": \"string\",\n      \"sourcePort\": \"string\",\n      \"status\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Initiate a new Pathtrace",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"controlPath\": false,\n  \"destIP\": \"string\",\n  \"destPort\": \"string\",\n  \"inclusions\": [\n    \"string\"\n  ],\n  \"periodicRefresh\": false,\n  \"protocol\": \"string\",\n  \"sourceIP\": \"string\",\n  \"sourcePort\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/flow-analysis",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"flow-analysis"
									]
								},
								"description": "Initiates a new flow analysis with periodic refresh and stat collection options. Returns a request id and a task id to get results and follow progress.\n\n###### Request Model\n- root: (map, optional)\n  - controlPath: (boolean, optional)\n  - destIP: (string, required)\n  - destPort: (string, optional)\n  - inclusions: (array[string], optional)\n  - periodicRefresh: (boolean, optional)\n  - protocol: (string, optional)\n  - sourceIP: (string, required)\n  - sourcePort: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - flowAnalysisId: (string, optional)\n    - taskId: (string, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"controlPath\": false,\n  \"destIP\": \"string\",\n  \"destPort\": \"string\",\n  \"inclusions\": [\n    \"string\"\n  ],\n  \"periodicRefresh\": false,\n  \"protocol\": \"string\",\n  \"sourceIP\": \"string\",\n  \"sourcePort\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/flow-analysis",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"flow-analysis"
											]
										},
										"description": "Initiates a new flow analysis with periodic refresh and stat collection options. Returns a request id and a task id to get results and follow progress.\n\n###### Request Model\n- root: (map, optional)\n  - controlPath: (boolean, optional)\n  - destIP: (string, required)\n  - destPort: (string, optional)\n  - inclusions: (array[string], optional)\n  - periodicRefresh: (boolean, optional)\n  - protocol: (string, optional)\n  - sourceIP: (string, required)\n  - sourcePort: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - flowAnalysisId: (string, optional)\n    - taskId: (string, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"flowAnalysisId\": \"string\",\n    \"taskId\": \"string\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Deletes Pathtrace by Id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/flow-analysis/:flowAnalysisId",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"flow-analysis",
										":flowAnalysisId"
									],
									"variable": [
										{
											"key": "flowAnalysisId",
											"value": "",
											"description": "(string, required) Flow analysis request id"
										}
									]
								},
								"description": "Deletes a flow analysis request by its id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/flow-analysis/:flowAnalysisId",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"flow-analysis",
												":flowAnalysisId"
											],
											"variable": [
												{
													"key": "flowAnalysisId",
													"value": "",
													"description": "(string, required) Flow analysis request id"
												}
											]
										},
										"description": "Deletes a flow analysis request by its id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Retrieves previous Pathtrace",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/flow-analysis/:flowAnalysisId",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"flow-analysis",
										":flowAnalysisId"
									],
									"variable": [
										{
											"key": "flowAnalysisId",
											"value": "",
											"description": "(string, required) Flow analysis request id"
										}
									]
								},
								"description": "Returns result of a previously requested flow analysis by its Flow Analysis id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - detailedStatus: (map, required)\n      - aclTraceCalculation: (string, optional)\n      - aclTraceCalculationFailureReason: (string, optional)\n    - lastUpdate: (string, optional)\n    - networkElements: (array[map], optional)\n      - accuracyList: (array[map], optional)\n        - percent: (integer, optional)\n        - reason: (string, optional)\n      - detailedStatus: (map, optional)\n        - aclTraceCalculation: (string, optional)\n        - aclTraceCalculationFailureReason: (string, optional)\n      - deviceStatistics: (map, optional)\n        - cpuStatistics: (map, required)\n          - fiveMinUsageInPercentage: (number, optional)\n          - fiveSecsUsageInPercentage: (number, optional)\n          - oneMinUsageInPercentage: (number, optional)\n          - refreshedAt: (integer, optional)\n        - memoryStatistics: (map, required)\n          - memoryUsage: (integer, optional)\n          - refreshedAt: (integer, optional)\n          - totalMemory: (integer, optional)\n      - deviceStatsCollection: (string, required)\n      - deviceStatsCollectionFailureReason: (string, optional)\n      - egressPhysicalInterface: (map, required)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - egressVirtualInterface: (map, optional)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - flexConnect: (map, optional)\n        - authentication: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - dataSwitching: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - egressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - ingressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - wirelessLanControllerId: (string, optional)\n        - wirelessLanControllerName: (string, optional)\n      - id: (string, required)\n      - ingressPhysicalInterface: (map, required)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - ingressVirtualInterface: (map, optional)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - ip: (string, required)\n      - linkInformationSource: (string, required)\n      - name: (string, required)\n      - perfMonCollection: (string, required)\n      - perfMonCollectionFailureReason: (string, optional)\n      - perfMonStatistics: (array[map], optional)\n        - byteRate: (integer, optional)\n        - destIpAddress: (string, optional)\n        - destPort: (string, optional)\n        - inputInterface: (string, optional)\n        - ipv4DSCP: (string, optional)\n        - ipv4TTL: (integer, optional)\n        - outputInterface: (string, optional)\n        - packetBytes: (integer, optional)\n        - packetCount: (integer, optional)\n        - packetLoss: (integer, optional)\n        - packetLossPercentage: (number, optional)\n        - protocol: (string, optional)\n        - refreshedAt: (integer, optional)\n        - rtpJitterMax: (integer, optional)\n        - rtpJitterMean: (integer, optional)\n        - rtpJitterMin: (integer, optional)\n        - sourceIpAddress: (string, optional)\n        - sourcePort: (string, optional)\n      - role: (string, required)\n      - ssid: (string, optional)\n      - tunnels: (array[string], required)\n      - type: (string, required)\n      - wlanId: (string, optional)\n    - networkElementsInfo: (array[map], required)\n      - accuracyList: (array[map], optional)\n        - percent: (integer, optional)\n        - reason: (string, optional)\n      - detailedStatus: (map, optional)\n        - aclTraceCalculation: (string, optional)\n        - aclTraceCalculationFailureReason: (string, optional)\n      - deviceStatistics: (map, required)\n        - cpuStatistics: (map, required)\n          - fiveMinUsageInPercentage: (number, optional)\n          - fiveSecsUsageInPercentage: (number, optional)\n          - oneMinUsageInPercentage: (number, optional)\n          - refreshedAt: (integer, optional)\n        - memoryStatistics: (map, required)\n          - memoryUsage: (integer, optional)\n          - refreshedAt: (integer, optional)\n          - totalMemory: (integer, optional)\n      - deviceStatsCollection: (string, required)\n      - deviceStatsCollectionFailureReason: (string, optional)\n      - egressInterface: (map, required)\n        - physicalInterface: (map, optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n        - virtualInterface: (array[map], optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n      - flexConnect: (map, optional)\n        - authentication: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - dataSwitching: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - egressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - ingressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - wirelessLanControllerId: (string, optional)\n        - wirelessLanControllerName: (string, optional)\n      - id: (string, required)\n      - ingressInterface: (map, required)\n        - physicalInterface: (map, optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n        - virtualInterface: (array[map], optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n      - ip: (string, required)\n      - linkInformationSource: (string, required)\n      - name: (string, required)\n      - perfMonCollection: (string, required)\n      - perfMonCollectionFailureReason: (string, optional)\n      - perfMonitorStatistics: (array[map], required)\n        - byteRate: (integer, optional)\n        - destIpAddress: (string, optional)\n        - destPort: (string, optional)\n        - inputInterface: (string, optional)\n        - ipv4DSCP: (string, optional)\n        - ipv4TTL: (integer, optional)\n        - outputInterface: (string, optional)\n        - packetBytes: (integer, optional)\n        - packetCount: (integer, optional)\n        - packetLoss: (integer, optional)\n        - packetLossPercentage: (number, optional)\n        - protocol: (string, optional)\n        - refreshedAt: (integer, optional)\n        - rtpJitterMax: (integer, optional)\n        - rtpJitterMean: (integer, optional)\n        - rtpJitterMin: (integer, optional)\n        - sourceIpAddress: (string, optional)\n        - sourcePort: (string, optional)\n      - role: (string, required)\n      - ssid: (string, optional)\n      - tunnels: (array[string], required)\n      - type: (string, required)\n      - wlanId: (string, optional)\n    - properties: (array[string], required)\n    - request: (map, required)\n      - controlPath: (boolean, optional)\n      - createTime: (integer, required)\n      - destIP: (string, required)\n      - destPort: (string, optional)\n      - failureReason: (string, optional)\n      - id: (string, optional)\n      - inclusions: (array[string], optional)\n      - lastUpdateTime: (integer, required)\n      - periodicRefresh: (boolean, optional)\n      - protocol: (string, optional)\n      - sourceIP: (string, required)\n      - sourcePort: (string, optional)\n      - status: (string, required)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/flow-analysis/:flowAnalysisId",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"flow-analysis",
												":flowAnalysisId"
											],
											"variable": [
												{
													"key": "flowAnalysisId",
													"value": "",
													"description": "(string, required) Flow analysis request id"
												}
											]
										},
										"description": "Returns result of a previously requested flow analysis by its Flow Analysis id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - detailedStatus: (map, required)\n      - aclTraceCalculation: (string, optional)\n      - aclTraceCalculationFailureReason: (string, optional)\n    - lastUpdate: (string, optional)\n    - networkElements: (array[map], optional)\n      - accuracyList: (array[map], optional)\n        - percent: (integer, optional)\n        - reason: (string, optional)\n      - detailedStatus: (map, optional)\n        - aclTraceCalculation: (string, optional)\n        - aclTraceCalculationFailureReason: (string, optional)\n      - deviceStatistics: (map, optional)\n        - cpuStatistics: (map, required)\n          - fiveMinUsageInPercentage: (number, optional)\n          - fiveSecsUsageInPercentage: (number, optional)\n          - oneMinUsageInPercentage: (number, optional)\n          - refreshedAt: (integer, optional)\n        - memoryStatistics: (map, required)\n          - memoryUsage: (integer, optional)\n          - refreshedAt: (integer, optional)\n          - totalMemory: (integer, optional)\n      - deviceStatsCollection: (string, required)\n      - deviceStatsCollectionFailureReason: (string, optional)\n      - egressPhysicalInterface: (map, required)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - egressVirtualInterface: (map, optional)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - flexConnect: (map, optional)\n        - authentication: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - dataSwitching: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - egressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - ingressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - wirelessLanControllerId: (string, optional)\n        - wirelessLanControllerName: (string, optional)\n      - id: (string, required)\n      - ingressPhysicalInterface: (map, required)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - ingressVirtualInterface: (map, optional)\n        - aclAnalysis: (map, required)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - id: (string, optional)\n        - interfaceStatistics: (map, optional)\n          - adminStatus: (string, optional)\n          - inputPackets: (integer, optional)\n          - inputQueueCount: (integer, optional)\n          - inputQueueDrops: (integer, optional)\n          - inputQueueFlushes: (integer, optional)\n          - inputQueueMaxDepth: (integer, optional)\n          - inputRatebps: (integer, optional)\n          - operationalStatus: (string, optional)\n          - outputDrop: (integer, optional)\n          - outputPackets: (integer, optional)\n          - outputQueueCount: (integer, optional)\n          - outputQueueDepth: (integer, optional)\n          - outputRatebps: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - interfaceStatsCollection: (string, required)\n        - interfaceStatsCollectionFailureReason: (string, optional)\n        - name: (string, optional)\n        - pathOverlayInfo: (array[map], optional)\n          - controlPlane: (string, optional)\n          - dataPacketEncapsulation: (string, optional)\n          - destIp: (string, optional)\n          - destPort: (string, optional)\n          - protocol: (string, optional)\n          - sourceIp: (string, optional)\n          - sourcePort: (string, optional)\n          - vxlanInfo: (map, optional)\n            - dscp: (string, optional)\n            - vnid: (string, optional)\n        - qosStatistics: (array[map], optional)\n          - classMapName: (string, optional)\n          - dropRate: (integer, optional)\n          - numBytes: (integer, optional)\n          - numPackets: (integer, optional)\n          - offeredRate: (integer, optional)\n          - queueBandwidthbps: (string, optional)\n          - queueDepth: (integer, optional)\n          - queueNoBufferDrops: (integer, optional)\n          - queueTotalDrops: (integer, optional)\n          - refreshedAt: (integer, optional)\n        - qosStatsCollection: (string, required)\n        - qosStatsCollectionFailureReason: (string, optional)\n        - usedVlan: (string, optional)\n        - vrfName: (string, optional)\n      - ip: (string, required)\n      - linkInformationSource: (string, required)\n      - name: (string, required)\n      - perfMonCollection: (string, required)\n      - perfMonCollectionFailureReason: (string, optional)\n      - perfMonStatistics: (array[map], optional)\n        - byteRate: (integer, optional)\n        - destIpAddress: (string, optional)\n        - destPort: (string, optional)\n        - inputInterface: (string, optional)\n        - ipv4DSCP: (string, optional)\n        - ipv4TTL: (integer, optional)\n        - outputInterface: (string, optional)\n        - packetBytes: (integer, optional)\n        - packetCount: (integer, optional)\n        - packetLoss: (integer, optional)\n        - packetLossPercentage: (number, optional)\n        - protocol: (string, optional)\n        - refreshedAt: (integer, optional)\n        - rtpJitterMax: (integer, optional)\n        - rtpJitterMean: (integer, optional)\n        - rtpJitterMin: (integer, optional)\n        - sourceIpAddress: (string, optional)\n        - sourcePort: (string, optional)\n      - role: (string, required)\n      - ssid: (string, optional)\n      - tunnels: (array[string], required)\n      - type: (string, required)\n      - wlanId: (string, optional)\n    - networkElementsInfo: (array[map], required)\n      - accuracyList: (array[map], optional)\n        - percent: (integer, optional)\n        - reason: (string, optional)\n      - detailedStatus: (map, optional)\n        - aclTraceCalculation: (string, optional)\n        - aclTraceCalculationFailureReason: (string, optional)\n      - deviceStatistics: (map, required)\n        - cpuStatistics: (map, required)\n          - fiveMinUsageInPercentage: (number, optional)\n          - fiveSecsUsageInPercentage: (number, optional)\n          - oneMinUsageInPercentage: (number, optional)\n          - refreshedAt: (integer, optional)\n        - memoryStatistics: (map, required)\n          - memoryUsage: (integer, optional)\n          - refreshedAt: (integer, optional)\n          - totalMemory: (integer, optional)\n      - deviceStatsCollection: (string, required)\n      - deviceStatsCollectionFailureReason: (string, optional)\n      - egressInterface: (map, required)\n        - physicalInterface: (map, optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n        - virtualInterface: (array[map], optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n      - flexConnect: (map, optional)\n        - authentication: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - dataSwitching: (enum[\"LOCAL\",\"CENTRAL\"], optional)\n        - egressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - ingressAclAnalysis: (map, optional)\n          - aclName: (string, optional)\n          - matchingAces: (array[map], optional)\n            - ace: (string, optional)\n            - matchingPorts: (array[map], optional)\n              - ports: (array[map], optional)\n                - destPorts: (array[string], optional)\n                - sourcePorts: (array[string], optional)\n              - protocol: (string, optional)\n            - result: (string, optional)\n          - result: (string, optional)\n        - wirelessLanControllerId: (string, optional)\n        - wirelessLanControllerName: (string, optional)\n      - id: (string, required)\n      - ingressInterface: (map, required)\n        - physicalInterface: (map, optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n        - virtualInterface: (array[map], optional)\n          - aclAnalysis: (map, required)\n            - aclName: (string, optional)\n            - matchingAces: (array[map], optional)\n              - ace: (string, optional)\n              - matchingPorts: (array[map], optional)\n                - ports: (array[map], optional)\n                  - destPorts: (array[string], optional)\n                  - sourcePorts: (array[string], optional)\n                - protocol: (string, optional)\n              - result: (string, optional)\n            - result: (string, optional)\n          - id: (string, optional)\n          - interfaceStatistics: (map, optional)\n            - adminStatus: (string, optional)\n            - inputPackets: (integer, optional)\n            - inputQueueCount: (integer, optional)\n            - inputQueueDrops: (integer, optional)\n            - inputQueueFlushes: (integer, optional)\n            - inputQueueMaxDepth: (integer, optional)\n            - inputRatebps: (integer, optional)\n            - operationalStatus: (string, optional)\n            - outputDrop: (integer, optional)\n            - outputPackets: (integer, optional)\n            - outputQueueCount: (integer, optional)\n            - outputQueueDepth: (integer, optional)\n            - outputRatebps: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - interfaceStatsCollection: (string, required)\n          - interfaceStatsCollectionFailureReason: (string, optional)\n          - name: (string, optional)\n          - pathOverlayInfo: (array[map], optional)\n            - controlPlane: (string, optional)\n            - dataPacketEncapsulation: (string, optional)\n            - destIp: (string, optional)\n            - destPort: (string, optional)\n            - protocol: (string, optional)\n            - sourceIp: (string, optional)\n            - sourcePort: (string, optional)\n            - vxlanInfo: (map, optional)\n              - dscp: (string, optional)\n              - vnid: (string, optional)\n          - qosStatistics: (array[map], optional)\n            - classMapName: (string, optional)\n            - dropRate: (integer, optional)\n            - numBytes: (integer, optional)\n            - numPackets: (integer, optional)\n            - offeredRate: (integer, optional)\n            - queueBandwidthbps: (string, optional)\n            - queueDepth: (integer, optional)\n            - queueNoBufferDrops: (integer, optional)\n            - queueTotalDrops: (integer, optional)\n            - refreshedAt: (integer, optional)\n          - qosStatsCollection: (string, required)\n          - qosStatsCollectionFailureReason: (string, optional)\n          - usedVlan: (string, optional)\n          - vrfName: (string, optional)\n      - ip: (string, required)\n      - linkInformationSource: (string, required)\n      - name: (string, required)\n      - perfMonCollection: (string, required)\n      - perfMonCollectionFailureReason: (string, optional)\n      - perfMonitorStatistics: (array[map], required)\n        - byteRate: (integer, optional)\n        - destIpAddress: (string, optional)\n        - destPort: (string, optional)\n        - inputInterface: (string, optional)\n        - ipv4DSCP: (string, optional)\n        - ipv4TTL: (integer, optional)\n        - outputInterface: (string, optional)\n        - packetBytes: (integer, optional)\n        - packetCount: (integer, optional)\n        - packetLoss: (integer, optional)\n        - packetLossPercentage: (number, optional)\n        - protocol: (string, optional)\n        - refreshedAt: (integer, optional)\n        - rtpJitterMax: (integer, optional)\n        - rtpJitterMean: (integer, optional)\n        - rtpJitterMin: (integer, optional)\n        - sourceIpAddress: (string, optional)\n        - sourcePort: (string, optional)\n      - role: (string, required)\n      - ssid: (string, optional)\n      - tunnels: (array[string], required)\n      - type: (string, required)\n      - wlanId: (string, optional)\n    - properties: (array[string], required)\n    - request: (map, required)\n      - controlPath: (boolean, optional)\n      - createTime: (integer, required)\n      - destIP: (string, required)\n      - destPort: (string, optional)\n      - failureReason: (string, optional)\n      - id: (string, optional)\n      - inclusions: (array[string], optional)\n      - lastUpdateTime: (integer, required)\n      - periodicRefresh: (boolean, optional)\n      - protocol: (string, optional)\n      - sourceIP: (string, required)\n      - sourcePort: (string, optional)\n      - status: (string, required)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"detailedStatus\": {\n      \"aclTraceCalculation\": \"string\",\n      \"aclTraceCalculationFailureReason\": \"string\"\n    },\n    \"lastUpdate\": \"string\",\n    \"networkElements\": [\n      {\n        \"accuracyList\": [\n          {\n            \"percent\": 0,\n            \"reason\": \"string\"\n          }\n        ],\n        \"detailedStatus\": {\n          \"aclTraceCalculation\": \"string\",\n          \"aclTraceCalculationFailureReason\": \"string\"\n        },\n        \"deviceStatistics\": {\n          \"cpuStatistics\": {\n            \"fiveMinUsageInPercentage\": 0.1,\n            \"fiveSecsUsageInPercentage\": 0.1,\n            \"oneMinUsageInPercentage\": 0.1,\n            \"refreshedAt\": 0\n          },\n          \"memoryStatistics\": {\n            \"memoryUsage\": 0,\n            \"refreshedAt\": 0,\n            \"totalMemory\": 0\n          }\n        },\n        \"deviceStatsCollection\": \"string\",\n        \"deviceStatsCollectionFailureReason\": \"string\",\n        \"egressPhysicalInterface\": {\n          \"aclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"id\": \"string\",\n          \"interfaceStatistics\": {\n            \"adminStatus\": \"string\",\n            \"inputPackets\": 0,\n            \"inputQueueCount\": 0,\n            \"inputQueueDrops\": 0,\n            \"inputQueueFlushes\": 0,\n            \"inputQueueMaxDepth\": 0,\n            \"inputRatebps\": 0,\n            \"operationalStatus\": \"string\",\n            \"outputDrop\": 0,\n            \"outputPackets\": 0,\n            \"outputQueueCount\": 0,\n            \"outputQueueDepth\": 0,\n            \"outputRatebps\": 0,\n            \"refreshedAt\": 0\n          },\n          \"interfaceStatsCollection\": \"string\",\n          \"interfaceStatsCollectionFailureReason\": \"string\",\n          \"name\": \"string\",\n          \"pathOverlayInfo\": [\n            {\n              \"controlPlane\": \"string\",\n              \"dataPacketEncapsulation\": \"string\",\n              \"destIp\": \"string\",\n              \"destPort\": \"string\",\n              \"protocol\": \"string\",\n              \"sourceIp\": \"string\",\n              \"sourcePort\": \"string\",\n              \"vxlanInfo\": {\n                \"dscp\": \"string\",\n                \"vnid\": \"string\"\n              }\n            }\n          ],\n          \"qosStatistics\": [\n            {\n              \"classMapName\": \"string\",\n              \"dropRate\": 0,\n              \"numBytes\": 0,\n              \"numPackets\": 0,\n              \"offeredRate\": 0,\n              \"queueBandwidthbps\": \"string\",\n              \"queueDepth\": 0,\n              \"queueNoBufferDrops\": 0,\n              \"queueTotalDrops\": 0,\n              \"refreshedAt\": 0\n            }\n          ],\n          \"qosStatsCollection\": \"string\",\n          \"qosStatsCollectionFailureReason\": \"string\",\n          \"usedVlan\": \"string\",\n          \"vrfName\": \"string\"\n        },\n        \"egressVirtualInterface\": {\n          \"aclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"id\": \"string\",\n          \"interfaceStatistics\": {\n            \"adminStatus\": \"string\",\n            \"inputPackets\": 0,\n            \"inputQueueCount\": 0,\n            \"inputQueueDrops\": 0,\n            \"inputQueueFlushes\": 0,\n            \"inputQueueMaxDepth\": 0,\n            \"inputRatebps\": 0,\n            \"operationalStatus\": \"string\",\n            \"outputDrop\": 0,\n            \"outputPackets\": 0,\n            \"outputQueueCount\": 0,\n            \"outputQueueDepth\": 0,\n            \"outputRatebps\": 0,\n            \"refreshedAt\": 0\n          },\n          \"interfaceStatsCollection\": \"string\",\n          \"interfaceStatsCollectionFailureReason\": \"string\",\n          \"name\": \"string\",\n          \"pathOverlayInfo\": [\n            {\n              \"controlPlane\": \"string\",\n              \"dataPacketEncapsulation\": \"string\",\n              \"destIp\": \"string\",\n              \"destPort\": \"string\",\n              \"protocol\": \"string\",\n              \"sourceIp\": \"string\",\n              \"sourcePort\": \"string\",\n              \"vxlanInfo\": {\n                \"dscp\": \"string\",\n                \"vnid\": \"string\"\n              }\n            }\n          ],\n          \"qosStatistics\": [\n            {\n              \"classMapName\": \"string\",\n              \"dropRate\": 0,\n              \"numBytes\": 0,\n              \"numPackets\": 0,\n              \"offeredRate\": 0,\n              \"queueBandwidthbps\": \"string\",\n              \"queueDepth\": 0,\n              \"queueNoBufferDrops\": 0,\n              \"queueTotalDrops\": 0,\n              \"refreshedAt\": 0\n            }\n          ],\n          \"qosStatsCollection\": \"string\",\n          \"qosStatsCollectionFailureReason\": \"string\",\n          \"usedVlan\": \"string\",\n          \"vrfName\": \"string\"\n        },\n        \"flexConnect\": {\n          \"authentication\": \"string\",\n          \"dataSwitching\": \"string\",\n          \"egressAclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"ingressAclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"wirelessLanControllerId\": \"string\",\n          \"wirelessLanControllerName\": \"string\"\n        },\n        \"id\": \"string\",\n        \"ingressPhysicalInterface\": {\n          \"aclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"id\": \"string\",\n          \"interfaceStatistics\": {\n            \"adminStatus\": \"string\",\n            \"inputPackets\": 0,\n            \"inputQueueCount\": 0,\n            \"inputQueueDrops\": 0,\n            \"inputQueueFlushes\": 0,\n            \"inputQueueMaxDepth\": 0,\n            \"inputRatebps\": 0,\n            \"operationalStatus\": \"string\",\n            \"outputDrop\": 0,\n            \"outputPackets\": 0,\n            \"outputQueueCount\": 0,\n            \"outputQueueDepth\": 0,\n            \"outputRatebps\": 0,\n            \"refreshedAt\": 0\n          },\n          \"interfaceStatsCollection\": \"string\",\n          \"interfaceStatsCollectionFailureReason\": \"string\",\n          \"name\": \"string\",\n          \"pathOverlayInfo\": [\n            {\n              \"controlPlane\": \"string\",\n              \"dataPacketEncapsulation\": \"string\",\n              \"destIp\": \"string\",\n              \"destPort\": \"string\",\n              \"protocol\": \"string\",\n              \"sourceIp\": \"string\",\n              \"sourcePort\": \"string\",\n              \"vxlanInfo\": {\n                \"dscp\": \"string\",\n                \"vnid\": \"string\"\n              }\n            }\n          ],\n          \"qosStatistics\": [\n            {\n              \"classMapName\": \"string\",\n              \"dropRate\": 0,\n              \"numBytes\": 0,\n              \"numPackets\": 0,\n              \"offeredRate\": 0,\n              \"queueBandwidthbps\": \"string\",\n              \"queueDepth\": 0,\n              \"queueNoBufferDrops\": 0,\n              \"queueTotalDrops\": 0,\n              \"refreshedAt\": 0\n            }\n          ],\n          \"qosStatsCollection\": \"string\",\n          \"qosStatsCollectionFailureReason\": \"string\",\n          \"usedVlan\": \"string\",\n          \"vrfName\": \"string\"\n        },\n        \"ingressVirtualInterface\": {\n          \"aclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"id\": \"string\",\n          \"interfaceStatistics\": {\n            \"adminStatus\": \"string\",\n            \"inputPackets\": 0,\n            \"inputQueueCount\": 0,\n            \"inputQueueDrops\": 0,\n            \"inputQueueFlushes\": 0,\n            \"inputQueueMaxDepth\": 0,\n            \"inputRatebps\": 0,\n            \"operationalStatus\": \"string\",\n            \"outputDrop\": 0,\n            \"outputPackets\": 0,\n            \"outputQueueCount\": 0,\n            \"outputQueueDepth\": 0,\n            \"outputRatebps\": 0,\n            \"refreshedAt\": 0\n          },\n          \"interfaceStatsCollection\": \"string\",\n          \"interfaceStatsCollectionFailureReason\": \"string\",\n          \"name\": \"string\",\n          \"pathOverlayInfo\": [\n            {\n              \"controlPlane\": \"string\",\n              \"dataPacketEncapsulation\": \"string\",\n              \"destIp\": \"string\",\n              \"destPort\": \"string\",\n              \"protocol\": \"string\",\n              \"sourceIp\": \"string\",\n              \"sourcePort\": \"string\",\n              \"vxlanInfo\": {\n                \"dscp\": \"string\",\n                \"vnid\": \"string\"\n              }\n            }\n          ],\n          \"qosStatistics\": [\n            {\n              \"classMapName\": \"string\",\n              \"dropRate\": 0,\n              \"numBytes\": 0,\n              \"numPackets\": 0,\n              \"offeredRate\": 0,\n              \"queueBandwidthbps\": \"string\",\n              \"queueDepth\": 0,\n              \"queueNoBufferDrops\": 0,\n              \"queueTotalDrops\": 0,\n              \"refreshedAt\": 0\n            }\n          ],\n          \"qosStatsCollection\": \"string\",\n          \"qosStatsCollectionFailureReason\": \"string\",\n          \"usedVlan\": \"string\",\n          \"vrfName\": \"string\"\n        },\n        \"ip\": \"string\",\n        \"linkInformationSource\": \"string\",\n        \"name\": \"string\",\n        \"perfMonCollection\": \"string\",\n        \"perfMonCollectionFailureReason\": \"string\",\n        \"perfMonStatistics\": [\n          {\n            \"byteRate\": 0,\n            \"destIpAddress\": \"string\",\n            \"destPort\": \"string\",\n            \"inputInterface\": \"string\",\n            \"ipv4DSCP\": \"string\",\n            \"ipv4TTL\": 0,\n            \"outputInterface\": \"string\",\n            \"packetBytes\": 0,\n            \"packetCount\": 0,\n            \"packetLoss\": 0,\n            \"packetLossPercentage\": 0.1,\n            \"protocol\": \"string\",\n            \"refreshedAt\": 0,\n            \"rtpJitterMax\": 0,\n            \"rtpJitterMean\": 0,\n            \"rtpJitterMin\": 0,\n            \"sourceIpAddress\": \"string\",\n            \"sourcePort\": \"string\"\n          }\n        ],\n        \"role\": \"string\",\n        \"ssid\": \"string\",\n        \"tunnels\": [\n          \"string\"\n        ],\n        \"type\": \"string\",\n        \"wlanId\": \"string\"\n      }\n    ],\n    \"networkElementsInfo\": [\n      {\n        \"accuracyList\": [\n          {\n            \"percent\": 0,\n            \"reason\": \"string\"\n          }\n        ],\n        \"detailedStatus\": {\n          \"aclTraceCalculation\": \"string\",\n          \"aclTraceCalculationFailureReason\": \"string\"\n        },\n        \"deviceStatistics\": {\n          \"cpuStatistics\": {\n            \"fiveMinUsageInPercentage\": 0.1,\n            \"fiveSecsUsageInPercentage\": 0.1,\n            \"oneMinUsageInPercentage\": 0.1,\n            \"refreshedAt\": 0\n          },\n          \"memoryStatistics\": {\n            \"memoryUsage\": 0,\n            \"refreshedAt\": 0,\n            \"totalMemory\": 0\n          }\n        },\n        \"deviceStatsCollection\": \"string\",\n        \"deviceStatsCollectionFailureReason\": \"string\",\n        \"egressInterface\": {\n          \"physicalInterface\": {\n            \"aclAnalysis\": {\n              \"aclName\": \"string\",\n              \"matchingAces\": [\n                {\n                  \"ace\": \"string\",\n                  \"matchingPorts\": [\n                    {\n                      \"ports\": [\n                        {\n                          \"destPorts\": [\n                            \"string\"\n                          ],\n                          \"sourcePorts\": [\n                            \"string\"\n                          ]\n                        }\n                      ],\n                      \"protocol\": \"string\"\n                    }\n                  ],\n                  \"result\": \"string\"\n                }\n              ],\n              \"result\": \"string\"\n            },\n            \"id\": \"string\",\n            \"interfaceStatistics\": {\n              \"adminStatus\": \"string\",\n              \"inputPackets\": 0,\n              \"inputQueueCount\": 0,\n              \"inputQueueDrops\": 0,\n              \"inputQueueFlushes\": 0,\n              \"inputQueueMaxDepth\": 0,\n              \"inputRatebps\": 0,\n              \"operationalStatus\": \"string\",\n              \"outputDrop\": 0,\n              \"outputPackets\": 0,\n              \"outputQueueCount\": 0,\n              \"outputQueueDepth\": 0,\n              \"outputRatebps\": 0,\n              \"refreshedAt\": 0\n            },\n            \"interfaceStatsCollection\": \"string\",\n            \"interfaceStatsCollectionFailureReason\": \"string\",\n            \"name\": \"string\",\n            \"pathOverlayInfo\": [\n              {\n                \"controlPlane\": \"string\",\n                \"dataPacketEncapsulation\": \"string\",\n                \"destIp\": \"string\",\n                \"destPort\": \"string\",\n                \"protocol\": \"string\",\n                \"sourceIp\": \"string\",\n                \"sourcePort\": \"string\",\n                \"vxlanInfo\": {\n                  \"dscp\": \"string\",\n                  \"vnid\": \"string\"\n                }\n              }\n            ],\n            \"qosStatistics\": [\n              {\n                \"classMapName\": \"string\",\n                \"dropRate\": 0,\n                \"numBytes\": 0,\n                \"numPackets\": 0,\n                \"offeredRate\": 0,\n                \"queueBandwidthbps\": \"string\",\n                \"queueDepth\": 0,\n                \"queueNoBufferDrops\": 0,\n                \"queueTotalDrops\": 0,\n                \"refreshedAt\": 0\n              }\n            ],\n            \"qosStatsCollection\": \"string\",\n            \"qosStatsCollectionFailureReason\": \"string\",\n            \"usedVlan\": \"string\",\n            \"vrfName\": \"string\"\n          },\n          \"virtualInterface\": [\n            {\n              \"aclAnalysis\": {\n                \"aclName\": \"string\",\n                \"matchingAces\": [\n                  {\n                    \"ace\": \"string\",\n                    \"matchingPorts\": [\n                      {\n                        \"ports\": [\n                          {\n                            \"destPorts\": [\n                              \"string\"\n                            ],\n                            \"sourcePorts\": [\n                              \"string\"\n                            ]\n                          }\n                        ],\n                        \"protocol\": \"string\"\n                      }\n                    ],\n                    \"result\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              },\n              \"id\": \"string\",\n              \"interfaceStatistics\": {\n                \"adminStatus\": \"string\",\n                \"inputPackets\": 0,\n                \"inputQueueCount\": 0,\n                \"inputQueueDrops\": 0,\n                \"inputQueueFlushes\": 0,\n                \"inputQueueMaxDepth\": 0,\n                \"inputRatebps\": 0,\n                \"operationalStatus\": \"string\",\n                \"outputDrop\": 0,\n                \"outputPackets\": 0,\n                \"outputQueueCount\": 0,\n                \"outputQueueDepth\": 0,\n                \"outputRatebps\": 0,\n                \"refreshedAt\": 0\n              },\n              \"interfaceStatsCollection\": \"string\",\n              \"interfaceStatsCollectionFailureReason\": \"string\",\n              \"name\": \"string\",\n              \"pathOverlayInfo\": [\n                {\n                  \"controlPlane\": \"string\",\n                  \"dataPacketEncapsulation\": \"string\",\n                  \"destIp\": \"string\",\n                  \"destPort\": \"string\",\n                  \"protocol\": \"string\",\n                  \"sourceIp\": \"string\",\n                  \"sourcePort\": \"string\",\n                  \"vxlanInfo\": {\n                    \"dscp\": \"string\",\n                    \"vnid\": \"string\"\n                  }\n                }\n              ],\n              \"qosStatistics\": [\n                {\n                  \"classMapName\": \"string\",\n                  \"dropRate\": 0,\n                  \"numBytes\": 0,\n                  \"numPackets\": 0,\n                  \"offeredRate\": 0,\n                  \"queueBandwidthbps\": \"string\",\n                  \"queueDepth\": 0,\n                  \"queueNoBufferDrops\": 0,\n                  \"queueTotalDrops\": 0,\n                  \"refreshedAt\": 0\n                }\n              ],\n              \"qosStatsCollection\": \"string\",\n              \"qosStatsCollectionFailureReason\": \"string\",\n              \"usedVlan\": \"string\",\n              \"vrfName\": \"string\"\n            }\n          ]\n        },\n        \"flexConnect\": {\n          \"authentication\": \"string\",\n          \"dataSwitching\": \"string\",\n          \"egressAclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"ingressAclAnalysis\": {\n            \"aclName\": \"string\",\n            \"matchingAces\": [\n              {\n                \"ace\": \"string\",\n                \"matchingPorts\": [\n                  {\n                    \"ports\": [\n                      {\n                        \"destPorts\": [\n                          \"string\"\n                        ],\n                        \"sourcePorts\": [\n                          \"string\"\n                        ]\n                      }\n                    ],\n                    \"protocol\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              }\n            ],\n            \"result\": \"string\"\n          },\n          \"wirelessLanControllerId\": \"string\",\n          \"wirelessLanControllerName\": \"string\"\n        },\n        \"id\": \"string\",\n        \"ingressInterface\": {\n          \"physicalInterface\": {\n            \"aclAnalysis\": {\n              \"aclName\": \"string\",\n              \"matchingAces\": [\n                {\n                  \"ace\": \"string\",\n                  \"matchingPorts\": [\n                    {\n                      \"ports\": [\n                        {\n                          \"destPorts\": [\n                            \"string\"\n                          ],\n                          \"sourcePorts\": [\n                            \"string\"\n                          ]\n                        }\n                      ],\n                      \"protocol\": \"string\"\n                    }\n                  ],\n                  \"result\": \"string\"\n                }\n              ],\n              \"result\": \"string\"\n            },\n            \"id\": \"string\",\n            \"interfaceStatistics\": {\n              \"adminStatus\": \"string\",\n              \"inputPackets\": 0,\n              \"inputQueueCount\": 0,\n              \"inputQueueDrops\": 0,\n              \"inputQueueFlushes\": 0,\n              \"inputQueueMaxDepth\": 0,\n              \"inputRatebps\": 0,\n              \"operationalStatus\": \"string\",\n              \"outputDrop\": 0,\n              \"outputPackets\": 0,\n              \"outputQueueCount\": 0,\n              \"outputQueueDepth\": 0,\n              \"outputRatebps\": 0,\n              \"refreshedAt\": 0\n            },\n            \"interfaceStatsCollection\": \"string\",\n            \"interfaceStatsCollectionFailureReason\": \"string\",\n            \"name\": \"string\",\n            \"pathOverlayInfo\": [\n              {\n                \"controlPlane\": \"string\",\n                \"dataPacketEncapsulation\": \"string\",\n                \"destIp\": \"string\",\n                \"destPort\": \"string\",\n                \"protocol\": \"string\",\n                \"sourceIp\": \"string\",\n                \"sourcePort\": \"string\",\n                \"vxlanInfo\": {\n                  \"dscp\": \"string\",\n                  \"vnid\": \"string\"\n                }\n              }\n            ],\n            \"qosStatistics\": [\n              {\n                \"classMapName\": \"string\",\n                \"dropRate\": 0,\n                \"numBytes\": 0,\n                \"numPackets\": 0,\n                \"offeredRate\": 0,\n                \"queueBandwidthbps\": \"string\",\n                \"queueDepth\": 0,\n                \"queueNoBufferDrops\": 0,\n                \"queueTotalDrops\": 0,\n                \"refreshedAt\": 0\n              }\n            ],\n            \"qosStatsCollection\": \"string\",\n            \"qosStatsCollectionFailureReason\": \"string\",\n            \"usedVlan\": \"string\",\n            \"vrfName\": \"string\"\n          },\n          \"virtualInterface\": [\n            {\n              \"aclAnalysis\": {\n                \"aclName\": \"string\",\n                \"matchingAces\": [\n                  {\n                    \"ace\": \"string\",\n                    \"matchingPorts\": [\n                      {\n                        \"ports\": [\n                          {\n                            \"destPorts\": [\n                              \"string\"\n                            ],\n                            \"sourcePorts\": [\n                              \"string\"\n                            ]\n                          }\n                        ],\n                        \"protocol\": \"string\"\n                      }\n                    ],\n                    \"result\": \"string\"\n                  }\n                ],\n                \"result\": \"string\"\n              },\n              \"id\": \"string\",\n              \"interfaceStatistics\": {\n                \"adminStatus\": \"string\",\n                \"inputPackets\": 0,\n                \"inputQueueCount\": 0,\n                \"inputQueueDrops\": 0,\n                \"inputQueueFlushes\": 0,\n                \"inputQueueMaxDepth\": 0,\n                \"inputRatebps\": 0,\n                \"operationalStatus\": \"string\",\n                \"outputDrop\": 0,\n                \"outputPackets\": 0,\n                \"outputQueueCount\": 0,\n                \"outputQueueDepth\": 0,\n                \"outputRatebps\": 0,\n                \"refreshedAt\": 0\n              },\n              \"interfaceStatsCollection\": \"string\",\n              \"interfaceStatsCollectionFailureReason\": \"string\",\n              \"name\": \"string\",\n              \"pathOverlayInfo\": [\n                {\n                  \"controlPlane\": \"string\",\n                  \"dataPacketEncapsulation\": \"string\",\n                  \"destIp\": \"string\",\n                  \"destPort\": \"string\",\n                  \"protocol\": \"string\",\n                  \"sourceIp\": \"string\",\n                  \"sourcePort\": \"string\",\n                  \"vxlanInfo\": {\n                    \"dscp\": \"string\",\n                    \"vnid\": \"string\"\n                  }\n                }\n              ],\n              \"qosStatistics\": [\n                {\n                  \"classMapName\": \"string\",\n                  \"dropRate\": 0,\n                  \"numBytes\": 0,\n                  \"numPackets\": 0,\n                  \"offeredRate\": 0,\n                  \"queueBandwidthbps\": \"string\",\n                  \"queueDepth\": 0,\n                  \"queueNoBufferDrops\": 0,\n                  \"queueTotalDrops\": 0,\n                  \"refreshedAt\": 0\n                }\n              ],\n              \"qosStatsCollection\": \"string\",\n              \"qosStatsCollectionFailureReason\": \"string\",\n              \"usedVlan\": \"string\",\n              \"vrfName\": \"string\"\n            }\n          ]\n        },\n        \"ip\": \"string\",\n        \"linkInformationSource\": \"string\",\n        \"name\": \"string\",\n        \"perfMonCollection\": \"string\",\n        \"perfMonCollectionFailureReason\": \"string\",\n        \"perfMonitorStatistics\": [\n          {\n            \"byteRate\": 0,\n            \"destIpAddress\": \"string\",\n            \"destPort\": \"string\",\n            \"inputInterface\": \"string\",\n            \"ipv4DSCP\": \"string\",\n            \"ipv4TTL\": 0,\n            \"outputInterface\": \"string\",\n            \"packetBytes\": 0,\n            \"packetCount\": 0,\n            \"packetLoss\": 0,\n            \"packetLossPercentage\": 0.1,\n            \"protocol\": \"string\",\n            \"refreshedAt\": 0,\n            \"rtpJitterMax\": 0,\n            \"rtpJitterMean\": 0,\n            \"rtpJitterMin\": 0,\n            \"sourceIpAddress\": \"string\",\n            \"sourcePort\": \"string\"\n          }\n        ],\n        \"role\": \"string\",\n        \"ssid\": \"string\",\n        \"tunnels\": [\n          \"string\"\n        ],\n        \"type\": \"string\",\n        \"wlanId\": \"string\"\n      }\n    ],\n    \"properties\": [\n      \"string\"\n    ],\n    \"request\": {\n      \"controlPath\": false,\n      \"createTime\": 0,\n      \"destIP\": \"string\",\n      \"destPort\": \"string\",\n      \"failureReason\": \"string\",\n      \"id\": \"string\",\n      \"inclusions\": [\n        \"string\"\n      ],\n      \"lastUpdateTime\": 0,\n      \"periodicRefresh\": false,\n      \"protocol\": \"string\",\n      \"sourceIP\": \"string\",\n      \"sourcePort\": \"string\",\n      \"status\": \"string\"\n    }\n  },\n  \"version\": \"string\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Task",
					"item": [
						{
							"name": "Get tasks",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/task?startTime=&endTime=&data=&errorCode=&serviceType=&username=&progress=&isError=&failureReason=&parentId=&offset=&limit=&sortBy=&order=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"task"
									],
									"query": [
										{
											"key": "startTime",
											"value": "",
											"description": "(string, optional) This is the epoch start time from which tasks need to be fetched"
										},
										{
											"key": "endTime",
											"value": "",
											"description": "(string, optional) This is the epoch end time upto which audit records need to be fetched"
										},
										{
											"key": "data",
											"value": "",
											"description": "(string, optional) Fetch tasks that contains this data"
										},
										{
											"key": "errorCode",
											"value": "",
											"description": "(string, optional) Fetch tasks that have this error code"
										},
										{
											"key": "serviceType",
											"value": "",
											"description": "(string, optional) Fetch tasks with this service type"
										},
										{
											"key": "username",
											"value": "",
											"description": "(string, optional) Fetch tasks with this username"
										},
										{
											"key": "progress",
											"value": "",
											"description": "(string, optional) Fetch tasks that contains this progress"
										},
										{
											"key": "isError",
											"value": "",
											"description": "(string, optional) Fetch tasks ended as success or failure. Valid values: true, false"
										},
										{
											"key": "failureReason",
											"value": "",
											"description": "(string, optional) Fetch tasks that contains this failure reason"
										},
										{
											"key": "parentId",
											"value": "",
											"description": "(string, optional) Fetch tasks that have this parent Id"
										},
										{
											"key": "offset",
											"value": "",
											"description": "(string, optional) offset"
										},
										{
											"key": "limit",
											"value": "",
											"description": "(string, optional) limit"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "(string, optional) Sort results by this field"
										},
										{
											"key": "order",
											"value": "",
											"description": "(string, optional) Sort order - asc or dsc"
										}
									]
								},
								"description": "Returns task(s) based on filter criteria\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/task?startTime=&endTime=&data=&errorCode=&serviceType=&username=&progress=&isError=&failureReason=&parentId=&offset=&limit=&sortBy=&order=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"task"
											],
											"query": [
												{
													"key": "startTime",
													"value": "",
													"description": "(string, optional) This is the epoch start time from which tasks need to be fetched"
												},
												{
													"key": "endTime",
													"value": "",
													"description": "(string, optional) This is the epoch end time upto which audit records need to be fetched"
												},
												{
													"key": "data",
													"value": "",
													"description": "(string, optional) Fetch tasks that contains this data"
												},
												{
													"key": "errorCode",
													"value": "",
													"description": "(string, optional) Fetch tasks that have this error code"
												},
												{
													"key": "serviceType",
													"value": "",
													"description": "(string, optional) Fetch tasks with this service type"
												},
												{
													"key": "username",
													"value": "",
													"description": "(string, optional) Fetch tasks with this username"
												},
												{
													"key": "progress",
													"value": "",
													"description": "(string, optional) Fetch tasks that contains this progress"
												},
												{
													"key": "isError",
													"value": "",
													"description": "(string, optional) Fetch tasks ended as success or failure. Valid values: true, false"
												},
												{
													"key": "failureReason",
													"value": "",
													"description": "(string, optional) Fetch tasks that contains this failure reason"
												},
												{
													"key": "parentId",
													"value": "",
													"description": "(string, optional) Fetch tasks that have this parent Id"
												},
												{
													"key": "offset",
													"value": "",
													"description": "(string, optional) offset"
												},
												{
													"key": "limit",
													"value": "",
													"description": "(string, optional) limit"
												},
												{
													"key": "sortBy",
													"value": "",
													"description": "(string, optional) Sort results by this field"
												},
												{
													"key": "order",
													"value": "",
													"description": "(string, optional) Sort order - asc or dsc"
												}
											]
										},
										"description": "Returns task(s) based on filter criteria\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"additionalStatusURL\": \"string\",\n      \"data\": \"string\",\n      \"endTime\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorKey\": \"string\",\n      \"failureReason\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"isError\": false,\n      \"lastUpdate\": \"string\",\n      \"operationIdList\": \"any\",\n      \"parentId\": \"string\",\n      \"progress\": \"string\",\n      \"rootId\": \"string\",\n      \"serviceType\": \"string\",\n      \"startTime\": \"string\",\n      \"username\": \"string\",\n      \"version\": 0\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get task by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/task/:taskId",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"task",
										":taskId"
									],
									"variable": [
										{
											"key": "taskId",
											"value": "",
											"description": "(TaskId, required) UUID of the Task"
										}
									]
								},
								"description": "Returns a task by specified id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/task/:taskId",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"task",
												":taskId"
											],
											"variable": [
												{
													"key": "taskId",
													"value": "",
													"description": "(TaskId, required) UUID of the Task"
												}
											]
										},
										"description": "Returns a task by specified id\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"additionalStatusURL\": \"string\",\n    \"data\": \"string\",\n    \"endTime\": \"string\",\n    \"errorCode\": \"string\",\n    \"errorKey\": \"string\",\n    \"failureReason\": \"string\",\n    \"id\": \"string\",\n    \"instanceTenantId\": \"string\",\n    \"isError\": false,\n    \"lastUpdate\": \"string\",\n    \"operationIdList\": \"any\",\n    \"parentId\": \"string\",\n    \"progress\": \"string\",\n    \"rootId\": \"string\",\n    \"serviceType\": \"string\",\n    \"startTime\": \"string\",\n    \"username\": \"string\",\n    \"version\": 0\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get task tree",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/task/:taskId/tree",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"task",
										":taskId",
										"tree"
									],
									"variable": [
										{
											"key": "taskId",
											"value": "",
											"description": "(TaskId, required) UUID of the Task"
										}
									]
								},
								"description": "Returns a task with its children tasks by based on their id\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/task/:taskId/tree",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"task",
												":taskId",
												"tree"
											],
											"variable": [
												{
													"key": "taskId",
													"value": "",
													"description": "(TaskId, required) UUID of the Task"
												}
											]
										},
										"description": "Returns a task with its children tasks by based on their id\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"additionalStatusURL\": \"string\",\n      \"data\": \"string\",\n      \"endTime\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorKey\": \"string\",\n      \"failureReason\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"isError\": false,\n      \"lastUpdate\": \"string\",\n      \"operationIdList\": \"any\",\n      \"parentId\": \"string\",\n      \"progress\": \"string\",\n      \"rootId\": \"string\",\n      \"serviceType\": \"string\",\n      \"startTime\": \"string\",\n      \"username\": \"string\",\n      \"version\": 0\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get task count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/task/count?startTime=&endTime=&data=&errorCode=&serviceType=&username=&progress=&isError=&failureReason=&parentId=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"task",
										"count"
									],
									"query": [
										{
											"key": "startTime",
											"value": "",
											"description": "(string, optional) This is the epoch start time from which tasks need to be fetched"
										},
										{
											"key": "endTime",
											"value": "",
											"description": "(string, optional) This is the epoch end time upto which audit records need to be fetched"
										},
										{
											"key": "data",
											"value": "",
											"description": "(string, optional) Fetch tasks that contains this data"
										},
										{
											"key": "errorCode",
											"value": "",
											"description": "(string, optional) Fetch tasks that have this error code"
										},
										{
											"key": "serviceType",
											"value": "",
											"description": "(string, optional) Fetch tasks with this service type"
										},
										{
											"key": "username",
											"value": "",
											"description": "(string, optional) Fetch tasks with this username"
										},
										{
											"key": "progress",
											"value": "",
											"description": "(string, optional) Fetch tasks that contains this progress"
										},
										{
											"key": "isError",
											"value": "",
											"description": "(string, optional) Fetch tasks ended as success or failure. Valid values: true, false"
										},
										{
											"key": "failureReason",
											"value": "",
											"description": "(string, optional) Fetch tasks that contains this failure reason"
										},
										{
											"key": "parentId",
											"value": "",
											"description": "(string, optional) Fetch tasks that have this parent Id"
										}
									]
								},
								"description": "Returns Task count\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/task/count?startTime=&endTime=&data=&errorCode=&serviceType=&username=&progress=&isError=&failureReason=&parentId=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"task",
												"count"
											],
											"query": [
												{
													"key": "startTime",
													"value": "",
													"description": "(string, optional) This is the epoch start time from which tasks need to be fetched"
												},
												{
													"key": "endTime",
													"value": "",
													"description": "(string, optional) This is the epoch end time upto which audit records need to be fetched"
												},
												{
													"key": "data",
													"value": "",
													"description": "(string, optional) Fetch tasks that contains this data"
												},
												{
													"key": "errorCode",
													"value": "",
													"description": "(string, optional) Fetch tasks that have this error code"
												},
												{
													"key": "serviceType",
													"value": "",
													"description": "(string, optional) Fetch tasks with this service type"
												},
												{
													"key": "username",
													"value": "",
													"description": "(string, optional) Fetch tasks with this username"
												},
												{
													"key": "progress",
													"value": "",
													"description": "(string, optional) Fetch tasks that contains this progress"
												},
												{
													"key": "isError",
													"value": "",
													"description": "(string, optional) Fetch tasks ended as success or failure. Valid values: true, false"
												},
												{
													"key": "failureReason",
													"value": "",
													"description": "(string, optional) Fetch tasks that contains this failure reason"
												},
												{
													"key": "parentId",
													"value": "",
													"description": "(string, optional) Fetch tasks that have this parent Id"
												}
											]
										},
										"description": "Returns Task count\n\n###### Response Model\n- root: (map, optional)\n  - response: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0,\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get task by OperationId",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/task/operation/:operationId/:offset/:limit",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"task",
										"operation",
										":operationId",
										":offset",
										":limit"
									],
									"variable": [
										{
											"key": "operationId",
											"value": "",
											"description": "(string, required) operationId"
										},
										{
											"key": "offset",
											"value": "",
											"description": "(integer, required) Index, minimum value is 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "(integer, required) The maximum value of {limit} supported is 500. <br/> Base 1 indexing for {limit}, minimum value is 1"
										}
									]
								},
								"description": "Returns root tasks associated with an Operationid\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/task/operation/:operationId/:offset/:limit",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"task",
												"operation",
												":operationId",
												":offset",
												":limit"
											],
											"variable": [
												{
													"key": "operationId",
													"value": "",
													"description": "(string, required) operationId"
												},
												{
													"key": "offset",
													"value": "",
													"description": "(integer, required) Index, minimum value is 0"
												},
												{
													"key": "limit",
													"value": "",
													"description": "(integer, required) The maximum value of {limit} supported is 500. <br/> Base 1 indexing for {limit}, minimum value is 1"
												}
											]
										},
										"description": "Returns root tasks associated with an Operationid\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - additionalStatusURL: (string, optional)\n    - data: (string, optional)\n    - endTime: (string, optional)\n    - errorCode: (string, optional)\n    - errorKey: (string, optional)\n    - failureReason: (string, optional)\n    - id: (string, optional)\n    - instanceTenantId: (string, optional)\n    - isError: (boolean, optional)\n    - lastUpdate: (string, optional)\n    - operationIdList: (any, optional)\n    - parentId: (string, optional)\n    - progress: (string, optional)\n    - rootId: (string, optional)\n    - serviceType: (string, optional)\n    - startTime: (string, optional)\n    - username: (string, optional)\n    - version: (integer, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"additionalStatusURL\": \"string\",\n      \"data\": \"string\",\n      \"endTime\": \"string\",\n      \"errorCode\": \"string\",\n      \"errorKey\": \"string\",\n      \"failureReason\": \"string\",\n      \"id\": \"string\",\n      \"instanceTenantId\": \"string\",\n      \"isError\": false,\n      \"lastUpdate\": \"string\",\n      \"operationIdList\": \"any\",\n      \"parentId\": \"string\",\n      \"progress\": \"string\",\n      \"rootId\": \"string\",\n      \"serviceType\": \"string\",\n      \"startTime\": \"string\",\n      \"username\": \"string\",\n      \"version\": 0\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Template Programmer",
					"item": [
						{
							"name": "Get Projects",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project?name=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"project"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "(string, optional) Name of project to be searched"
										}
									]
								},
								"description": "Returns the projects in the system\n\n###### Response Model\n- root: (array[map], optional)\n  - name: (string, optional) Name\n  - id: (string, optional) Id\n  - templates: (array[map], optional)\n    - name: (string, optional) Name\n    - composite: (boolean, optional) Composite\n    - id: (string, optional) Id"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project?name=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"project"
											],
											"query": [
												{
													"key": "name",
													"value": "",
													"description": "(string, optional) Name of project to be searched"
												}
											]
										},
										"description": "Returns the projects in the system\n\n###### Response Model\n- root: (array[map], optional)\n  - name: (string, optional) Name\n  - id: (string, optional) Id\n  - templates: (array[map], optional)\n    - name: (string, optional) Name\n    - composite: (boolean, optional) Composite\n    - id: (string, optional) Id"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"string\",\n    \"id\": \"string\",\n    \"templates\": [\n      {\n        \"name\": \"string\",\n        \"composite\": false,\n        \"id\": \"string\"\n      }\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "Create Project",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templates\": \"any\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"project"
									]
								},
								"description": "Creates a new project\n\n###### Request Model\n- root: (map, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - tags: (array[string], optional)\n  - templates: (any, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templates\": \"any\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"project"
											]
										},
										"description": "Creates a new project\n\n###### Request Model\n- root: (map, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - tags: (array[string], optional)\n  - templates: (any, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Create Project",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templates\": \"any\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"project"
									]
								},
								"description": "Creates a new project\n\n###### Request Model\n- root: (map, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - tags: (array[string], optional)\n  - templates: (any, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templates\": \"any\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"project"
											]
										},
										"description": "Creates a new project\n\n###### Request Model\n- root: (map, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - tags: (array[string], optional)\n  - templates: (any, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update Project",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templates\": \"any\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"project"
									]
								},
								"description": "Updates an existing project\n\n###### Request Model\n- root: (map, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - tags: (array[string], optional)\n  - templates: (any, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templates\": \"any\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"project"
											]
										},
										"description": "Updates an existing project\n\n###### Request Model\n- root: (map, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - tags: (array[string], optional)\n  - templates: (any, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update Project",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templates\": \"any\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"project"
									]
								},
								"description": "Updates an existing project\n\n###### Request Model\n- root: (map, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - tags: (array[string], optional)\n  - templates: (any, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templates\": \"any\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"project"
											]
										},
										"description": "Updates an existing project\n\n###### Request Model\n- root: (map, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - tags: (array[string], optional)\n  - templates: (any, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete Project",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project/:projectId",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"project",
										":projectId"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "",
											"description": "(string, required) projectId"
										}
									]
								},
								"description": "Deletes an existing Project\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project/:projectId",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"project",
												":projectId"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "",
													"description": "(string, required) projectId"
												}
											]
										},
										"description": "Deletes an existing Project\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Create Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"author\": \"string\",\n  \"composite\": false,\n  \"containingTemplates\": [\n    {\n      \"composite\": false,\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"version\": \"string\"\n    }\n  ],\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"deviceTypes\": [\n    {\n      \"productFamily\": \"string\",\n      \"productSeries\": \"string\",\n      \"productType\": \"string\"\n    }\n  ],\n  \"failurePolicy\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"parentTemplateId\": \"string\",\n  \"projectId\": \"string\",\n  \"projectName\": \"string\",\n  \"rollbackTemplateContent\": \"string\",\n  \"rollbackTemplateParams\": [\n    {\n      \"binding\": \"string\",\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"notParam\": false,\n      \"order\": 0,\n      \"paramArray\": false,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": {\n        \"id\": \"string\",\n        \"selectionType\": \"string\",\n        \"selectionValues\": {\n          \n        }\n      }\n    }\n  ],\n  \"softwareType\": \"string\",\n  \"softwareVariant\": \"string\",\n  \"softwareVersion\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templateContent\": \"string\",\n  \"templateParams\": [\n    {\n      \"binding\": \"string\",\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"notParam\": false,\n      \"order\": 0,\n      \"paramArray\": false,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": {\n        \"id\": \"string\",\n        \"selectionType\": \"string\",\n        \"selectionValues\": {\n          \n        }\n      }\n    }\n  ],\n  \"version\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project/:projectId/template",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"project",
										":projectId",
										"template"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "",
											"description": "(string, required) projectId"
										}
									]
								},
								"description": "Creates a new template\n\n###### Request Model\n- root: (map, optional)\n  - author: (string, optional)\n  - composite: (boolean, optional)\n  - containingTemplates: (array[map], optional)\n    - composite: (boolean, optional)\n    - id: (string, optional)\n    - name: (string, optional)\n    - version: (string, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - deviceTypes: (array[map], optional)\n    - productFamily: (string, optional)\n    - productSeries: (string, optional)\n    - productType: (string, optional)\n  - failurePolicy: (enum[\"ABORT_ON_ERROR\",\"CONTINUE_ON_ERROR\",\"ROLLBACK_ON_ERROR\",\"ROLLBACK_TARGET_ON_ERROR\",\"ABORT_TARGET_ON_ERROR\"], optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - parentTemplateId: (string, optional)\n  - projectId: (string, optional)\n  - projectName: (string, optional)\n  - rollbackTemplateContent: (string, optional)\n  - rollbackTemplateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - softwareType: (string, optional)\n  - softwareVariant: (string, optional)\n  - softwareVersion: (string, optional)\n  - tags: (array[string], optional)\n  - templateContent: (string, optional)\n  - templateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - version: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"author\": \"string\",\n  \"composite\": false,\n  \"containingTemplates\": [\n    {\n      \"composite\": false,\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"version\": \"string\"\n    }\n  ],\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"deviceTypes\": [\n    {\n      \"productFamily\": \"string\",\n      \"productSeries\": \"string\",\n      \"productType\": \"string\"\n    }\n  ],\n  \"failurePolicy\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"parentTemplateId\": \"string\",\n  \"projectId\": \"string\",\n  \"projectName\": \"string\",\n  \"rollbackTemplateContent\": \"string\",\n  \"rollbackTemplateParams\": [\n    {\n      \"binding\": \"string\",\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"notParam\": false,\n      \"order\": 0,\n      \"paramArray\": false,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": {\n        \"id\": \"string\",\n        \"selectionType\": \"string\",\n        \"selectionValues\": {\n          \n        }\n      }\n    }\n  ],\n  \"softwareType\": \"string\",\n  \"softwareVariant\": \"string\",\n  \"softwareVersion\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templateContent\": \"string\",\n  \"templateParams\": [\n    {\n      \"binding\": \"string\",\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"notParam\": false,\n      \"order\": 0,\n      \"paramArray\": false,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": {\n        \"id\": \"string\",\n        \"selectionType\": \"string\",\n        \"selectionValues\": {\n          \n        }\n      }\n    }\n  ],\n  \"version\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/project/:projectId/template",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"project",
												":projectId",
												"template"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "",
													"description": "(string, required) projectId"
												}
											]
										},
										"description": "Creates a new template\n\n###### Request Model\n- root: (map, optional)\n  - author: (string, optional)\n  - composite: (boolean, optional)\n  - containingTemplates: (array[map], optional)\n    - composite: (boolean, optional)\n    - id: (string, optional)\n    - name: (string, optional)\n    - version: (string, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - deviceTypes: (array[map], optional)\n    - productFamily: (string, optional)\n    - productSeries: (string, optional)\n    - productType: (string, optional)\n  - failurePolicy: (enum[\"ABORT_ON_ERROR\",\"CONTINUE_ON_ERROR\",\"ROLLBACK_ON_ERROR\",\"ROLLBACK_TARGET_ON_ERROR\",\"ABORT_TARGET_ON_ERROR\"], optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - parentTemplateId: (string, optional)\n  - projectId: (string, optional)\n  - projectName: (string, optional)\n  - rollbackTemplateContent: (string, optional)\n  - rollbackTemplateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - softwareType: (string, optional)\n  - softwareVariant: (string, optional)\n  - softwareVersion: (string, optional)\n  - tags: (array[string], optional)\n  - templateContent: (string, optional)\n  - templateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - version: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Gets the templates available",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template?projectId=&softwareType=&softwareVersion=&productFamily=&productSeries=&productType=&filterConflictingTemplates=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"template"
									],
									"query": [
										{
											"key": "projectId",
											"value": "",
											"description": "(string, optional) projectId"
										},
										{
											"key": "softwareType",
											"value": "",
											"description": "(string, optional) softwareType"
										},
										{
											"key": "softwareVersion",
											"value": "",
											"description": "(string, optional) softwareVersion"
										},
										{
											"key": "productFamily",
											"value": "",
											"description": "(string, optional) productFamily"
										},
										{
											"key": "productSeries",
											"value": "",
											"description": "(string, optional) productSeries"
										},
										{
											"key": "productType",
											"value": "",
											"description": "(string, optional) productType"
										},
										{
											"key": "filterConflictingTemplates",
											"value": "",
											"description": "(boolean, optional) filterConflictingTemplates"
										}
									]
								},
								"description": "List the templates available\n\n###### Response Model\n- root: (any, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template?projectId=&softwareType=&softwareVersion=&productFamily=&productSeries=&productType=&filterConflictingTemplates=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"template"
											],
											"query": [
												{
													"key": "projectId",
													"value": "",
													"description": "(string, optional) projectId"
												},
												{
													"key": "softwareType",
													"value": "",
													"description": "(string, optional) softwareType"
												},
												{
													"key": "softwareVersion",
													"value": "",
													"description": "(string, optional) softwareVersion"
												},
												{
													"key": "productFamily",
													"value": "",
													"description": "(string, optional) productFamily"
												},
												{
													"key": "productSeries",
													"value": "",
													"description": "(string, optional) productSeries"
												},
												{
													"key": "productType",
													"value": "",
													"description": "(string, optional) productType"
												},
												{
													"key": "filterConflictingTemplates",
													"value": "",
													"description": "(boolean, optional) filterConflictingTemplates"
												}
											]
										},
										"description": "List the templates available\n\n###### Response Model\n- root: (any, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "\"any\""
								}
							]
						},
						{
							"name": "Update Template",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"author\": \"string\",\n  \"composite\": false,\n  \"containingTemplates\": [\n    {\n      \"composite\": false,\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"version\": \"string\"\n    }\n  ],\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"deviceTypes\": [\n    {\n      \"productFamily\": \"string\",\n      \"productSeries\": \"string\",\n      \"productType\": \"string\"\n    }\n  ],\n  \"failurePolicy\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"parentTemplateId\": \"string\",\n  \"projectId\": \"string\",\n  \"projectName\": \"string\",\n  \"rollbackTemplateContent\": \"string\",\n  \"rollbackTemplateParams\": [\n    {\n      \"binding\": \"string\",\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"notParam\": false,\n      \"order\": 0,\n      \"paramArray\": false,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": {\n        \"id\": \"string\",\n        \"selectionType\": \"string\",\n        \"selectionValues\": {\n          \n        }\n      }\n    }\n  ],\n  \"softwareType\": \"string\",\n  \"softwareVariant\": \"string\",\n  \"softwareVersion\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templateContent\": \"string\",\n  \"templateParams\": [\n    {\n      \"binding\": \"string\",\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"notParam\": false,\n      \"order\": 0,\n      \"paramArray\": false,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": {\n        \"id\": \"string\",\n        \"selectionType\": \"string\",\n        \"selectionValues\": {\n          \n        }\n      }\n    }\n  ],\n  \"version\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"template"
									]
								},
								"description": "Updates an existing template\n\n###### Request Model\n- root: (map, optional)\n  - author: (string, optional)\n  - composite: (boolean, optional)\n  - containingTemplates: (array[map], optional)\n    - composite: (boolean, optional)\n    - id: (string, optional)\n    - name: (string, optional)\n    - version: (string, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - deviceTypes: (array[map], optional)\n    - productFamily: (string, optional)\n    - productSeries: (string, optional)\n    - productType: (string, optional)\n  - failurePolicy: (enum[\"ABORT_ON_ERROR\",\"CONTINUE_ON_ERROR\",\"ROLLBACK_ON_ERROR\",\"ROLLBACK_TARGET_ON_ERROR\",\"ABORT_TARGET_ON_ERROR\"], optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - parentTemplateId: (string, optional)\n  - projectId: (string, optional)\n  - projectName: (string, optional)\n  - rollbackTemplateContent: (string, optional)\n  - rollbackTemplateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - softwareType: (string, optional)\n  - softwareVariant: (string, optional)\n  - softwareVersion: (string, optional)\n  - tags: (array[string], optional)\n  - templateContent: (string, optional)\n  - templateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - version: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"author\": \"string\",\n  \"composite\": false,\n  \"containingTemplates\": [\n    {\n      \"composite\": false,\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"version\": \"string\"\n    }\n  ],\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"deviceTypes\": [\n    {\n      \"productFamily\": \"string\",\n      \"productSeries\": \"string\",\n      \"productType\": \"string\"\n    }\n  ],\n  \"failurePolicy\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"parentTemplateId\": \"string\",\n  \"projectId\": \"string\",\n  \"projectName\": \"string\",\n  \"rollbackTemplateContent\": \"string\",\n  \"rollbackTemplateParams\": [\n    {\n      \"binding\": \"string\",\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"notParam\": false,\n      \"order\": 0,\n      \"paramArray\": false,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": {\n        \"id\": \"string\",\n        \"selectionType\": \"string\",\n        \"selectionValues\": {\n          \n        }\n      }\n    }\n  ],\n  \"softwareType\": \"string\",\n  \"softwareVariant\": \"string\",\n  \"softwareVersion\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templateContent\": \"string\",\n  \"templateParams\": [\n    {\n      \"binding\": \"string\",\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"notParam\": false,\n      \"order\": 0,\n      \"paramArray\": false,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": {\n        \"id\": \"string\",\n        \"selectionType\": \"string\",\n        \"selectionValues\": {\n          \n        }\n      }\n    }\n  ],\n  \"version\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"template"
											]
										},
										"description": "Updates an existing template\n\n###### Request Model\n- root: (map, optional)\n  - author: (string, optional)\n  - composite: (boolean, optional)\n  - containingTemplates: (array[map], optional)\n    - composite: (boolean, optional)\n    - id: (string, optional)\n    - name: (string, optional)\n    - version: (string, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - deviceTypes: (array[map], optional)\n    - productFamily: (string, optional)\n    - productSeries: (string, optional)\n    - productType: (string, optional)\n  - failurePolicy: (enum[\"ABORT_ON_ERROR\",\"CONTINUE_ON_ERROR\",\"ROLLBACK_ON_ERROR\",\"ROLLBACK_TARGET_ON_ERROR\",\"ABORT_TARGET_ON_ERROR\"], optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - parentTemplateId: (string, optional)\n  - projectId: (string, optional)\n  - projectName: (string, optional)\n  - rollbackTemplateContent: (string, optional)\n  - rollbackTemplateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - softwareType: (string, optional)\n  - softwareVariant: (string, optional)\n  - softwareVersion: (string, optional)\n  - tags: (array[string], optional)\n  - templateContent: (string, optional)\n  - templateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - version: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete Template",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/:templateId",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"template",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "",
											"description": "(string, required) templateId"
										}
									]
								},
								"description": "Deletes an existing template\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/:templateId",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"template",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "",
													"description": "(string, required) templateId"
												}
											]
										},
										"description": "Deletes an existing template\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Template Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/:templateId?latestVersion=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"template",
										":templateId"
									],
									"query": [
										{
											"key": "latestVersion",
											"value": "",
											"description": "(boolean, optional) latestVersion"
										}
									],
									"variable": [
										{
											"key": "templateId",
											"value": "",
											"description": "(string, required) templateId"
										}
									]
								},
								"description": "Returns details of the specified template\n\n###### Response Model\n- root: (map, optional)\n  - author: (string, optional)\n  - composite: (boolean, optional)\n  - containingTemplates: (array[map], optional)\n    - composite: (boolean, optional)\n    - id: (string, optional)\n    - name: (string, optional)\n    - version: (string, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - deviceTypes: (array[map], optional)\n    - productFamily: (string, optional)\n    - productSeries: (string, optional)\n    - productType: (string, optional)\n  - failurePolicy: (enum[\"ABORT_ON_ERROR\",\"CONTINUE_ON_ERROR\",\"ROLLBACK_ON_ERROR\",\"ROLLBACK_TARGET_ON_ERROR\",\"ABORT_TARGET_ON_ERROR\"], optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - parentTemplateId: (string, optional)\n  - projectId: (string, optional)\n  - projectName: (string, optional)\n  - rollbackTemplateContent: (string, optional)\n  - rollbackTemplateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - softwareType: (string, optional)\n  - softwareVariant: (string, optional)\n  - softwareVersion: (string, optional)\n  - tags: (array[string], optional)\n  - templateContent: (string, optional)\n  - templateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/:templateId?latestVersion=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"template",
												":templateId"
											],
											"query": [
												{
													"key": "latestVersion",
													"value": "",
													"description": "(boolean, optional) latestVersion"
												}
											],
											"variable": [
												{
													"key": "templateId",
													"value": "",
													"description": "(string, required) templateId"
												}
											]
										},
										"description": "Returns details of the specified template\n\n###### Response Model\n- root: (map, optional)\n  - author: (string, optional)\n  - composite: (boolean, optional)\n  - containingTemplates: (array[map], optional)\n    - composite: (boolean, optional)\n    - id: (string, optional)\n    - name: (string, optional)\n    - version: (string, optional)\n  - createTime: (integer, optional)\n  - description: (string, optional)\n  - deviceTypes: (array[map], optional)\n    - productFamily: (string, optional)\n    - productSeries: (string, optional)\n    - productType: (string, optional)\n  - failurePolicy: (enum[\"ABORT_ON_ERROR\",\"CONTINUE_ON_ERROR\",\"ROLLBACK_ON_ERROR\",\"ROLLBACK_TARGET_ON_ERROR\",\"ABORT_TARGET_ON_ERROR\"], optional)\n  - id: (string, optional)\n  - lastUpdateTime: (integer, optional)\n  - name: (string, optional)\n  - parentTemplateId: (string, optional)\n  - projectId: (string, optional)\n  - projectName: (string, optional)\n  - rollbackTemplateContent: (string, optional)\n  - rollbackTemplateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - softwareType: (string, optional)\n  - softwareVariant: (string, optional)\n  - softwareVersion: (string, optional)\n  - tags: (array[string], optional)\n  - templateContent: (string, optional)\n  - templateParams: (array[map], optional)\n    - binding: (string, optional)\n    - dataType: (enum[\"STRING\",\"INTEGER\",\"IPADDRESS\",\"MACADDRESS\",\"SECTIONDIVIDER\"], optional)\n    - defaultValue: (string, optional)\n    - description: (string, optional)\n    - displayName: (string, optional)\n    - group: (string, optional)\n    - id: (string, optional)\n    - instructionText: (string, optional)\n    - key: (string, optional)\n    - notParam: (boolean, optional)\n    - order: (integer, optional)\n    - paramArray: (boolean, optional)\n    - parameterName: (string, optional)\n    - provider: (string, optional)\n    - range: (array[map], optional)\n      - id: (string, optional)\n      - maxValue: (integer, optional)\n      - minValue: (integer, optional)\n    - required: (boolean, optional)\n    - selection: (map, optional)\n      - id: (string, optional)\n      - selectionType: (enum[\"SINGLE_SELECT\",\"MULTI_SELECT\"], optional)\n      - selectionValues: (map, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"author\": \"string\",\n  \"composite\": false,\n  \"containingTemplates\": [\n    {\n      \"composite\": false,\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"version\": \"string\"\n    }\n  ],\n  \"createTime\": 0,\n  \"description\": \"string\",\n  \"deviceTypes\": [\n    {\n      \"productFamily\": \"string\",\n      \"productSeries\": \"string\",\n      \"productType\": \"string\"\n    }\n  ],\n  \"failurePolicy\": \"string\",\n  \"id\": \"string\",\n  \"lastUpdateTime\": 0,\n  \"name\": \"string\",\n  \"parentTemplateId\": \"string\",\n  \"projectId\": \"string\",\n  \"projectName\": \"string\",\n  \"rollbackTemplateContent\": \"string\",\n  \"rollbackTemplateParams\": [\n    {\n      \"binding\": \"string\",\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"notParam\": false,\n      \"order\": 0,\n      \"paramArray\": false,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": {\n        \"id\": \"string\",\n        \"selectionType\": \"string\",\n        \"selectionValues\": {\n          \n        }\n      }\n    }\n  ],\n  \"softwareType\": \"string\",\n  \"softwareVariant\": \"string\",\n  \"softwareVersion\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"templateContent\": \"string\",\n  \"templateParams\": [\n    {\n      \"binding\": \"string\",\n      \"dataType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"description\": \"string\",\n      \"displayName\": \"string\",\n      \"group\": \"string\",\n      \"id\": \"string\",\n      \"instructionText\": \"string\",\n      \"key\": \"string\",\n      \"notParam\": false,\n      \"order\": 0,\n      \"paramArray\": false,\n      \"parameterName\": \"string\",\n      \"provider\": \"string\",\n      \"range\": [\n        {\n          \"id\": \"string\",\n          \"maxValue\": 0,\n          \"minValue\": 0\n        }\n      ],\n      \"required\": false,\n      \"selection\": {\n        \"id\": \"string\",\n        \"selectionType\": \"string\",\n        \"selectionValues\": {\n          \n        }\n      }\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Deploy Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"forcePushTemplate\": false,\n  \"isComposite\": false,\n  \"mainTemplateId\": \"string\",\n  \"memberTemplateDeploymentInfo\": [\n    \"???\"\n  ],\n  \"targetInfo\": [\n    {\n      \"hostName\": \"string\",\n      \"id\": \"string\",\n      \"params\": {\n        \n      },\n      \"type\": \"string\"\n    }\n  ],\n  \"templateId\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/deploy",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"template",
										"deploy"
									]
								},
								"description": "Deploys a template\n\n###### Request Model\n- root: (map, optional)\n  - forcePushTemplate: (boolean, optional)\n  - isComposite: (boolean, optional)\n  - mainTemplateId: (string, optional)\n  - memberTemplateDeploymentInfo: (array[], optional)\n  - targetInfo: (array[map], optional)\n    - hostName: (string, optional)\n    - id: (string, optional)\n    - params: (map, optional)\n    - type: (enum[\"MANAGED_DEVICE_IP\",\"MANAGED_DEVICE_UUID\",\"PRE_PROVISIONED_SERIAL\",\"PRE_PROVISIONED_MAC\",\"DEFAULT\",\"MANAGED_DEVICE_HOSTNAME\"], optional)\n  - templateId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - deploymentId: (string, optional)\n  - deploymentName: (string, optional)\n  - devices: (array[map], optional)\n    - deviceId: (string, optional)\n    - duration: (string, optional)\n    - endTime: (string, optional)\n    - ipAddress: (string, optional)\n    - name: (string, optional)\n    - startTime: (string, optional)\n    - status: (string, optional)\n  - duration: (string, optional)\n  - endTime: (string, optional)\n  - projectName: (string, optional)\n  - startTime: (string, optional)\n  - status: (string, optional)\n  - templateName: (string, optional)\n  - templateVersion: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"forcePushTemplate\": false,\n  \"isComposite\": false,\n  \"mainTemplateId\": \"string\",\n  \"memberTemplateDeploymentInfo\": [\n    \"???\"\n  ],\n  \"targetInfo\": [\n    {\n      \"hostName\": \"string\",\n      \"id\": \"string\",\n      \"params\": {\n        \n      },\n      \"type\": \"string\"\n    }\n  ],\n  \"templateId\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/deploy",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"template",
												"deploy"
											]
										},
										"description": "Deploys a template\n\n###### Request Model\n- root: (map, optional)\n  - forcePushTemplate: (boolean, optional)\n  - isComposite: (boolean, optional)\n  - mainTemplateId: (string, optional)\n  - memberTemplateDeploymentInfo: (array[], optional)\n  - targetInfo: (array[map], optional)\n    - hostName: (string, optional)\n    - id: (string, optional)\n    - params: (map, optional)\n    - type: (enum[\"MANAGED_DEVICE_IP\",\"MANAGED_DEVICE_UUID\",\"PRE_PROVISIONED_SERIAL\",\"PRE_PROVISIONED_MAC\",\"DEFAULT\",\"MANAGED_DEVICE_HOSTNAME\"], optional)\n  - templateId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - deploymentId: (string, optional)\n  - deploymentName: (string, optional)\n  - devices: (array[map], optional)\n    - deviceId: (string, optional)\n    - duration: (string, optional)\n    - endTime: (string, optional)\n    - ipAddress: (string, optional)\n    - name: (string, optional)\n    - startTime: (string, optional)\n    - status: (string, optional)\n  - duration: (string, optional)\n  - endTime: (string, optional)\n  - projectName: (string, optional)\n  - startTime: (string, optional)\n  - status: (string, optional)\n  - templateName: (string, optional)\n  - templateVersion: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"deploymentId\": \"string\",\n  \"deploymentName\": \"string\",\n  \"devices\": [\n    {\n      \"deviceId\": \"string\",\n      \"duration\": \"string\",\n      \"endTime\": \"string\",\n      \"ipAddress\": \"string\",\n      \"name\": \"string\",\n      \"startTime\": \"string\",\n      \"status\": \"string\"\n    }\n  ],\n  \"duration\": \"string\",\n  \"endTime\": \"string\",\n  \"projectName\": \"string\",\n  \"startTime\": \"string\",\n  \"status\": \"string\",\n  \"templateName\": \"string\",\n  \"templateVersion\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Template deployment status",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/deploy/status/:deploymentId",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"template",
										"deploy",
										"status",
										":deploymentId"
									],
									"variable": [
										{
											"key": "deploymentId",
											"value": "",
											"description": "(string, required) deploymentId"
										}
									]
								},
								"description": "Returns the status of a deployed template.\n\n###### Response Model\n- root: (map, optional)\n  - deploymentId: (string, optional)\n  - deploymentName: (string, optional)\n  - devices: (array[map], optional)\n    - deviceId: (string, optional)\n    - duration: (string, optional)\n    - endTime: (string, optional)\n    - ipAddress: (string, optional)\n    - name: (string, optional)\n    - startTime: (string, optional)\n    - status: (string, optional)\n  - duration: (string, optional)\n  - endTime: (string, optional)\n  - projectName: (string, optional)\n  - startTime: (string, optional)\n  - status: (string, optional)\n  - templateName: (string, optional)\n  - templateVersion: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/deploy/status/:deploymentId",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"template",
												"deploy",
												"status",
												":deploymentId"
											],
											"variable": [
												{
													"key": "deploymentId",
													"value": "",
													"description": "(string, required) deploymentId"
												}
											]
										},
										"description": "Returns the status of a deployed template.\n\n###### Response Model\n- root: (map, optional)\n  - deploymentId: (string, optional)\n  - deploymentName: (string, optional)\n  - devices: (array[map], optional)\n    - deviceId: (string, optional)\n    - duration: (string, optional)\n    - endTime: (string, optional)\n    - ipAddress: (string, optional)\n    - name: (string, optional)\n    - startTime: (string, optional)\n    - status: (string, optional)\n  - duration: (string, optional)\n  - endTime: (string, optional)\n  - projectName: (string, optional)\n  - startTime: (string, optional)\n  - status: (string, optional)\n  - templateName: (string, optional)\n  - templateVersion: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"deploymentId\": \"string\",\n  \"deploymentName\": \"string\",\n  \"devices\": [\n    {\n      \"deviceId\": \"string\",\n      \"duration\": \"string\",\n      \"endTime\": \"string\",\n      \"ipAddress\": \"string\",\n      \"name\": \"string\",\n      \"startTime\": \"string\",\n      \"status\": \"string\"\n    }\n  ],\n  \"duration\": \"string\",\n  \"endTime\": \"string\",\n  \"projectName\": \"string\",\n  \"startTime\": \"string\",\n  \"status\": \"string\",\n  \"templateName\": \"string\",\n  \"templateVersion\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Preview Template",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"params\": {\n    \n  },\n  \"templateId\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/preview",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"template",
										"preview"
									]
								},
								"description": "Previews an existing template\n\n###### Request Model\n- root: (map, optional)\n  - params: (map, optional)\n  - templateId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - cliPreview: (string, optional)\n  - templateId: (string, optional)\n  - validationErrors: (any, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"params\": {\n    \n  },\n  \"templateId\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/preview",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"template",
												"preview"
											]
										},
										"description": "Previews an existing template\n\n###### Request Model\n- root: (map, optional)\n  - params: (map, optional)\n  - templateId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - cliPreview: (string, optional)\n  - templateId: (string, optional)\n  - validationErrors: (any, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"cliPreview\": \"string\",\n  \"templateId\": \"string\",\n  \"validationErrors\": \"any\"\n}"
								}
							]
						},
						{
							"name": "Version Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comments\": \"string\",\n  \"templateId\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/version",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"template",
										"version"
									]
								},
								"description": "Creates Versioning for the current contents of the template\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - templateId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comments\": \"string\",\n  \"templateId\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/version",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"template",
												"version"
											]
										},
										"description": "Creates Versioning for the current contents of the template\n\n###### Request Model\n- root: (map, optional)\n  - comments: (string, optional)\n  - templateId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Template Versions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/version/:templateId",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"template-programmer",
										"template",
										"version",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "",
											"description": "(string, required) templateId"
										}
									]
								},
								"description": "Returns the versions of a specified template\n\n###### Response Model\n- root: (array[map], optional)\n  - name: (string, optional) Name\n  - projectName: (string, optional) Project Name\n  - projectId: (string, optional) Project Id\n  - templateId: (string, optional) Template Id\n  - versionsInfo: (array[map], optional)\n    - id: (string, optional) Id\n    - description: (string, optional) Description\n    - versionTime: (number, optional) Version Time\n  - composite: (boolean, optional) Composite"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/template-programmer/template/version/:templateId",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"template-programmer",
												"template",
												"version",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "",
													"description": "(string, required) templateId"
												}
											]
										},
										"description": "Returns the versions of a specified template\n\n###### Response Model\n- root: (array[map], optional)\n  - name: (string, optional) Name\n  - projectName: (string, optional) Project Name\n  - projectId: (string, optional) Project Id\n  - templateId: (string, optional) Template Id\n  - versionsInfo: (array[map], optional)\n    - id: (string, optional) Id\n    - description: (string, optional) Description\n    - versionTime: (number, optional) Version Time\n  - composite: (boolean, optional) Composite"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"string\",\n    \"projectName\": \"string\",\n    \"projectId\": \"string\",\n    \"templateId\": \"string\",\n    \"versionsInfo\": [\n      {\n        \"id\": \"string\",\n        \"description\": \"string\",\n        \"versionTime\": 0.1\n      }\n    ],\n    \"composite\": false\n  }\n]"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Site Management",
			"item": [
				{
					"name": "PnP",
					"item": [
						{
							"name": "Get Device list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device?limit=&offset=&sort=&sortOrder=&serialNumber=&state=&onbState=&cmState=&name=&pid=&source=&projectId=&workflowId=&projectName=&workflowName=&smartAccountId=&virtualAccountId=&lastContact=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "(integer, optional) Limits number of results"
										},
										{
											"key": "offset",
											"value": "",
											"description": "(integer, optional) Index of first result"
										},
										{
											"key": "sort",
											"value": "",
											"description": "(array, optional) Comma seperated list of fields to sort on"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "(string, optional) Sort Order Ascending (asc) or Descending (des)"
										},
										{
											"key": "serialNumber",
											"value": "",
											"description": "(array, optional) Device Serial Number"
										},
										{
											"key": "state",
											"value": "",
											"description": "(array, optional) Device State"
										},
										{
											"key": "onbState",
											"value": "",
											"description": "(array, optional) Device Onboarding State"
										},
										{
											"key": "cmState",
											"value": "",
											"description": "(array, optional) Device Connection Manager State"
										},
										{
											"key": "name",
											"value": "",
											"description": "(array, optional) Device Name"
										},
										{
											"key": "pid",
											"value": "",
											"description": "(array, optional) Device ProductId"
										},
										{
											"key": "source",
											"value": "",
											"description": "(array, optional) Device Source"
										},
										{
											"key": "projectId",
											"value": "",
											"description": "(array, optional) Device Project Id"
										},
										{
											"key": "workflowId",
											"value": "",
											"description": "(array, optional) Device Workflow Id"
										},
										{
											"key": "projectName",
											"value": "",
											"description": "(array, optional) Device Project Name"
										},
										{
											"key": "workflowName",
											"value": "",
											"description": "(array, optional) Device Workflow Name"
										},
										{
											"key": "smartAccountId",
											"value": "",
											"description": "(array, optional) Device Smart Account"
										},
										{
											"key": "virtualAccountId",
											"value": "",
											"description": "(array, optional) Device Virtual Account"
										},
										{
											"key": "lastContact",
											"value": "",
											"description": "(boolean, optional) Device Has Contacted lastContact > 0"
										}
									]
								},
								"description": "Returns list of devices based on filter crieteria. If a limit is not specified, it will default to return 50 devices. Pagination and sorting are also supported by this endpoint\n\n###### Response Model\n- root: (map, optional)\n  - deviceInfo: (map, optional)\n    - source: (string, optional) Source\n    - serialNumber: (string, optional) Serial Number\n    - stack: (boolean, optional) Stack\n    - mode: (string, optional) Mode\n    - state: (string, optional) State\n    - location: (map, optional)\n      - siteId: (string, optional) Site Id\n      - address: (string, optional) Address\n      - latitude: (string, optional) Latitude\n      - longitude: (string, optional) Longitude\n      - altitude: (string, optional) Altitude\n    - description: (string, optional) Description\n    - onbState: (string, optional) Onb State\n    - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n    - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n    - capabilitiesSupported: (array[string], optional)\n    - featuresSupported: (array[string], optional)\n    - cmState: (string, optional) Cm State\n    - firstContact: (number, optional) First Contact\n    - lastContact: (number, optional) Last Contact\n    - macAddress: (string, optional) Mac Address\n    - pid: (string, optional) Pid\n    - deviceSudiSerialNos: (array[string], optional)\n    - lastUpdateOn: (number, optional) Last Update On\n    - workflowId: (string, optional) Workflow Id\n    - workflowName: (string, optional) Workflow Name\n    - projectId: (string, optional) Project Id\n    - projectName: (string, optional) Project Name\n    - deviceType: (string, optional) Device Type\n    - agentType: (string, optional) Agent Type\n    - imageVersion: (string, optional) Image Version\n    - fileSystemList: (array[map], optional)\n      - type: (string, optional) Type\n      - writeable: (boolean, optional) Writeable\n      - freespace: (number, optional) Freespace\n      - name: (string, optional) Name\n      - readable: (boolean, optional) Readable\n      - size: (number, optional) Size\n    - pnpProfileList: (array[map], optional)\n      - profileName: (string, optional) Profile Name\n      - discoveryCreated: (boolean, optional) Discovery Created\n      - createdBy: (string, optional) Created By\n      - primaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n      - secondaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n    - imageFile: (string, optional) Image File\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional) Key\n      - value: (string, optional) Value\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional) Local Interface Name\n      - localShortInterfaceName: (string, optional) Local Short Interface Name\n      - localMacAddress: (string, optional) Local Mac Address\n      - remoteInterfaceName: (string, optional) Remote Interface Name\n      - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n      - remoteMacAddress: (string, optional) Remote Mac Address\n      - remoteDeviceName: (string, optional) Remote Device Name\n      - remotePlatform: (string, optional) Remote Platform\n      - remoteVersion: (string, optional) Remote Version\n    - lastSyncTime: (number, optional) Last Sync Time\n    - ipInterfaces: (array[map], optional)\n      - status: (string, optional) Status\n      - macAddress: (string, optional) Mac Address\n      - ipv4Address: (map, optional)\n      - ipv6AddressList: (array[map], optional)\n      - name: (string, optional) Name\n    - hostname: (string, optional) Hostname\n    - authStatus: (string, optional) Auth Status\n    - stackInfo: (map, optional)\n      - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n      - isFullRing: (boolean, optional) Is Full Ring\n      - stackMemberList: (array[map], optional)\n        - serialNumber: (string, optional) Serial Number\n        - state: (string, optional) State\n        - role: (string, optional) Role\n        - macAddress: (string, optional) Mac Address\n        - pid: (string, optional) Pid\n        - licenseLevel: (string, optional) License Level\n        - licenseType: (string, optional) License Type\n        - sudiSerialNumber: (string, optional) Sudi Serial Number\n        - hardwareVersion: (string, optional) Hardware Version\n        - stackNumber: (number, optional) Stack Number\n        - softwareVersion: (string, optional) Software Version\n        - priority: (number, optional) Priority\n      - stackRingProtocol: (string, optional) Stack Ring Protocol\n      - validLicenseLevels: (array[string], optional)\n      - totalMemberCount: (number, optional) Total Member Count\n    - reloadRequested: (boolean, optional) Reload Requested\n    - addedOn: (number, optional) Added On\n    - siteId: (string, optional) Site Id\n    - aaaCredentials: (map, optional)\n      - password: (string, optional) Password\n      - username: (string, optional) Username\n    - userMicNumbers: (array[string], optional)\n    - userSudiSerialNos: (array[string], optional)\n    - addnMacAddrs: (array[string], optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional) Cli\n      - cliOutput: (string, optional) Cli Output\n    - tags: (map, optional)\n    - sudiRequired: (boolean, optional) Sudi Required\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - populateInventory: (boolean, optional) Populate Inventory\n    - siteName: (string, optional) Site Name\n    - name: (string, optional) Name\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - workflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - type: (string, optional) Type\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - name: (string, optional) Name\n    - errorFlag: (boolean, optional) Error Flag\n    - timestamp: (number, optional) Timestamp\n  - workflowParameters: (map, optional)\n    - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n    - licenseLevel: (string, optional) License Level\n    - licenseType: (string, optional) License Type\n    - configList: (array[map], optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - configId: (string, optional) Config Id\n  - dayZeroConfig: (map, optional)\n    - config: (string, optional) Config\n  - dayZeroConfigPreview: (map, optional)\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device?limit=&offset=&sort=&sortOrder=&serialNumber=&state=&onbState=&cmState=&name=&pid=&source=&projectId=&workflowId=&projectName=&workflowName=&smartAccountId=&virtualAccountId=&lastContact=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device"
											],
											"query": [
												{
													"key": "limit",
													"value": "",
													"description": "(integer, optional) Limits number of results"
												},
												{
													"key": "offset",
													"value": "",
													"description": "(integer, optional) Index of first result"
												},
												{
													"key": "sort",
													"value": "",
													"description": "(array, optional) Comma seperated list of fields to sort on"
												},
												{
													"key": "sortOrder",
													"value": "",
													"description": "(string, optional) Sort Order Ascending (asc) or Descending (des)"
												},
												{
													"key": "serialNumber",
													"value": "",
													"description": "(array, optional) Device Serial Number"
												},
												{
													"key": "state",
													"value": "",
													"description": "(array, optional) Device State"
												},
												{
													"key": "onbState",
													"value": "",
													"description": "(array, optional) Device Onboarding State"
												},
												{
													"key": "cmState",
													"value": "",
													"description": "(array, optional) Device Connection Manager State"
												},
												{
													"key": "name",
													"value": "",
													"description": "(array, optional) Device Name"
												},
												{
													"key": "pid",
													"value": "",
													"description": "(array, optional) Device ProductId"
												},
												{
													"key": "source",
													"value": "",
													"description": "(array, optional) Device Source"
												},
												{
													"key": "projectId",
													"value": "",
													"description": "(array, optional) Device Project Id"
												},
												{
													"key": "workflowId",
													"value": "",
													"description": "(array, optional) Device Workflow Id"
												},
												{
													"key": "projectName",
													"value": "",
													"description": "(array, optional) Device Project Name"
												},
												{
													"key": "workflowName",
													"value": "",
													"description": "(array, optional) Device Workflow Name"
												},
												{
													"key": "smartAccountId",
													"value": "",
													"description": "(array, optional) Device Smart Account"
												},
												{
													"key": "virtualAccountId",
													"value": "",
													"description": "(array, optional) Device Virtual Account"
												},
												{
													"key": "lastContact",
													"value": "",
													"description": "(boolean, optional) Device Has Contacted lastContact > 0"
												}
											]
										},
										"description": "Returns list of devices based on filter crieteria. If a limit is not specified, it will default to return 50 devices. Pagination and sorting are also supported by this endpoint\n\n###### Response Model\n- root: (map, optional)\n  - deviceInfo: (map, optional)\n    - source: (string, optional) Source\n    - serialNumber: (string, optional) Serial Number\n    - stack: (boolean, optional) Stack\n    - mode: (string, optional) Mode\n    - state: (string, optional) State\n    - location: (map, optional)\n      - siteId: (string, optional) Site Id\n      - address: (string, optional) Address\n      - latitude: (string, optional) Latitude\n      - longitude: (string, optional) Longitude\n      - altitude: (string, optional) Altitude\n    - description: (string, optional) Description\n    - onbState: (string, optional) Onb State\n    - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n    - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n    - capabilitiesSupported: (array[string], optional)\n    - featuresSupported: (array[string], optional)\n    - cmState: (string, optional) Cm State\n    - firstContact: (number, optional) First Contact\n    - lastContact: (number, optional) Last Contact\n    - macAddress: (string, optional) Mac Address\n    - pid: (string, optional) Pid\n    - deviceSudiSerialNos: (array[string], optional)\n    - lastUpdateOn: (number, optional) Last Update On\n    - workflowId: (string, optional) Workflow Id\n    - workflowName: (string, optional) Workflow Name\n    - projectId: (string, optional) Project Id\n    - projectName: (string, optional) Project Name\n    - deviceType: (string, optional) Device Type\n    - agentType: (string, optional) Agent Type\n    - imageVersion: (string, optional) Image Version\n    - fileSystemList: (array[map], optional)\n      - type: (string, optional) Type\n      - writeable: (boolean, optional) Writeable\n      - freespace: (number, optional) Freespace\n      - name: (string, optional) Name\n      - readable: (boolean, optional) Readable\n      - size: (number, optional) Size\n    - pnpProfileList: (array[map], optional)\n      - profileName: (string, optional) Profile Name\n      - discoveryCreated: (boolean, optional) Discovery Created\n      - createdBy: (string, optional) Created By\n      - primaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n      - secondaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n    - imageFile: (string, optional) Image File\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional) Key\n      - value: (string, optional) Value\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional) Local Interface Name\n      - localShortInterfaceName: (string, optional) Local Short Interface Name\n      - localMacAddress: (string, optional) Local Mac Address\n      - remoteInterfaceName: (string, optional) Remote Interface Name\n      - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n      - remoteMacAddress: (string, optional) Remote Mac Address\n      - remoteDeviceName: (string, optional) Remote Device Name\n      - remotePlatform: (string, optional) Remote Platform\n      - remoteVersion: (string, optional) Remote Version\n    - lastSyncTime: (number, optional) Last Sync Time\n    - ipInterfaces: (array[map], optional)\n      - status: (string, optional) Status\n      - macAddress: (string, optional) Mac Address\n      - ipv4Address: (map, optional)\n      - ipv6AddressList: (array[map], optional)\n      - name: (string, optional) Name\n    - hostname: (string, optional) Hostname\n    - authStatus: (string, optional) Auth Status\n    - stackInfo: (map, optional)\n      - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n      - isFullRing: (boolean, optional) Is Full Ring\n      - stackMemberList: (array[map], optional)\n        - serialNumber: (string, optional) Serial Number\n        - state: (string, optional) State\n        - role: (string, optional) Role\n        - macAddress: (string, optional) Mac Address\n        - pid: (string, optional) Pid\n        - licenseLevel: (string, optional) License Level\n        - licenseType: (string, optional) License Type\n        - sudiSerialNumber: (string, optional) Sudi Serial Number\n        - hardwareVersion: (string, optional) Hardware Version\n        - stackNumber: (number, optional) Stack Number\n        - softwareVersion: (string, optional) Software Version\n        - priority: (number, optional) Priority\n      - stackRingProtocol: (string, optional) Stack Ring Protocol\n      - validLicenseLevels: (array[string], optional)\n      - totalMemberCount: (number, optional) Total Member Count\n    - reloadRequested: (boolean, optional) Reload Requested\n    - addedOn: (number, optional) Added On\n    - siteId: (string, optional) Site Id\n    - aaaCredentials: (map, optional)\n      - password: (string, optional) Password\n      - username: (string, optional) Username\n    - userMicNumbers: (array[string], optional)\n    - userSudiSerialNos: (array[string], optional)\n    - addnMacAddrs: (array[string], optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional) Cli\n      - cliOutput: (string, optional) Cli Output\n    - tags: (map, optional)\n    - sudiRequired: (boolean, optional) Sudi Required\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - populateInventory: (boolean, optional) Populate Inventory\n    - siteName: (string, optional) Site Name\n    - name: (string, optional) Name\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - workflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - type: (string, optional) Type\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - name: (string, optional) Name\n    - errorFlag: (boolean, optional) Error Flag\n    - timestamp: (number, optional) Timestamp\n  - workflowParameters: (map, optional)\n    - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n    - licenseLevel: (string, optional) License Level\n    - licenseType: (string, optional) License Type\n    - configList: (array[map], optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - configId: (string, optional) Config Id\n  - dayZeroConfig: (map, optional)\n    - config: (string, optional) Config\n  - dayZeroConfigPreview: (map, optional)\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"deviceInfo\": {\n    \"source\": \"string\",\n    \"serialNumber\": \"string\",\n    \"stack\": false,\n    \"mode\": \"string\",\n    \"state\": \"string\",\n    \"location\": {\n      \"siteId\": \"string\",\n      \"address\": \"string\",\n      \"latitude\": \"string\",\n      \"longitude\": \"string\",\n      \"altitude\": \"string\"\n    },\n    \"description\": \"string\",\n    \"onbState\": \"string\",\n    \"authenticatedMicNumber\": \"string\",\n    \"authenticatedSudiSerialNo\": \"string\",\n    \"capabilitiesSupported\": [\n      \"string\"\n    ],\n    \"featuresSupported\": [\n      \"string\"\n    ],\n    \"cmState\": \"string\",\n    \"firstContact\": 0.1,\n    \"lastContact\": 0.1,\n    \"macAddress\": \"string\",\n    \"pid\": \"string\",\n    \"deviceSudiSerialNos\": [\n      \"string\"\n    ],\n    \"lastUpdateOn\": 0.1,\n    \"workflowId\": \"string\",\n    \"workflowName\": \"string\",\n    \"projectId\": \"string\",\n    \"projectName\": \"string\",\n    \"deviceType\": \"string\",\n    \"agentType\": \"string\",\n    \"imageVersion\": \"string\",\n    \"fileSystemList\": [\n      {\n        \"type\": \"string\",\n        \"writeable\": false,\n        \"freespace\": 0.1,\n        \"name\": \"string\",\n        \"readable\": false,\n        \"size\": 0.1\n      }\n    ],\n    \"pnpProfileList\": [\n      {\n        \"profileName\": \"string\",\n        \"discoveryCreated\": false,\n        \"createdBy\": \"string\",\n        \"primaryEndpoint\": {\n          \"port\": 0.1,\n          \"protocol\": \"string\",\n          \"ipv4Address\": {\n            \n          },\n          \"ipv6Address\": {\n            \n          },\n          \"fqdn\": \"string\",\n          \"certificate\": \"string\"\n        },\n        \"secondaryEndpoint\": {\n          \"port\": 0.1,\n          \"protocol\": \"string\",\n          \"ipv4Address\": {\n            \n          },\n          \"ipv6Address\": {\n            \n          },\n          \"fqdn\": \"string\",\n          \"certificate\": \"string\"\n        }\n      }\n    ],\n    \"imageFile\": \"string\",\n    \"httpHeaders\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"neighborLinks\": [\n      {\n        \"localInterfaceName\": \"string\",\n        \"localShortInterfaceName\": \"string\",\n        \"localMacAddress\": \"string\",\n        \"remoteInterfaceName\": \"string\",\n        \"remoteShortInterfaceName\": \"string\",\n        \"remoteMacAddress\": \"string\",\n        \"remoteDeviceName\": \"string\",\n        \"remotePlatform\": \"string\",\n        \"remoteVersion\": \"string\"\n      }\n    ],\n    \"lastSyncTime\": 0.1,\n    \"ipInterfaces\": [\n      {\n        \"status\": \"string\",\n        \"macAddress\": \"string\",\n        \"ipv4Address\": {\n          \n        },\n        \"ipv6AddressList\": [\n          {\n            \n          }\n        ],\n        \"name\": \"string\"\n      }\n    ],\n    \"hostname\": \"string\",\n    \"authStatus\": \"string\",\n    \"stackInfo\": {\n      \"supportsStackWorkflows\": false,\n      \"isFullRing\": false,\n      \"stackMemberList\": [\n        {\n          \"serialNumber\": \"string\",\n          \"state\": \"string\",\n          \"role\": \"string\",\n          \"macAddress\": \"string\",\n          \"pid\": \"string\",\n          \"licenseLevel\": \"string\",\n          \"licenseType\": \"string\",\n          \"sudiSerialNumber\": \"string\",\n          \"hardwareVersion\": \"string\",\n          \"stackNumber\": 0.1,\n          \"softwareVersion\": \"string\",\n          \"priority\": 0.1\n        }\n      ],\n      \"stackRingProtocol\": \"string\",\n      \"validLicenseLevels\": [\n        \"string\"\n      ],\n      \"totalMemberCount\": 0.1\n    },\n    \"reloadRequested\": false,\n    \"addedOn\": 0.1,\n    \"siteId\": \"string\",\n    \"aaaCredentials\": {\n      \"password\": \"string\",\n      \"username\": \"string\"\n    },\n    \"userMicNumbers\": [\n      \"string\"\n    ],\n    \"userSudiSerialNos\": [\n      \"string\"\n    ],\n    \"addnMacAddrs\": [\n      \"string\"\n    ],\n    \"preWorkflowCliOuputs\": [\n      {\n        \"cli\": \"string\",\n        \"cliOutput\": \"string\"\n      }\n    ],\n    \"tags\": {\n      \n    },\n    \"sudiRequired\": false,\n    \"smartAccountId\": \"string\",\n    \"virtualAccountId\": \"string\",\n    \"populateInventory\": false,\n    \"siteName\": \"string\",\n    \"name\": \"string\"\n  },\n  \"systemResetWorkflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"systemWorkflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"workflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"runSummaryList\": [\n    {\n      \"details\": \"string\",\n      \"historyTaskInfo\": {\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"name\": \"string\"\n      },\n      \"errorFlag\": false,\n      \"timestamp\": 0.1\n    }\n  ],\n  \"workflowParameters\": {\n    \"topOfStackSerialNumber\": \"string\",\n    \"licenseLevel\": \"string\",\n    \"licenseType\": \"string\",\n    \"configList\": [\n      {\n        \"configParameters\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"configId\": \"string\"\n      }\n    ]\n  },\n  \"dayZeroConfig\": {\n    \"config\": \"string\"\n  },\n  \"dayZeroConfigPreview\": {\n    \n  },\n  \"version\": 0.1,\n  \"tenantId\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Add Device",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"_id\": \"string\",\n  \"deviceInfo\": {\n    \"aaaCredentials\": {\n      \"password\": \"string\",\n      \"username\": \"string\"\n    },\n    \"addedOn\": 0,\n    \"addnMacAddrs\": [\n      \"string\"\n    ],\n    \"agentType\": \"string\",\n    \"authStatus\": \"string\",\n    \"authenticatedSudiSerialNo\": \"string\",\n    \"capabilitiesSupported\": [\n      \"string\"\n    ],\n    \"cmState\": \"string\",\n    \"description\": \"string\",\n    \"deviceSudiSerialNos\": [\n      \"string\"\n    ],\n    \"deviceType\": \"string\",\n    \"featuresSupported\": [\n      \"string\"\n    ],\n    \"fileSystemList\": [\n      {\n        \"freespace\": 0,\n        \"name\": \"string\",\n        \"readable\": false,\n        \"size\": 0,\n        \"type\": \"string\",\n        \"writeable\": false\n      }\n    ],\n    \"firstContact\": 0,\n    \"hostname\": \"string\",\n    \"httpHeaders\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"imageFile\": \"string\",\n    \"imageVersion\": \"string\",\n    \"ipInterfaces\": [\n      {\n        \"ipv4Address\": \"any\",\n        \"ipv6AddressList\": [\n          \"any\"\n        ],\n        \"macAddress\": \"string\",\n        \"name\": \"string\",\n        \"status\": \"string\"\n      }\n    ],\n    \"lastContact\": 0,\n    \"lastSyncTime\": 0,\n    \"lastUpdateOn\": 0,\n    \"location\": {\n      \"address\": \"string\",\n      \"altitude\": \"string\",\n      \"latitude\": \"string\",\n      \"longitude\": \"string\",\n      \"siteId\": \"string\"\n    },\n    \"macAddress\": \"string\",\n    \"mode\": \"string\",\n    \"name\": \"string\",\n    \"neighborLinks\": [\n      {\n        \"localInterfaceName\": \"string\",\n        \"localMacAddress\": \"string\",\n        \"localShortInterfaceName\": \"string\",\n        \"remoteDeviceName\": \"string\",\n        \"remoteInterfaceName\": \"string\",\n        \"remoteMacAddress\": \"string\",\n        \"remotePlatform\": \"string\",\n        \"remoteShortInterfaceName\": \"string\",\n        \"remoteVersion\": \"string\"\n      }\n    ],\n    \"onbState\": \"string\",\n    \"pid\": \"string\",\n    \"pnpProfileList\": [\n      {\n        \"createdBy\": \"string\",\n        \"discoveryCreated\": false,\n        \"primaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        },\n        \"profileName\": \"string\",\n        \"secondaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        }\n      }\n    ],\n    \"populateInventory\": false,\n    \"preWorkflowCliOuputs\": [\n      {\n        \"cli\": \"string\",\n        \"cliOutput\": \"string\"\n      }\n    ],\n    \"projectId\": \"string\",\n    \"projectName\": \"string\",\n    \"reloadRequested\": false,\n    \"serialNumber\": \"string\",\n    \"smartAccountId\": \"string\",\n    \"source\": \"string\",\n    \"stack\": false,\n    \"stackInfo\": {\n      \"isFullRing\": false,\n      \"stackMemberList\": [\n        {\n          \"hardwareVersion\": \"string\",\n          \"licenseLevel\": \"string\",\n          \"licenseType\": \"string\",\n          \"macAddress\": \"string\",\n          \"pid\": \"string\",\n          \"priority\": 0,\n          \"role\": \"string\",\n          \"serialNumber\": \"string\",\n          \"softwareVersion\": \"string\",\n          \"stackNumber\": 0,\n          \"state\": \"string\",\n          \"sudiSerialNumber\": \"string\"\n        }\n      ],\n      \"stackRingProtocol\": \"string\",\n      \"supportsStackWorkflows\": false,\n      \"totalMemberCount\": 0,\n      \"validLicenseLevels\": [\n        \"string\"\n      ]\n    },\n    \"state\": \"string\",\n    \"sudiRequired\": false,\n    \"tags\": \"any\",\n    \"userSudiSerialNos\": [\n      \"string\"\n    ],\n    \"virtualAccountId\": \"string\",\n    \"workflowId\": \"string\",\n    \"workflowName\": \"string\"\n  },\n  \"runSummaryList\": [\n    {\n      \"details\": \"string\",\n      \"errorFlag\": false,\n      \"historyTaskInfo\": {\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"name\": \"string\",\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      },\n      \"timestamp\": 0\n    }\n  ],\n  \"systemResetWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"systemWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"tenantId\": \"string\",\n  \"version\": 0,\n  \"workflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"workflowParameters\": {\n    \"configList\": [\n      {\n        \"configId\": \"string\",\n        \"configParameters\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ]\n      }\n    ],\n    \"licenseLevel\": \"string\",\n    \"licenseType\": \"string\",\n    \"topOfStackSerialNumber\": \"string\"\n  }\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device"
									]
								},
								"description": "Adds a device to the PnP database.\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - deviceInfo: (map, required)\n    - aaaCredentials: (map, optional)\n      - password: (string, optional)\n      - username: (string, optional)\n    - addedOn: (integer, optional)\n    - addnMacAddrs: (array[string], optional)\n    - agentType: (enum[\"POSIX\",\"IOS\"], optional)\n    - authStatus: (string, optional)\n    - authenticatedSudiSerialNo: (string, optional)\n    - capabilitiesSupported: (array[string], optional)\n    - cmState: (enum[\"NotContacted\",\"Contacted\",\"Disconnected\",\"SecuringConnection\",\"SecuredConnection\",\"Authenticated\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\"], optional)\n    - description: (string, optional)\n    - deviceSudiSerialNos: (array[string], optional)\n    - deviceType: (string, optional)\n    - featuresSupported: (array[string], optional)\n    - fileSystemList: (array[map], optional)\n      - freespace: (integer, optional)\n      - name: (string, optional)\n      - readable: (boolean, optional)\n      - size: (integer, optional)\n      - type: (string, optional)\n      - writeable: (boolean, optional)\n    - firstContact: (integer, optional)\n    - hostname: (string, optional)\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional)\n      - value: (string, optional)\n    - imageFile: (string, optional)\n    - imageVersion: (string, optional)\n    - ipInterfaces: (array[map], optional)\n      - ipv4Address: (any, optional)\n      - ipv6AddressList: (array[any], optional)\n      - macAddress: (string, optional)\n      - name: (string, optional)\n      - status: (string, optional)\n    - lastContact: (integer, optional)\n    - lastSyncTime: (integer, optional)\n    - lastUpdateOn: (integer, optional)\n    - location: (map, optional)\n      - address: (string, optional)\n      - altitude: (string, optional)\n      - latitude: (string, optional)\n      - longitude: (string, optional)\n      - siteId: (string, optional)\n    - macAddress: (string, optional)\n    - mode: (string, optional)\n    - name: (string, optional)\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional)\n      - localMacAddress: (string, optional)\n      - localShortInterfaceName: (string, optional)\n      - remoteDeviceName: (string, optional)\n      - remoteInterfaceName: (string, optional)\n      - remoteMacAddress: (string, optional)\n      - remotePlatform: (string, optional)\n      - remoteShortInterfaceName: (string, optional)\n      - remoteVersion: (string, optional)\n    - onbState: (enum[\"NotContacted\",\"Connecting\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\",\"Initializing\",\"Initialized\",\"ErrorInitializing\",\"SudiAuthorizing\",\"ErrorSudiAuthorizing\",\"ExecutingWorkflow\",\"ExecutedWorkflow\",\"ErrorExecutingWorkflow\",\"ExecutingReset\",\"ErrorExecutingReset\",\"Provisioned\"], optional)\n    - pid: (string, optional)\n    - pnpProfileList: (array[map], optional)\n      - createdBy: (string, optional)\n      - discoveryCreated: (boolean, optional)\n      - primaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n      - profileName: (string, optional)\n      - secondaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n    - populateInventory: (boolean, optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional)\n      - cliOutput: (string, optional)\n    - projectId: (string, optional)\n    - projectName: (string, optional)\n    - reloadRequested: (boolean, optional)\n    - serialNumber: (string, required)\n    - smartAccountId: (string, optional)\n    - source: (string, optional)\n    - stack: (boolean, optional)\n    - stackInfo: (map, optional)\n      - isFullRing: (boolean, optional)\n      - stackMemberList: (array[map], optional)\n        - hardwareVersion: (string, optional)\n        - licenseLevel: (string, optional)\n        - licenseType: (string, optional)\n        - macAddress: (string, optional)\n        - pid: (string, optional)\n        - priority: (integer, optional)\n        - role: (string, optional)\n        - serialNumber: (string, optional)\n        - softwareVersion: (string, optional)\n        - stackNumber: (integer, optional)\n        - state: (string, optional)\n        - sudiSerialNumber: (string, optional)\n      - stackRingProtocol: (string, optional)\n      - supportsStackWorkflows: (boolean, optional)\n      - totalMemberCount: (integer, optional)\n      - validLicenseLevels: (array[string], optional)\n    - state: (enum[\"Unclaimed\",\"Planned\",\"Onboarding\",\"Provisioned\",\"Error\",\"Deleted\"], optional)\n    - sudiRequired: (boolean, optional)\n    - tags: (any, optional)\n    - userSudiSerialNos: (array[string], optional)\n    - virtualAccountId: (string, optional)\n    - workflowId: (string, optional)\n    - workflowName: (string, optional)\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional)\n    - errorFlag: (boolean, optional)\n    - historyTaskInfo: (map, optional)\n      - addnDetails: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n      - name: (string, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - timestamp: (integer, optional)\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n  - workflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - workflowParameters: (map, optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - deviceInfo: (map, optional)\n    - source: (string, optional) Source\n    - serialNumber: (string, optional) Serial Number\n    - stack: (boolean, optional) Stack\n    - mode: (string, optional) Mode\n    - state: (string, optional) State\n    - location: (map, optional)\n      - siteId: (string, optional) Site Id\n      - address: (string, optional) Address\n      - latitude: (string, optional) Latitude\n      - longitude: (string, optional) Longitude\n      - altitude: (string, optional) Altitude\n    - description: (string, optional) Description\n    - onbState: (string, optional) Onb State\n    - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n    - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n    - capabilitiesSupported: (array[string], optional)\n    - featuresSupported: (array[string], optional)\n    - cmState: (string, optional) Cm State\n    - firstContact: (number, optional) First Contact\n    - lastContact: (number, optional) Last Contact\n    - macAddress: (string, optional) Mac Address\n    - pid: (string, optional) Pid\n    - deviceSudiSerialNos: (array[string], optional)\n    - lastUpdateOn: (number, optional) Last Update On\n    - workflowId: (string, optional) Workflow Id\n    - workflowName: (string, optional) Workflow Name\n    - projectId: (string, optional) Project Id\n    - projectName: (string, optional) Project Name\n    - deviceType: (string, optional) Device Type\n    - agentType: (string, optional) Agent Type\n    - imageVersion: (string, optional) Image Version\n    - fileSystemList: (array[map], optional)\n      - type: (string, optional) Type\n      - writeable: (boolean, optional) Writeable\n      - freespace: (number, optional) Freespace\n      - name: (string, optional) Name\n      - readable: (boolean, optional) Readable\n      - size: (number, optional) Size\n    - pnpProfileList: (array[map], optional)\n      - profileName: (string, optional) Profile Name\n      - discoveryCreated: (boolean, optional) Discovery Created\n      - createdBy: (string, optional) Created By\n      - primaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n      - secondaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n    - imageFile: (string, optional) Image File\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional) Key\n      - value: (string, optional) Value\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional) Local Interface Name\n      - localShortInterfaceName: (string, optional) Local Short Interface Name\n      - localMacAddress: (string, optional) Local Mac Address\n      - remoteInterfaceName: (string, optional) Remote Interface Name\n      - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n      - remoteMacAddress: (string, optional) Remote Mac Address\n      - remoteDeviceName: (string, optional) Remote Device Name\n      - remotePlatform: (string, optional) Remote Platform\n      - remoteVersion: (string, optional) Remote Version\n    - lastSyncTime: (number, optional) Last Sync Time\n    - ipInterfaces: (array[map], optional)\n      - status: (string, optional) Status\n      - macAddress: (string, optional) Mac Address\n      - ipv4Address: (map, optional)\n      - ipv6AddressList: (array[map], optional)\n      - name: (string, optional) Name\n    - hostname: (string, optional) Hostname\n    - authStatus: (string, optional) Auth Status\n    - stackInfo: (map, optional)\n      - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n      - isFullRing: (boolean, optional) Is Full Ring\n      - stackMemberList: (array[map], optional)\n        - serialNumber: (string, optional) Serial Number\n        - state: (string, optional) State\n        - role: (string, optional) Role\n        - macAddress: (string, optional) Mac Address\n        - pid: (string, optional) Pid\n        - licenseLevel: (string, optional) License Level\n        - licenseType: (string, optional) License Type\n        - sudiSerialNumber: (string, optional) Sudi Serial Number\n        - hardwareVersion: (string, optional) Hardware Version\n        - stackNumber: (number, optional) Stack Number\n        - softwareVersion: (string, optional) Software Version\n        - priority: (number, optional) Priority\n      - stackRingProtocol: (string, optional) Stack Ring Protocol\n      - validLicenseLevels: (array[string], optional)\n      - totalMemberCount: (number, optional) Total Member Count\n    - reloadRequested: (boolean, optional) Reload Requested\n    - addedOn: (number, optional) Added On\n    - siteId: (string, optional) Site Id\n    - aaaCredentials: (map, optional)\n      - password: (string, optional) Password\n      - username: (string, optional) Username\n    - userMicNumbers: (array[string], optional)\n    - userSudiSerialNos: (array[string], optional)\n    - addnMacAddrs: (array[string], optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional) Cli\n      - cliOutput: (string, optional) Cli Output\n    - tags: (map, optional)\n    - sudiRequired: (boolean, optional) Sudi Required\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - populateInventory: (boolean, optional) Populate Inventory\n    - siteName: (string, optional) Site Name\n    - name: (string, optional) Name\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - workflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - type: (string, optional) Type\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - name: (string, optional) Name\n    - errorFlag: (boolean, optional) Error Flag\n    - timestamp: (number, optional) Timestamp\n  - workflowParameters: (map, optional)\n    - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n    - licenseLevel: (string, optional) License Level\n    - licenseType: (string, optional) License Type\n    - configList: (array[map], optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - configId: (string, optional) Config Id\n  - dayZeroConfig: (map, optional)\n    - config: (string, optional) Config\n  - dayZeroConfigPreview: (map, optional)\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"_id\": \"string\",\n  \"deviceInfo\": {\n    \"aaaCredentials\": {\n      \"password\": \"string\",\n      \"username\": \"string\"\n    },\n    \"addedOn\": 0,\n    \"addnMacAddrs\": [\n      \"string\"\n    ],\n    \"agentType\": \"string\",\n    \"authStatus\": \"string\",\n    \"authenticatedSudiSerialNo\": \"string\",\n    \"capabilitiesSupported\": [\n      \"string\"\n    ],\n    \"cmState\": \"string\",\n    \"description\": \"string\",\n    \"deviceSudiSerialNos\": [\n      \"string\"\n    ],\n    \"deviceType\": \"string\",\n    \"featuresSupported\": [\n      \"string\"\n    ],\n    \"fileSystemList\": [\n      {\n        \"freespace\": 0,\n        \"name\": \"string\",\n        \"readable\": false,\n        \"size\": 0,\n        \"type\": \"string\",\n        \"writeable\": false\n      }\n    ],\n    \"firstContact\": 0,\n    \"hostname\": \"string\",\n    \"httpHeaders\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"imageFile\": \"string\",\n    \"imageVersion\": \"string\",\n    \"ipInterfaces\": [\n      {\n        \"ipv4Address\": \"any\",\n        \"ipv6AddressList\": [\n          \"any\"\n        ],\n        \"macAddress\": \"string\",\n        \"name\": \"string\",\n        \"status\": \"string\"\n      }\n    ],\n    \"lastContact\": 0,\n    \"lastSyncTime\": 0,\n    \"lastUpdateOn\": 0,\n    \"location\": {\n      \"address\": \"string\",\n      \"altitude\": \"string\",\n      \"latitude\": \"string\",\n      \"longitude\": \"string\",\n      \"siteId\": \"string\"\n    },\n    \"macAddress\": \"string\",\n    \"mode\": \"string\",\n    \"name\": \"string\",\n    \"neighborLinks\": [\n      {\n        \"localInterfaceName\": \"string\",\n        \"localMacAddress\": \"string\",\n        \"localShortInterfaceName\": \"string\",\n        \"remoteDeviceName\": \"string\",\n        \"remoteInterfaceName\": \"string\",\n        \"remoteMacAddress\": \"string\",\n        \"remotePlatform\": \"string\",\n        \"remoteShortInterfaceName\": \"string\",\n        \"remoteVersion\": \"string\"\n      }\n    ],\n    \"onbState\": \"string\",\n    \"pid\": \"string\",\n    \"pnpProfileList\": [\n      {\n        \"createdBy\": \"string\",\n        \"discoveryCreated\": false,\n        \"primaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        },\n        \"profileName\": \"string\",\n        \"secondaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        }\n      }\n    ],\n    \"populateInventory\": false,\n    \"preWorkflowCliOuputs\": [\n      {\n        \"cli\": \"string\",\n        \"cliOutput\": \"string\"\n      }\n    ],\n    \"projectId\": \"string\",\n    \"projectName\": \"string\",\n    \"reloadRequested\": false,\n    \"serialNumber\": \"string\",\n    \"smartAccountId\": \"string\",\n    \"source\": \"string\",\n    \"stack\": false,\n    \"stackInfo\": {\n      \"isFullRing\": false,\n      \"stackMemberList\": [\n        {\n          \"hardwareVersion\": \"string\",\n          \"licenseLevel\": \"string\",\n          \"licenseType\": \"string\",\n          \"macAddress\": \"string\",\n          \"pid\": \"string\",\n          \"priority\": 0,\n          \"role\": \"string\",\n          \"serialNumber\": \"string\",\n          \"softwareVersion\": \"string\",\n          \"stackNumber\": 0,\n          \"state\": \"string\",\n          \"sudiSerialNumber\": \"string\"\n        }\n      ],\n      \"stackRingProtocol\": \"string\",\n      \"supportsStackWorkflows\": false,\n      \"totalMemberCount\": 0,\n      \"validLicenseLevels\": [\n        \"string\"\n      ]\n    },\n    \"state\": \"string\",\n    \"sudiRequired\": false,\n    \"tags\": \"any\",\n    \"userSudiSerialNos\": [\n      \"string\"\n    ],\n    \"virtualAccountId\": \"string\",\n    \"workflowId\": \"string\",\n    \"workflowName\": \"string\"\n  },\n  \"runSummaryList\": [\n    {\n      \"details\": \"string\",\n      \"errorFlag\": false,\n      \"historyTaskInfo\": {\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"name\": \"string\",\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      },\n      \"timestamp\": 0\n    }\n  ],\n  \"systemResetWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"systemWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"tenantId\": \"string\",\n  \"version\": 0,\n  \"workflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"workflowParameters\": {\n    \"configList\": [\n      {\n        \"configId\": \"string\",\n        \"configParameters\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ]\n      }\n    ],\n    \"licenseLevel\": \"string\",\n    \"licenseType\": \"string\",\n    \"topOfStackSerialNumber\": \"string\"\n  }\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device"
											]
										},
										"description": "Adds a device to the PnP database.\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - deviceInfo: (map, required)\n    - aaaCredentials: (map, optional)\n      - password: (string, optional)\n      - username: (string, optional)\n    - addedOn: (integer, optional)\n    - addnMacAddrs: (array[string], optional)\n    - agentType: (enum[\"POSIX\",\"IOS\"], optional)\n    - authStatus: (string, optional)\n    - authenticatedSudiSerialNo: (string, optional)\n    - capabilitiesSupported: (array[string], optional)\n    - cmState: (enum[\"NotContacted\",\"Contacted\",\"Disconnected\",\"SecuringConnection\",\"SecuredConnection\",\"Authenticated\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\"], optional)\n    - description: (string, optional)\n    - deviceSudiSerialNos: (array[string], optional)\n    - deviceType: (string, optional)\n    - featuresSupported: (array[string], optional)\n    - fileSystemList: (array[map], optional)\n      - freespace: (integer, optional)\n      - name: (string, optional)\n      - readable: (boolean, optional)\n      - size: (integer, optional)\n      - type: (string, optional)\n      - writeable: (boolean, optional)\n    - firstContact: (integer, optional)\n    - hostname: (string, optional)\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional)\n      - value: (string, optional)\n    - imageFile: (string, optional)\n    - imageVersion: (string, optional)\n    - ipInterfaces: (array[map], optional)\n      - ipv4Address: (any, optional)\n      - ipv6AddressList: (array[any], optional)\n      - macAddress: (string, optional)\n      - name: (string, optional)\n      - status: (string, optional)\n    - lastContact: (integer, optional)\n    - lastSyncTime: (integer, optional)\n    - lastUpdateOn: (integer, optional)\n    - location: (map, optional)\n      - address: (string, optional)\n      - altitude: (string, optional)\n      - latitude: (string, optional)\n      - longitude: (string, optional)\n      - siteId: (string, optional)\n    - macAddress: (string, optional)\n    - mode: (string, optional)\n    - name: (string, optional)\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional)\n      - localMacAddress: (string, optional)\n      - localShortInterfaceName: (string, optional)\n      - remoteDeviceName: (string, optional)\n      - remoteInterfaceName: (string, optional)\n      - remoteMacAddress: (string, optional)\n      - remotePlatform: (string, optional)\n      - remoteShortInterfaceName: (string, optional)\n      - remoteVersion: (string, optional)\n    - onbState: (enum[\"NotContacted\",\"Connecting\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\",\"Initializing\",\"Initialized\",\"ErrorInitializing\",\"SudiAuthorizing\",\"ErrorSudiAuthorizing\",\"ExecutingWorkflow\",\"ExecutedWorkflow\",\"ErrorExecutingWorkflow\",\"ExecutingReset\",\"ErrorExecutingReset\",\"Provisioned\"], optional)\n    - pid: (string, optional)\n    - pnpProfileList: (array[map], optional)\n      - createdBy: (string, optional)\n      - discoveryCreated: (boolean, optional)\n      - primaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n      - profileName: (string, optional)\n      - secondaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n    - populateInventory: (boolean, optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional)\n      - cliOutput: (string, optional)\n    - projectId: (string, optional)\n    - projectName: (string, optional)\n    - reloadRequested: (boolean, optional)\n    - serialNumber: (string, required)\n    - smartAccountId: (string, optional)\n    - source: (string, optional)\n    - stack: (boolean, optional)\n    - stackInfo: (map, optional)\n      - isFullRing: (boolean, optional)\n      - stackMemberList: (array[map], optional)\n        - hardwareVersion: (string, optional)\n        - licenseLevel: (string, optional)\n        - licenseType: (string, optional)\n        - macAddress: (string, optional)\n        - pid: (string, optional)\n        - priority: (integer, optional)\n        - role: (string, optional)\n        - serialNumber: (string, optional)\n        - softwareVersion: (string, optional)\n        - stackNumber: (integer, optional)\n        - state: (string, optional)\n        - sudiSerialNumber: (string, optional)\n      - stackRingProtocol: (string, optional)\n      - supportsStackWorkflows: (boolean, optional)\n      - totalMemberCount: (integer, optional)\n      - validLicenseLevels: (array[string], optional)\n    - state: (enum[\"Unclaimed\",\"Planned\",\"Onboarding\",\"Provisioned\",\"Error\",\"Deleted\"], optional)\n    - sudiRequired: (boolean, optional)\n    - tags: (any, optional)\n    - userSudiSerialNos: (array[string], optional)\n    - virtualAccountId: (string, optional)\n    - workflowId: (string, optional)\n    - workflowName: (string, optional)\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional)\n    - errorFlag: (boolean, optional)\n    - historyTaskInfo: (map, optional)\n      - addnDetails: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n      - name: (string, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - timestamp: (integer, optional)\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n  - workflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - workflowParameters: (map, optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - deviceInfo: (map, optional)\n    - source: (string, optional) Source\n    - serialNumber: (string, optional) Serial Number\n    - stack: (boolean, optional) Stack\n    - mode: (string, optional) Mode\n    - state: (string, optional) State\n    - location: (map, optional)\n      - siteId: (string, optional) Site Id\n      - address: (string, optional) Address\n      - latitude: (string, optional) Latitude\n      - longitude: (string, optional) Longitude\n      - altitude: (string, optional) Altitude\n    - description: (string, optional) Description\n    - onbState: (string, optional) Onb State\n    - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n    - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n    - capabilitiesSupported: (array[string], optional)\n    - featuresSupported: (array[string], optional)\n    - cmState: (string, optional) Cm State\n    - firstContact: (number, optional) First Contact\n    - lastContact: (number, optional) Last Contact\n    - macAddress: (string, optional) Mac Address\n    - pid: (string, optional) Pid\n    - deviceSudiSerialNos: (array[string], optional)\n    - lastUpdateOn: (number, optional) Last Update On\n    - workflowId: (string, optional) Workflow Id\n    - workflowName: (string, optional) Workflow Name\n    - projectId: (string, optional) Project Id\n    - projectName: (string, optional) Project Name\n    - deviceType: (string, optional) Device Type\n    - agentType: (string, optional) Agent Type\n    - imageVersion: (string, optional) Image Version\n    - fileSystemList: (array[map], optional)\n      - type: (string, optional) Type\n      - writeable: (boolean, optional) Writeable\n      - freespace: (number, optional) Freespace\n      - name: (string, optional) Name\n      - readable: (boolean, optional) Readable\n      - size: (number, optional) Size\n    - pnpProfileList: (array[map], optional)\n      - profileName: (string, optional) Profile Name\n      - discoveryCreated: (boolean, optional) Discovery Created\n      - createdBy: (string, optional) Created By\n      - primaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n      - secondaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n    - imageFile: (string, optional) Image File\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional) Key\n      - value: (string, optional) Value\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional) Local Interface Name\n      - localShortInterfaceName: (string, optional) Local Short Interface Name\n      - localMacAddress: (string, optional) Local Mac Address\n      - remoteInterfaceName: (string, optional) Remote Interface Name\n      - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n      - remoteMacAddress: (string, optional) Remote Mac Address\n      - remoteDeviceName: (string, optional) Remote Device Name\n      - remotePlatform: (string, optional) Remote Platform\n      - remoteVersion: (string, optional) Remote Version\n    - lastSyncTime: (number, optional) Last Sync Time\n    - ipInterfaces: (array[map], optional)\n      - status: (string, optional) Status\n      - macAddress: (string, optional) Mac Address\n      - ipv4Address: (map, optional)\n      - ipv6AddressList: (array[map], optional)\n      - name: (string, optional) Name\n    - hostname: (string, optional) Hostname\n    - authStatus: (string, optional) Auth Status\n    - stackInfo: (map, optional)\n      - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n      - isFullRing: (boolean, optional) Is Full Ring\n      - stackMemberList: (array[map], optional)\n        - serialNumber: (string, optional) Serial Number\n        - state: (string, optional) State\n        - role: (string, optional) Role\n        - macAddress: (string, optional) Mac Address\n        - pid: (string, optional) Pid\n        - licenseLevel: (string, optional) License Level\n        - licenseType: (string, optional) License Type\n        - sudiSerialNumber: (string, optional) Sudi Serial Number\n        - hardwareVersion: (string, optional) Hardware Version\n        - stackNumber: (number, optional) Stack Number\n        - softwareVersion: (string, optional) Software Version\n        - priority: (number, optional) Priority\n      - stackRingProtocol: (string, optional) Stack Ring Protocol\n      - validLicenseLevels: (array[string], optional)\n      - totalMemberCount: (number, optional) Total Member Count\n    - reloadRequested: (boolean, optional) Reload Requested\n    - addedOn: (number, optional) Added On\n    - siteId: (string, optional) Site Id\n    - aaaCredentials: (map, optional)\n      - password: (string, optional) Password\n      - username: (string, optional) Username\n    - userMicNumbers: (array[string], optional)\n    - userSudiSerialNos: (array[string], optional)\n    - addnMacAddrs: (array[string], optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional) Cli\n      - cliOutput: (string, optional) Cli Output\n    - tags: (map, optional)\n    - sudiRequired: (boolean, optional) Sudi Required\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - populateInventory: (boolean, optional) Populate Inventory\n    - siteName: (string, optional) Site Name\n    - name: (string, optional) Name\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - workflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - type: (string, optional) Type\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - name: (string, optional) Name\n    - errorFlag: (boolean, optional) Error Flag\n    - timestamp: (number, optional) Timestamp\n  - workflowParameters: (map, optional)\n    - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n    - licenseLevel: (string, optional) License Level\n    - licenseType: (string, optional) License Type\n    - configList: (array[map], optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - configId: (string, optional) Config Id\n  - dayZeroConfig: (map, optional)\n    - config: (string, optional) Config\n  - dayZeroConfigPreview: (map, optional)\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"_id\": \"string\",\n  \"deviceInfo\": {\n    \"source\": \"string\",\n    \"serialNumber\": \"string\",\n    \"stack\": false,\n    \"mode\": \"string\",\n    \"state\": \"string\",\n    \"location\": {\n      \"siteId\": \"string\",\n      \"address\": \"string\",\n      \"latitude\": \"string\",\n      \"longitude\": \"string\",\n      \"altitude\": \"string\"\n    },\n    \"description\": \"string\",\n    \"onbState\": \"string\",\n    \"authenticatedMicNumber\": \"string\",\n    \"authenticatedSudiSerialNo\": \"string\",\n    \"capabilitiesSupported\": [\n      \"string\"\n    ],\n    \"featuresSupported\": [\n      \"string\"\n    ],\n    \"cmState\": \"string\",\n    \"firstContact\": 0.1,\n    \"lastContact\": 0.1,\n    \"macAddress\": \"string\",\n    \"pid\": \"string\",\n    \"deviceSudiSerialNos\": [\n      \"string\"\n    ],\n    \"lastUpdateOn\": 0.1,\n    \"workflowId\": \"string\",\n    \"workflowName\": \"string\",\n    \"projectId\": \"string\",\n    \"projectName\": \"string\",\n    \"deviceType\": \"string\",\n    \"agentType\": \"string\",\n    \"imageVersion\": \"string\",\n    \"fileSystemList\": [\n      {\n        \"type\": \"string\",\n        \"writeable\": false,\n        \"freespace\": 0.1,\n        \"name\": \"string\",\n        \"readable\": false,\n        \"size\": 0.1\n      }\n    ],\n    \"pnpProfileList\": [\n      {\n        \"profileName\": \"string\",\n        \"discoveryCreated\": false,\n        \"createdBy\": \"string\",\n        \"primaryEndpoint\": {\n          \"port\": 0.1,\n          \"protocol\": \"string\",\n          \"ipv4Address\": {\n            \n          },\n          \"ipv6Address\": {\n            \n          },\n          \"fqdn\": \"string\",\n          \"certificate\": \"string\"\n        },\n        \"secondaryEndpoint\": {\n          \"port\": 0.1,\n          \"protocol\": \"string\",\n          \"ipv4Address\": {\n            \n          },\n          \"ipv6Address\": {\n            \n          },\n          \"fqdn\": \"string\",\n          \"certificate\": \"string\"\n        }\n      }\n    ],\n    \"imageFile\": \"string\",\n    \"httpHeaders\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"neighborLinks\": [\n      {\n        \"localInterfaceName\": \"string\",\n        \"localShortInterfaceName\": \"string\",\n        \"localMacAddress\": \"string\",\n        \"remoteInterfaceName\": \"string\",\n        \"remoteShortInterfaceName\": \"string\",\n        \"remoteMacAddress\": \"string\",\n        \"remoteDeviceName\": \"string\",\n        \"remotePlatform\": \"string\",\n        \"remoteVersion\": \"string\"\n      }\n    ],\n    \"lastSyncTime\": 0.1,\n    \"ipInterfaces\": [\n      {\n        \"status\": \"string\",\n        \"macAddress\": \"string\",\n        \"ipv4Address\": {\n          \n        },\n        \"ipv6AddressList\": [\n          {\n            \n          }\n        ],\n        \"name\": \"string\"\n      }\n    ],\n    \"hostname\": \"string\",\n    \"authStatus\": \"string\",\n    \"stackInfo\": {\n      \"supportsStackWorkflows\": false,\n      \"isFullRing\": false,\n      \"stackMemberList\": [\n        {\n          \"serialNumber\": \"string\",\n          \"state\": \"string\",\n          \"role\": \"string\",\n          \"macAddress\": \"string\",\n          \"pid\": \"string\",\n          \"licenseLevel\": \"string\",\n          \"licenseType\": \"string\",\n          \"sudiSerialNumber\": \"string\",\n          \"hardwareVersion\": \"string\",\n          \"stackNumber\": 0.1,\n          \"softwareVersion\": \"string\",\n          \"priority\": 0.1\n        }\n      ],\n      \"stackRingProtocol\": \"string\",\n      \"validLicenseLevels\": [\n        \"string\"\n      ],\n      \"totalMemberCount\": 0.1\n    },\n    \"reloadRequested\": false,\n    \"addedOn\": 0.1,\n    \"siteId\": \"string\",\n    \"aaaCredentials\": {\n      \"password\": \"string\",\n      \"username\": \"string\"\n    },\n    \"userMicNumbers\": [\n      \"string\"\n    ],\n    \"userSudiSerialNos\": [\n      \"string\"\n    ],\n    \"addnMacAddrs\": [\n      \"string\"\n    ],\n    \"preWorkflowCliOuputs\": [\n      {\n        \"cli\": \"string\",\n        \"cliOutput\": \"string\"\n      }\n    ],\n    \"tags\": {\n      \n    },\n    \"sudiRequired\": false,\n    \"smartAccountId\": \"string\",\n    \"virtualAccountId\": \"string\",\n    \"populateInventory\": false,\n    \"siteName\": \"string\",\n    \"name\": \"string\"\n  },\n  \"systemResetWorkflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"systemWorkflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"workflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"runSummaryList\": [\n    {\n      \"details\": \"string\",\n      \"historyTaskInfo\": {\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"name\": \"string\"\n      },\n      \"errorFlag\": false,\n      \"timestamp\": 0.1\n    }\n  ],\n  \"workflowParameters\": {\n    \"topOfStackSerialNumber\": \"string\",\n    \"licenseLevel\": \"string\",\n    \"licenseType\": \"string\",\n    \"configList\": [\n      {\n        \"configParameters\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"configId\": \"string\"\n      }\n    ]\n  },\n  \"dayZeroConfig\": {\n    \"config\": \"string\"\n  },\n  \"dayZeroConfigPreview\": {\n    \n  },\n  \"version\": 0.1,\n  \"tenantId\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete Device by Id from PnP",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) id"
										}
									]
								},
								"description": "Deletes specified device from PnP database\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - deviceInfo: (map, optional)\n    - source: (string, optional) Source\n    - serialNumber: (string, optional) Serial Number\n    - stack: (boolean, optional) Stack\n    - mode: (string, optional) Mode\n    - state: (string, optional) State\n    - location: (map, optional)\n      - siteId: (string, optional) Site Id\n      - address: (string, optional) Address\n      - latitude: (string, optional) Latitude\n      - longitude: (string, optional) Longitude\n      - altitude: (string, optional) Altitude\n    - description: (string, optional) Description\n    - onbState: (string, optional) Onb State\n    - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n    - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n    - capabilitiesSupported: (array[string], optional)\n    - featuresSupported: (array[string], optional)\n    - cmState: (string, optional) Cm State\n    - firstContact: (number, optional) First Contact\n    - lastContact: (number, optional) Last Contact\n    - macAddress: (string, optional) Mac Address\n    - pid: (string, optional) Pid\n    - deviceSudiSerialNos: (array[string], optional)\n    - lastUpdateOn: (number, optional) Last Update On\n    - workflowId: (string, optional) Workflow Id\n    - workflowName: (string, optional) Workflow Name\n    - projectId: (string, optional) Project Id\n    - projectName: (string, optional) Project Name\n    - deviceType: (string, optional) Device Type\n    - agentType: (string, optional) Agent Type\n    - imageVersion: (string, optional) Image Version\n    - fileSystemList: (array[map], optional)\n      - type: (string, optional) Type\n      - writeable: (boolean, optional) Writeable\n      - freespace: (number, optional) Freespace\n      - name: (string, optional) Name\n      - readable: (boolean, optional) Readable\n      - size: (number, optional) Size\n    - pnpProfileList: (array[map], optional)\n      - profileName: (string, optional) Profile Name\n      - discoveryCreated: (boolean, optional) Discovery Created\n      - createdBy: (string, optional) Created By\n      - primaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n      - secondaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n    - imageFile: (string, optional) Image File\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional) Key\n      - value: (string, optional) Value\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional) Local Interface Name\n      - localShortInterfaceName: (string, optional) Local Short Interface Name\n      - localMacAddress: (string, optional) Local Mac Address\n      - remoteInterfaceName: (string, optional) Remote Interface Name\n      - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n      - remoteMacAddress: (string, optional) Remote Mac Address\n      - remoteDeviceName: (string, optional) Remote Device Name\n      - remotePlatform: (string, optional) Remote Platform\n      - remoteVersion: (string, optional) Remote Version\n    - lastSyncTime: (number, optional) Last Sync Time\n    - ipInterfaces: (array[map], optional)\n      - status: (string, optional) Status\n      - macAddress: (string, optional) Mac Address\n      - ipv4Address: (map, optional)\n      - ipv6AddressList: (array[map], optional)\n      - name: (string, optional) Name\n    - hostname: (string, optional) Hostname\n    - authStatus: (string, optional) Auth Status\n    - stackInfo: (map, optional)\n      - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n      - isFullRing: (boolean, optional) Is Full Ring\n      - stackMemberList: (array[map], optional)\n        - serialNumber: (string, optional) Serial Number\n        - state: (string, optional) State\n        - role: (string, optional) Role\n        - macAddress: (string, optional) Mac Address\n        - pid: (string, optional) Pid\n        - licenseLevel: (string, optional) License Level\n        - licenseType: (string, optional) License Type\n        - sudiSerialNumber: (string, optional) Sudi Serial Number\n        - hardwareVersion: (string, optional) Hardware Version\n        - stackNumber: (number, optional) Stack Number\n        - softwareVersion: (string, optional) Software Version\n        - priority: (number, optional) Priority\n      - stackRingProtocol: (string, optional) Stack Ring Protocol\n      - validLicenseLevels: (array[string], optional)\n      - totalMemberCount: (number, optional) Total Member Count\n    - reloadRequested: (boolean, optional) Reload Requested\n    - addedOn: (number, optional) Added On\n    - siteId: (string, optional) Site Id\n    - aaaCredentials: (map, optional)\n      - password: (string, optional) Password\n      - username: (string, optional) Username\n    - userMicNumbers: (array[string], optional)\n    - userSudiSerialNos: (array[string], optional)\n    - addnMacAddrs: (array[string], optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional) Cli\n      - cliOutput: (string, optional) Cli Output\n    - tags: (map, optional)\n    - sudiRequired: (boolean, optional) Sudi Required\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - populateInventory: (boolean, optional) Populate Inventory\n    - siteName: (string, optional) Site Name\n    - name: (string, optional) Name\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - workflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - type: (string, optional) Type\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - name: (string, optional) Name\n    - errorFlag: (boolean, optional) Error Flag\n    - timestamp: (number, optional) Timestamp\n  - workflowParameters: (map, optional)\n    - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n    - licenseLevel: (string, optional) License Level\n    - licenseType: (string, optional) License Type\n    - configList: (array[map], optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - configId: (string, optional) Config Id\n  - dayZeroConfig: (map, optional)\n    - config: (string, optional) Config\n  - dayZeroConfigPreview: (map, optional)\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) id"
												}
											]
										},
										"description": "Deletes specified device from PnP database\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - deviceInfo: (map, optional)\n    - source: (string, optional) Source\n    - serialNumber: (string, optional) Serial Number\n    - stack: (boolean, optional) Stack\n    - mode: (string, optional) Mode\n    - state: (string, optional) State\n    - location: (map, optional)\n      - siteId: (string, optional) Site Id\n      - address: (string, optional) Address\n      - latitude: (string, optional) Latitude\n      - longitude: (string, optional) Longitude\n      - altitude: (string, optional) Altitude\n    - description: (string, optional) Description\n    - onbState: (string, optional) Onb State\n    - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n    - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n    - capabilitiesSupported: (array[string], optional)\n    - featuresSupported: (array[string], optional)\n    - cmState: (string, optional) Cm State\n    - firstContact: (number, optional) First Contact\n    - lastContact: (number, optional) Last Contact\n    - macAddress: (string, optional) Mac Address\n    - pid: (string, optional) Pid\n    - deviceSudiSerialNos: (array[string], optional)\n    - lastUpdateOn: (number, optional) Last Update On\n    - workflowId: (string, optional) Workflow Id\n    - workflowName: (string, optional) Workflow Name\n    - projectId: (string, optional) Project Id\n    - projectName: (string, optional) Project Name\n    - deviceType: (string, optional) Device Type\n    - agentType: (string, optional) Agent Type\n    - imageVersion: (string, optional) Image Version\n    - fileSystemList: (array[map], optional)\n      - type: (string, optional) Type\n      - writeable: (boolean, optional) Writeable\n      - freespace: (number, optional) Freespace\n      - name: (string, optional) Name\n      - readable: (boolean, optional) Readable\n      - size: (number, optional) Size\n    - pnpProfileList: (array[map], optional)\n      - profileName: (string, optional) Profile Name\n      - discoveryCreated: (boolean, optional) Discovery Created\n      - createdBy: (string, optional) Created By\n      - primaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n      - secondaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n    - imageFile: (string, optional) Image File\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional) Key\n      - value: (string, optional) Value\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional) Local Interface Name\n      - localShortInterfaceName: (string, optional) Local Short Interface Name\n      - localMacAddress: (string, optional) Local Mac Address\n      - remoteInterfaceName: (string, optional) Remote Interface Name\n      - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n      - remoteMacAddress: (string, optional) Remote Mac Address\n      - remoteDeviceName: (string, optional) Remote Device Name\n      - remotePlatform: (string, optional) Remote Platform\n      - remoteVersion: (string, optional) Remote Version\n    - lastSyncTime: (number, optional) Last Sync Time\n    - ipInterfaces: (array[map], optional)\n      - status: (string, optional) Status\n      - macAddress: (string, optional) Mac Address\n      - ipv4Address: (map, optional)\n      - ipv6AddressList: (array[map], optional)\n      - name: (string, optional) Name\n    - hostname: (string, optional) Hostname\n    - authStatus: (string, optional) Auth Status\n    - stackInfo: (map, optional)\n      - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n      - isFullRing: (boolean, optional) Is Full Ring\n      - stackMemberList: (array[map], optional)\n        - serialNumber: (string, optional) Serial Number\n        - state: (string, optional) State\n        - role: (string, optional) Role\n        - macAddress: (string, optional) Mac Address\n        - pid: (string, optional) Pid\n        - licenseLevel: (string, optional) License Level\n        - licenseType: (string, optional) License Type\n        - sudiSerialNumber: (string, optional) Sudi Serial Number\n        - hardwareVersion: (string, optional) Hardware Version\n        - stackNumber: (number, optional) Stack Number\n        - softwareVersion: (string, optional) Software Version\n        - priority: (number, optional) Priority\n      - stackRingProtocol: (string, optional) Stack Ring Protocol\n      - validLicenseLevels: (array[string], optional)\n      - totalMemberCount: (number, optional) Total Member Count\n    - reloadRequested: (boolean, optional) Reload Requested\n    - addedOn: (number, optional) Added On\n    - siteId: (string, optional) Site Id\n    - aaaCredentials: (map, optional)\n      - password: (string, optional) Password\n      - username: (string, optional) Username\n    - userMicNumbers: (array[string], optional)\n    - userSudiSerialNos: (array[string], optional)\n    - addnMacAddrs: (array[string], optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional) Cli\n      - cliOutput: (string, optional) Cli Output\n    - tags: (map, optional)\n    - sudiRequired: (boolean, optional) Sudi Required\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - populateInventory: (boolean, optional) Populate Inventory\n    - siteName: (string, optional) Site Name\n    - name: (string, optional) Name\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - workflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - type: (string, optional) Type\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - name: (string, optional) Name\n    - errorFlag: (boolean, optional) Error Flag\n    - timestamp: (number, optional) Timestamp\n  - workflowParameters: (map, optional)\n    - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n    - licenseLevel: (string, optional) License Level\n    - licenseType: (string, optional) License Type\n    - configList: (array[map], optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - configId: (string, optional) Config Id\n  - dayZeroConfig: (map, optional)\n    - config: (string, optional) Config\n  - dayZeroConfigPreview: (map, optional)\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"_id\": \"string\",\n  \"deviceInfo\": {\n    \"source\": \"string\",\n    \"serialNumber\": \"string\",\n    \"stack\": false,\n    \"mode\": \"string\",\n    \"state\": \"string\",\n    \"location\": {\n      \"siteId\": \"string\",\n      \"address\": \"string\",\n      \"latitude\": \"string\",\n      \"longitude\": \"string\",\n      \"altitude\": \"string\"\n    },\n    \"description\": \"string\",\n    \"onbState\": \"string\",\n    \"authenticatedMicNumber\": \"string\",\n    \"authenticatedSudiSerialNo\": \"string\",\n    \"capabilitiesSupported\": [\n      \"string\"\n    ],\n    \"featuresSupported\": [\n      \"string\"\n    ],\n    \"cmState\": \"string\",\n    \"firstContact\": 0.1,\n    \"lastContact\": 0.1,\n    \"macAddress\": \"string\",\n    \"pid\": \"string\",\n    \"deviceSudiSerialNos\": [\n      \"string\"\n    ],\n    \"lastUpdateOn\": 0.1,\n    \"workflowId\": \"string\",\n    \"workflowName\": \"string\",\n    \"projectId\": \"string\",\n    \"projectName\": \"string\",\n    \"deviceType\": \"string\",\n    \"agentType\": \"string\",\n    \"imageVersion\": \"string\",\n    \"fileSystemList\": [\n      {\n        \"type\": \"string\",\n        \"writeable\": false,\n        \"freespace\": 0.1,\n        \"name\": \"string\",\n        \"readable\": false,\n        \"size\": 0.1\n      }\n    ],\n    \"pnpProfileList\": [\n      {\n        \"profileName\": \"string\",\n        \"discoveryCreated\": false,\n        \"createdBy\": \"string\",\n        \"primaryEndpoint\": {\n          \"port\": 0.1,\n          \"protocol\": \"string\",\n          \"ipv4Address\": {\n            \n          },\n          \"ipv6Address\": {\n            \n          },\n          \"fqdn\": \"string\",\n          \"certificate\": \"string\"\n        },\n        \"secondaryEndpoint\": {\n          \"port\": 0.1,\n          \"protocol\": \"string\",\n          \"ipv4Address\": {\n            \n          },\n          \"ipv6Address\": {\n            \n          },\n          \"fqdn\": \"string\",\n          \"certificate\": \"string\"\n        }\n      }\n    ],\n    \"imageFile\": \"string\",\n    \"httpHeaders\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"neighborLinks\": [\n      {\n        \"localInterfaceName\": \"string\",\n        \"localShortInterfaceName\": \"string\",\n        \"localMacAddress\": \"string\",\n        \"remoteInterfaceName\": \"string\",\n        \"remoteShortInterfaceName\": \"string\",\n        \"remoteMacAddress\": \"string\",\n        \"remoteDeviceName\": \"string\",\n        \"remotePlatform\": \"string\",\n        \"remoteVersion\": \"string\"\n      }\n    ],\n    \"lastSyncTime\": 0.1,\n    \"ipInterfaces\": [\n      {\n        \"status\": \"string\",\n        \"macAddress\": \"string\",\n        \"ipv4Address\": {\n          \n        },\n        \"ipv6AddressList\": [\n          {\n            \n          }\n        ],\n        \"name\": \"string\"\n      }\n    ],\n    \"hostname\": \"string\",\n    \"authStatus\": \"string\",\n    \"stackInfo\": {\n      \"supportsStackWorkflows\": false,\n      \"isFullRing\": false,\n      \"stackMemberList\": [\n        {\n          \"serialNumber\": \"string\",\n          \"state\": \"string\",\n          \"role\": \"string\",\n          \"macAddress\": \"string\",\n          \"pid\": \"string\",\n          \"licenseLevel\": \"string\",\n          \"licenseType\": \"string\",\n          \"sudiSerialNumber\": \"string\",\n          \"hardwareVersion\": \"string\",\n          \"stackNumber\": 0.1,\n          \"softwareVersion\": \"string\",\n          \"priority\": 0.1\n        }\n      ],\n      \"stackRingProtocol\": \"string\",\n      \"validLicenseLevels\": [\n        \"string\"\n      ],\n      \"totalMemberCount\": 0.1\n    },\n    \"reloadRequested\": false,\n    \"addedOn\": 0.1,\n    \"siteId\": \"string\",\n    \"aaaCredentials\": {\n      \"password\": \"string\",\n      \"username\": \"string\"\n    },\n    \"userMicNumbers\": [\n      \"string\"\n    ],\n    \"userSudiSerialNos\": [\n      \"string\"\n    ],\n    \"addnMacAddrs\": [\n      \"string\"\n    ],\n    \"preWorkflowCliOuputs\": [\n      {\n        \"cli\": \"string\",\n        \"cliOutput\": \"string\"\n      }\n    ],\n    \"tags\": {\n      \n    },\n    \"sudiRequired\": false,\n    \"smartAccountId\": \"string\",\n    \"virtualAccountId\": \"string\",\n    \"populateInventory\": false,\n    \"siteName\": \"string\",\n    \"name\": \"string\"\n  },\n  \"systemResetWorkflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"systemWorkflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"workflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"runSummaryList\": [\n    {\n      \"details\": \"string\",\n      \"historyTaskInfo\": {\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"name\": \"string\"\n      },\n      \"errorFlag\": false,\n      \"timestamp\": 0.1\n    }\n  ],\n  \"workflowParameters\": {\n    \"topOfStackSerialNumber\": \"string\",\n    \"licenseLevel\": \"string\",\n    \"licenseType\": \"string\",\n    \"configList\": [\n      {\n        \"configParameters\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"configId\": \"string\"\n      }\n    ]\n  },\n  \"dayZeroConfig\": {\n    \"config\": \"string\"\n  },\n  \"dayZeroConfigPreview\": {\n    \n  },\n  \"version\": 0.1,\n  \"tenantId\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Device by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) id"
										}
									]
								},
								"description": "Returns device details specified by device id\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - deviceInfo: (map, optional)\n    - source: (string, optional) Source\n    - serialNumber: (string, optional) Serial Number\n    - stack: (boolean, optional) Stack\n    - mode: (string, optional) Mode\n    - state: (string, optional) State\n    - location: (map, optional)\n      - siteId: (string, optional) Site Id\n      - address: (string, optional) Address\n      - latitude: (string, optional) Latitude\n      - longitude: (string, optional) Longitude\n      - altitude: (string, optional) Altitude\n    - description: (string, optional) Description\n    - onbState: (string, optional) Onb State\n    - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n    - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n    - capabilitiesSupported: (array[string], optional)\n    - featuresSupported: (array[string], optional)\n    - cmState: (string, optional) Cm State\n    - firstContact: (number, optional) First Contact\n    - lastContact: (number, optional) Last Contact\n    - macAddress: (string, optional) Mac Address\n    - pid: (string, optional) Pid\n    - deviceSudiSerialNos: (array[string], optional)\n    - lastUpdateOn: (number, optional) Last Update On\n    - workflowId: (string, optional) Workflow Id\n    - workflowName: (string, optional) Workflow Name\n    - projectId: (string, optional) Project Id\n    - projectName: (string, optional) Project Name\n    - deviceType: (string, optional) Device Type\n    - agentType: (string, optional) Agent Type\n    - imageVersion: (string, optional) Image Version\n    - fileSystemList: (array[map], optional)\n      - type: (string, optional) Type\n      - writeable: (boolean, optional) Writeable\n      - freespace: (number, optional) Freespace\n      - name: (string, optional) Name\n      - readable: (boolean, optional) Readable\n      - size: (number, optional) Size\n    - pnpProfileList: (array[map], optional)\n      - profileName: (string, optional) Profile Name\n      - discoveryCreated: (boolean, optional) Discovery Created\n      - createdBy: (string, optional) Created By\n      - primaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n      - secondaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n    - imageFile: (string, optional) Image File\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional) Key\n      - value: (string, optional) Value\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional) Local Interface Name\n      - localShortInterfaceName: (string, optional) Local Short Interface Name\n      - localMacAddress: (string, optional) Local Mac Address\n      - remoteInterfaceName: (string, optional) Remote Interface Name\n      - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n      - remoteMacAddress: (string, optional) Remote Mac Address\n      - remoteDeviceName: (string, optional) Remote Device Name\n      - remotePlatform: (string, optional) Remote Platform\n      - remoteVersion: (string, optional) Remote Version\n    - lastSyncTime: (number, optional) Last Sync Time\n    - ipInterfaces: (array[map], optional)\n      - status: (string, optional) Status\n      - macAddress: (string, optional) Mac Address\n      - ipv4Address: (map, optional)\n      - ipv6AddressList: (array[map], optional)\n      - name: (string, optional) Name\n    - hostname: (string, optional) Hostname\n    - authStatus: (string, optional) Auth Status\n    - stackInfo: (map, optional)\n      - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n      - isFullRing: (boolean, optional) Is Full Ring\n      - stackMemberList: (array[map], optional)\n        - serialNumber: (string, optional) Serial Number\n        - state: (string, optional) State\n        - role: (string, optional) Role\n        - macAddress: (string, optional) Mac Address\n        - pid: (string, optional) Pid\n        - licenseLevel: (string, optional) License Level\n        - licenseType: (string, optional) License Type\n        - sudiSerialNumber: (string, optional) Sudi Serial Number\n        - hardwareVersion: (string, optional) Hardware Version\n        - stackNumber: (number, optional) Stack Number\n        - softwareVersion: (string, optional) Software Version\n        - priority: (number, optional) Priority\n      - stackRingProtocol: (string, optional) Stack Ring Protocol\n      - validLicenseLevels: (array[string], optional)\n      - totalMemberCount: (number, optional) Total Member Count\n    - reloadRequested: (boolean, optional) Reload Requested\n    - addedOn: (number, optional) Added On\n    - siteId: (string, optional) Site Id\n    - aaaCredentials: (map, optional)\n      - password: (string, optional) Password\n      - username: (string, optional) Username\n    - userMicNumbers: (array[string], optional)\n    - userSudiSerialNos: (array[string], optional)\n    - addnMacAddrs: (array[string], optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional) Cli\n      - cliOutput: (string, optional) Cli Output\n    - tags: (map, optional)\n    - sudiRequired: (boolean, optional) Sudi Required\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - populateInventory: (boolean, optional) Populate Inventory\n    - siteName: (string, optional) Site Name\n    - name: (string, optional) Name\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - workflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - type: (string, optional) Type\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - name: (string, optional) Name\n    - errorFlag: (boolean, optional) Error Flag\n    - timestamp: (number, optional) Timestamp\n  - workflowParameters: (map, optional)\n    - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n    - licenseLevel: (string, optional) License Level\n    - licenseType: (string, optional) License Type\n    - configList: (array[map], optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - configId: (string, optional) Config Id\n  - dayZeroConfig: (map, optional)\n    - config: (string, optional) Config\n  - dayZeroConfigPreview: (map, optional)\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) id"
												}
											]
										},
										"description": "Returns device details specified by device id\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - deviceInfo: (map, optional)\n    - source: (string, optional) Source\n    - serialNumber: (string, optional) Serial Number\n    - stack: (boolean, optional) Stack\n    - mode: (string, optional) Mode\n    - state: (string, optional) State\n    - location: (map, optional)\n      - siteId: (string, optional) Site Id\n      - address: (string, optional) Address\n      - latitude: (string, optional) Latitude\n      - longitude: (string, optional) Longitude\n      - altitude: (string, optional) Altitude\n    - description: (string, optional) Description\n    - onbState: (string, optional) Onb State\n    - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n    - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n    - capabilitiesSupported: (array[string], optional)\n    - featuresSupported: (array[string], optional)\n    - cmState: (string, optional) Cm State\n    - firstContact: (number, optional) First Contact\n    - lastContact: (number, optional) Last Contact\n    - macAddress: (string, optional) Mac Address\n    - pid: (string, optional) Pid\n    - deviceSudiSerialNos: (array[string], optional)\n    - lastUpdateOn: (number, optional) Last Update On\n    - workflowId: (string, optional) Workflow Id\n    - workflowName: (string, optional) Workflow Name\n    - projectId: (string, optional) Project Id\n    - projectName: (string, optional) Project Name\n    - deviceType: (string, optional) Device Type\n    - agentType: (string, optional) Agent Type\n    - imageVersion: (string, optional) Image Version\n    - fileSystemList: (array[map], optional)\n      - type: (string, optional) Type\n      - writeable: (boolean, optional) Writeable\n      - freespace: (number, optional) Freespace\n      - name: (string, optional) Name\n      - readable: (boolean, optional) Readable\n      - size: (number, optional) Size\n    - pnpProfileList: (array[map], optional)\n      - profileName: (string, optional) Profile Name\n      - discoveryCreated: (boolean, optional) Discovery Created\n      - createdBy: (string, optional) Created By\n      - primaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n      - secondaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n    - imageFile: (string, optional) Image File\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional) Key\n      - value: (string, optional) Value\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional) Local Interface Name\n      - localShortInterfaceName: (string, optional) Local Short Interface Name\n      - localMacAddress: (string, optional) Local Mac Address\n      - remoteInterfaceName: (string, optional) Remote Interface Name\n      - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n      - remoteMacAddress: (string, optional) Remote Mac Address\n      - remoteDeviceName: (string, optional) Remote Device Name\n      - remotePlatform: (string, optional) Remote Platform\n      - remoteVersion: (string, optional) Remote Version\n    - lastSyncTime: (number, optional) Last Sync Time\n    - ipInterfaces: (array[map], optional)\n      - status: (string, optional) Status\n      - macAddress: (string, optional) Mac Address\n      - ipv4Address: (map, optional)\n      - ipv6AddressList: (array[map], optional)\n      - name: (string, optional) Name\n    - hostname: (string, optional) Hostname\n    - authStatus: (string, optional) Auth Status\n    - stackInfo: (map, optional)\n      - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n      - isFullRing: (boolean, optional) Is Full Ring\n      - stackMemberList: (array[map], optional)\n        - serialNumber: (string, optional) Serial Number\n        - state: (string, optional) State\n        - role: (string, optional) Role\n        - macAddress: (string, optional) Mac Address\n        - pid: (string, optional) Pid\n        - licenseLevel: (string, optional) License Level\n        - licenseType: (string, optional) License Type\n        - sudiSerialNumber: (string, optional) Sudi Serial Number\n        - hardwareVersion: (string, optional) Hardware Version\n        - stackNumber: (number, optional) Stack Number\n        - softwareVersion: (string, optional) Software Version\n        - priority: (number, optional) Priority\n      - stackRingProtocol: (string, optional) Stack Ring Protocol\n      - validLicenseLevels: (array[string], optional)\n      - totalMemberCount: (number, optional) Total Member Count\n    - reloadRequested: (boolean, optional) Reload Requested\n    - addedOn: (number, optional) Added On\n    - siteId: (string, optional) Site Id\n    - aaaCredentials: (map, optional)\n      - password: (string, optional) Password\n      - username: (string, optional) Username\n    - userMicNumbers: (array[string], optional)\n    - userSudiSerialNos: (array[string], optional)\n    - addnMacAddrs: (array[string], optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional) Cli\n      - cliOutput: (string, optional) Cli Output\n    - tags: (map, optional)\n    - sudiRequired: (boolean, optional) Sudi Required\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - populateInventory: (boolean, optional) Populate Inventory\n    - siteName: (string, optional) Site Name\n    - name: (string, optional) Name\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - workflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - type: (string, optional) Type\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - name: (string, optional) Name\n    - errorFlag: (boolean, optional) Error Flag\n    - timestamp: (number, optional) Timestamp\n  - workflowParameters: (map, optional)\n    - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n    - licenseLevel: (string, optional) License Level\n    - licenseType: (string, optional) License Type\n    - configList: (array[map], optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - configId: (string, optional) Config Id\n  - dayZeroConfig: (map, optional)\n    - config: (string, optional) Config\n  - dayZeroConfigPreview: (map, optional)\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"_id\": \"string\",\n  \"deviceInfo\": {\n    \"source\": \"string\",\n    \"serialNumber\": \"string\",\n    \"stack\": false,\n    \"mode\": \"string\",\n    \"state\": \"string\",\n    \"location\": {\n      \"siteId\": \"string\",\n      \"address\": \"string\",\n      \"latitude\": \"string\",\n      \"longitude\": \"string\",\n      \"altitude\": \"string\"\n    },\n    \"description\": \"string\",\n    \"onbState\": \"string\",\n    \"authenticatedMicNumber\": \"string\",\n    \"authenticatedSudiSerialNo\": \"string\",\n    \"capabilitiesSupported\": [\n      \"string\"\n    ],\n    \"featuresSupported\": [\n      \"string\"\n    ],\n    \"cmState\": \"string\",\n    \"firstContact\": 0.1,\n    \"lastContact\": 0.1,\n    \"macAddress\": \"string\",\n    \"pid\": \"string\",\n    \"deviceSudiSerialNos\": [\n      \"string\"\n    ],\n    \"lastUpdateOn\": 0.1,\n    \"workflowId\": \"string\",\n    \"workflowName\": \"string\",\n    \"projectId\": \"string\",\n    \"projectName\": \"string\",\n    \"deviceType\": \"string\",\n    \"agentType\": \"string\",\n    \"imageVersion\": \"string\",\n    \"fileSystemList\": [\n      {\n        \"type\": \"string\",\n        \"writeable\": false,\n        \"freespace\": 0.1,\n        \"name\": \"string\",\n        \"readable\": false,\n        \"size\": 0.1\n      }\n    ],\n    \"pnpProfileList\": [\n      {\n        \"profileName\": \"string\",\n        \"discoveryCreated\": false,\n        \"createdBy\": \"string\",\n        \"primaryEndpoint\": {\n          \"port\": 0.1,\n          \"protocol\": \"string\",\n          \"ipv4Address\": {\n            \n          },\n          \"ipv6Address\": {\n            \n          },\n          \"fqdn\": \"string\",\n          \"certificate\": \"string\"\n        },\n        \"secondaryEndpoint\": {\n          \"port\": 0.1,\n          \"protocol\": \"string\",\n          \"ipv4Address\": {\n            \n          },\n          \"ipv6Address\": {\n            \n          },\n          \"fqdn\": \"string\",\n          \"certificate\": \"string\"\n        }\n      }\n    ],\n    \"imageFile\": \"string\",\n    \"httpHeaders\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"neighborLinks\": [\n      {\n        \"localInterfaceName\": \"string\",\n        \"localShortInterfaceName\": \"string\",\n        \"localMacAddress\": \"string\",\n        \"remoteInterfaceName\": \"string\",\n        \"remoteShortInterfaceName\": \"string\",\n        \"remoteMacAddress\": \"string\",\n        \"remoteDeviceName\": \"string\",\n        \"remotePlatform\": \"string\",\n        \"remoteVersion\": \"string\"\n      }\n    ],\n    \"lastSyncTime\": 0.1,\n    \"ipInterfaces\": [\n      {\n        \"status\": \"string\",\n        \"macAddress\": \"string\",\n        \"ipv4Address\": {\n          \n        },\n        \"ipv6AddressList\": [\n          {\n            \n          }\n        ],\n        \"name\": \"string\"\n      }\n    ],\n    \"hostname\": \"string\",\n    \"authStatus\": \"string\",\n    \"stackInfo\": {\n      \"supportsStackWorkflows\": false,\n      \"isFullRing\": false,\n      \"stackMemberList\": [\n        {\n          \"serialNumber\": \"string\",\n          \"state\": \"string\",\n          \"role\": \"string\",\n          \"macAddress\": \"string\",\n          \"pid\": \"string\",\n          \"licenseLevel\": \"string\",\n          \"licenseType\": \"string\",\n          \"sudiSerialNumber\": \"string\",\n          \"hardwareVersion\": \"string\",\n          \"stackNumber\": 0.1,\n          \"softwareVersion\": \"string\",\n          \"priority\": 0.1\n        }\n      ],\n      \"stackRingProtocol\": \"string\",\n      \"validLicenseLevels\": [\n        \"string\"\n      ],\n      \"totalMemberCount\": 0.1\n    },\n    \"reloadRequested\": false,\n    \"addedOn\": 0.1,\n    \"siteId\": \"string\",\n    \"aaaCredentials\": {\n      \"password\": \"string\",\n      \"username\": \"string\"\n    },\n    \"userMicNumbers\": [\n      \"string\"\n    ],\n    \"userSudiSerialNos\": [\n      \"string\"\n    ],\n    \"addnMacAddrs\": [\n      \"string\"\n    ],\n    \"preWorkflowCliOuputs\": [\n      {\n        \"cli\": \"string\",\n        \"cliOutput\": \"string\"\n      }\n    ],\n    \"tags\": {\n      \n    },\n    \"sudiRequired\": false,\n    \"smartAccountId\": \"string\",\n    \"virtualAccountId\": \"string\",\n    \"populateInventory\": false,\n    \"siteName\": \"string\",\n    \"name\": \"string\"\n  },\n  \"systemResetWorkflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"systemWorkflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"workflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"runSummaryList\": [\n    {\n      \"details\": \"string\",\n      \"historyTaskInfo\": {\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"name\": \"string\"\n      },\n      \"errorFlag\": false,\n      \"timestamp\": 0.1\n    }\n  ],\n  \"workflowParameters\": {\n    \"topOfStackSerialNumber\": \"string\",\n    \"licenseLevel\": \"string\",\n    \"licenseType\": \"string\",\n    \"configList\": [\n      {\n        \"configParameters\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"configId\": \"string\"\n      }\n    ]\n  },\n  \"dayZeroConfig\": {\n    \"config\": \"string\"\n  },\n  \"dayZeroConfigPreview\": {\n    \n  },\n  \"version\": 0.1,\n  \"tenantId\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update Device",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"_id\": \"string\",\n  \"deviceInfo\": {\n    \"aaaCredentials\": {\n      \"password\": \"string\",\n      \"username\": \"string\"\n    },\n    \"addedOn\": 0,\n    \"addnMacAddrs\": [\n      \"string\"\n    ],\n    \"agentType\": \"string\",\n    \"authStatus\": \"string\",\n    \"authenticatedSudiSerialNo\": \"string\",\n    \"capabilitiesSupported\": [\n      \"string\"\n    ],\n    \"cmState\": \"string\",\n    \"description\": \"string\",\n    \"deviceSudiSerialNos\": [\n      \"string\"\n    ],\n    \"deviceType\": \"string\",\n    \"featuresSupported\": [\n      \"string\"\n    ],\n    \"fileSystemList\": [\n      {\n        \"freespace\": 0,\n        \"name\": \"string\",\n        \"readable\": false,\n        \"size\": 0,\n        \"type\": \"string\",\n        \"writeable\": false\n      }\n    ],\n    \"firstContact\": 0,\n    \"hostname\": \"string\",\n    \"httpHeaders\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"imageFile\": \"string\",\n    \"imageVersion\": \"string\",\n    \"ipInterfaces\": [\n      {\n        \"ipv4Address\": \"any\",\n        \"ipv6AddressList\": [\n          \"any\"\n        ],\n        \"macAddress\": \"string\",\n        \"name\": \"string\",\n        \"status\": \"string\"\n      }\n    ],\n    \"lastContact\": 0,\n    \"lastSyncTime\": 0,\n    \"lastUpdateOn\": 0,\n    \"location\": {\n      \"address\": \"string\",\n      \"altitude\": \"string\",\n      \"latitude\": \"string\",\n      \"longitude\": \"string\",\n      \"siteId\": \"string\"\n    },\n    \"macAddress\": \"string\",\n    \"mode\": \"string\",\n    \"name\": \"string\",\n    \"neighborLinks\": [\n      {\n        \"localInterfaceName\": \"string\",\n        \"localMacAddress\": \"string\",\n        \"localShortInterfaceName\": \"string\",\n        \"remoteDeviceName\": \"string\",\n        \"remoteInterfaceName\": \"string\",\n        \"remoteMacAddress\": \"string\",\n        \"remotePlatform\": \"string\",\n        \"remoteShortInterfaceName\": \"string\",\n        \"remoteVersion\": \"string\"\n      }\n    ],\n    \"onbState\": \"string\",\n    \"pid\": \"string\",\n    \"pnpProfileList\": [\n      {\n        \"createdBy\": \"string\",\n        \"discoveryCreated\": false,\n        \"primaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        },\n        \"profileName\": \"string\",\n        \"secondaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        }\n      }\n    ],\n    \"populateInventory\": false,\n    \"preWorkflowCliOuputs\": [\n      {\n        \"cli\": \"string\",\n        \"cliOutput\": \"string\"\n      }\n    ],\n    \"projectId\": \"string\",\n    \"projectName\": \"string\",\n    \"reloadRequested\": false,\n    \"serialNumber\": \"string\",\n    \"smartAccountId\": \"string\",\n    \"source\": \"string\",\n    \"stack\": false,\n    \"stackInfo\": {\n      \"isFullRing\": false,\n      \"stackMemberList\": [\n        {\n          \"hardwareVersion\": \"string\",\n          \"licenseLevel\": \"string\",\n          \"licenseType\": \"string\",\n          \"macAddress\": \"string\",\n          \"pid\": \"string\",\n          \"priority\": 0,\n          \"role\": \"string\",\n          \"serialNumber\": \"string\",\n          \"softwareVersion\": \"string\",\n          \"stackNumber\": 0,\n          \"state\": \"string\",\n          \"sudiSerialNumber\": \"string\"\n        }\n      ],\n      \"stackRingProtocol\": \"string\",\n      \"supportsStackWorkflows\": false,\n      \"totalMemberCount\": 0,\n      \"validLicenseLevels\": [\n        \"string\"\n      ]\n    },\n    \"state\": \"string\",\n    \"sudiRequired\": false,\n    \"tags\": \"any\",\n    \"userSudiSerialNos\": [\n      \"string\"\n    ],\n    \"virtualAccountId\": \"string\",\n    \"workflowId\": \"string\",\n    \"workflowName\": \"string\"\n  },\n  \"runSummaryList\": [\n    {\n      \"details\": \"string\",\n      \"errorFlag\": false,\n      \"historyTaskInfo\": {\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"name\": \"string\",\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      },\n      \"timestamp\": 0\n    }\n  ],\n  \"systemResetWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"systemWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"tenantId\": \"string\",\n  \"version\": 0,\n  \"workflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"workflowParameters\": {\n    \"configList\": [\n      {\n        \"configId\": \"string\",\n        \"configParameters\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ]\n      }\n    ],\n    \"licenseLevel\": \"string\",\n    \"licenseType\": \"string\",\n    \"topOfStackSerialNumber\": \"string\"\n  }\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) id"
										}
									]
								},
								"description": "Updates device details specified by device id in PnP database\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - deviceInfo: (map, required)\n    - aaaCredentials: (map, optional)\n      - password: (string, optional)\n      - username: (string, optional)\n    - addedOn: (integer, optional)\n    - addnMacAddrs: (array[string], optional)\n    - agentType: (enum[\"POSIX\",\"IOS\"], optional)\n    - authStatus: (string, optional)\n    - authenticatedSudiSerialNo: (string, optional)\n    - capabilitiesSupported: (array[string], optional)\n    - cmState: (enum[\"NotContacted\",\"Contacted\",\"Disconnected\",\"SecuringConnection\",\"SecuredConnection\",\"Authenticated\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\"], optional)\n    - description: (string, optional)\n    - deviceSudiSerialNos: (array[string], optional)\n    - deviceType: (string, optional)\n    - featuresSupported: (array[string], optional)\n    - fileSystemList: (array[map], optional)\n      - freespace: (integer, optional)\n      - name: (string, optional)\n      - readable: (boolean, optional)\n      - size: (integer, optional)\n      - type: (string, optional)\n      - writeable: (boolean, optional)\n    - firstContact: (integer, optional)\n    - hostname: (string, optional)\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional)\n      - value: (string, optional)\n    - imageFile: (string, optional)\n    - imageVersion: (string, optional)\n    - ipInterfaces: (array[map], optional)\n      - ipv4Address: (any, optional)\n      - ipv6AddressList: (array[any], optional)\n      - macAddress: (string, optional)\n      - name: (string, optional)\n      - status: (string, optional)\n    - lastContact: (integer, optional)\n    - lastSyncTime: (integer, optional)\n    - lastUpdateOn: (integer, optional)\n    - location: (map, optional)\n      - address: (string, optional)\n      - altitude: (string, optional)\n      - latitude: (string, optional)\n      - longitude: (string, optional)\n      - siteId: (string, optional)\n    - macAddress: (string, optional)\n    - mode: (string, optional)\n    - name: (string, optional)\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional)\n      - localMacAddress: (string, optional)\n      - localShortInterfaceName: (string, optional)\n      - remoteDeviceName: (string, optional)\n      - remoteInterfaceName: (string, optional)\n      - remoteMacAddress: (string, optional)\n      - remotePlatform: (string, optional)\n      - remoteShortInterfaceName: (string, optional)\n      - remoteVersion: (string, optional)\n    - onbState: (enum[\"NotContacted\",\"Connecting\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\",\"Initializing\",\"Initialized\",\"ErrorInitializing\",\"SudiAuthorizing\",\"ErrorSudiAuthorizing\",\"ExecutingWorkflow\",\"ExecutedWorkflow\",\"ErrorExecutingWorkflow\",\"ExecutingReset\",\"ErrorExecutingReset\",\"Provisioned\"], optional)\n    - pid: (string, optional)\n    - pnpProfileList: (array[map], optional)\n      - createdBy: (string, optional)\n      - discoveryCreated: (boolean, optional)\n      - primaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n      - profileName: (string, optional)\n      - secondaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n    - populateInventory: (boolean, optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional)\n      - cliOutput: (string, optional)\n    - projectId: (string, optional)\n    - projectName: (string, optional)\n    - reloadRequested: (boolean, optional)\n    - serialNumber: (string, required)\n    - smartAccountId: (string, optional)\n    - source: (string, optional)\n    - stack: (boolean, optional)\n    - stackInfo: (map, optional)\n      - isFullRing: (boolean, optional)\n      - stackMemberList: (array[map], optional)\n        - hardwareVersion: (string, optional)\n        - licenseLevel: (string, optional)\n        - licenseType: (string, optional)\n        - macAddress: (string, optional)\n        - pid: (string, optional)\n        - priority: (integer, optional)\n        - role: (string, optional)\n        - serialNumber: (string, optional)\n        - softwareVersion: (string, optional)\n        - stackNumber: (integer, optional)\n        - state: (string, optional)\n        - sudiSerialNumber: (string, optional)\n      - stackRingProtocol: (string, optional)\n      - supportsStackWorkflows: (boolean, optional)\n      - totalMemberCount: (integer, optional)\n      - validLicenseLevels: (array[string], optional)\n    - state: (enum[\"Unclaimed\",\"Planned\",\"Onboarding\",\"Provisioned\",\"Error\",\"Deleted\"], optional)\n    - sudiRequired: (boolean, optional)\n    - tags: (any, optional)\n    - userSudiSerialNos: (array[string], optional)\n    - virtualAccountId: (string, optional)\n    - workflowId: (string, optional)\n    - workflowName: (string, optional)\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional)\n    - errorFlag: (boolean, optional)\n    - historyTaskInfo: (map, optional)\n      - addnDetails: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n      - name: (string, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - timestamp: (integer, optional)\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n  - workflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - workflowParameters: (map, optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - deviceInfo: (map, optional)\n    - source: (string, optional) Source\n    - serialNumber: (string, optional) Serial Number\n    - stack: (boolean, optional) Stack\n    - mode: (string, optional) Mode\n    - state: (string, optional) State\n    - location: (map, optional)\n      - siteId: (string, optional) Site Id\n      - address: (string, optional) Address\n      - latitude: (string, optional) Latitude\n      - longitude: (string, optional) Longitude\n      - altitude: (string, optional) Altitude\n    - description: (string, optional) Description\n    - onbState: (string, optional) Onb State\n    - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n    - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n    - capabilitiesSupported: (array[string], optional)\n    - featuresSupported: (array[string], optional)\n    - cmState: (string, optional) Cm State\n    - firstContact: (number, optional) First Contact\n    - lastContact: (number, optional) Last Contact\n    - macAddress: (string, optional) Mac Address\n    - pid: (string, optional) Pid\n    - deviceSudiSerialNos: (array[string], optional)\n    - lastUpdateOn: (number, optional) Last Update On\n    - workflowId: (string, optional) Workflow Id\n    - workflowName: (string, optional) Workflow Name\n    - projectId: (string, optional) Project Id\n    - projectName: (string, optional) Project Name\n    - deviceType: (string, optional) Device Type\n    - agentType: (string, optional) Agent Type\n    - imageVersion: (string, optional) Image Version\n    - fileSystemList: (array[map], optional)\n      - type: (string, optional) Type\n      - writeable: (boolean, optional) Writeable\n      - freespace: (number, optional) Freespace\n      - name: (string, optional) Name\n      - readable: (boolean, optional) Readable\n      - size: (number, optional) Size\n    - pnpProfileList: (array[map], optional)\n      - profileName: (string, optional) Profile Name\n      - discoveryCreated: (boolean, optional) Discovery Created\n      - createdBy: (string, optional) Created By\n      - primaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n      - secondaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n    - imageFile: (string, optional) Image File\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional) Key\n      - value: (string, optional) Value\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional) Local Interface Name\n      - localShortInterfaceName: (string, optional) Local Short Interface Name\n      - localMacAddress: (string, optional) Local Mac Address\n      - remoteInterfaceName: (string, optional) Remote Interface Name\n      - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n      - remoteMacAddress: (string, optional) Remote Mac Address\n      - remoteDeviceName: (string, optional) Remote Device Name\n      - remotePlatform: (string, optional) Remote Platform\n      - remoteVersion: (string, optional) Remote Version\n    - lastSyncTime: (number, optional) Last Sync Time\n    - ipInterfaces: (array[map], optional)\n      - status: (string, optional) Status\n      - macAddress: (string, optional) Mac Address\n      - ipv4Address: (map, optional)\n      - ipv6AddressList: (array[map], optional)\n      - name: (string, optional) Name\n    - hostname: (string, optional) Hostname\n    - authStatus: (string, optional) Auth Status\n    - stackInfo: (map, optional)\n      - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n      - isFullRing: (boolean, optional) Is Full Ring\n      - stackMemberList: (array[map], optional)\n        - serialNumber: (string, optional) Serial Number\n        - state: (string, optional) State\n        - role: (string, optional) Role\n        - macAddress: (string, optional) Mac Address\n        - pid: (string, optional) Pid\n        - licenseLevel: (string, optional) License Level\n        - licenseType: (string, optional) License Type\n        - sudiSerialNumber: (string, optional) Sudi Serial Number\n        - hardwareVersion: (string, optional) Hardware Version\n        - stackNumber: (number, optional) Stack Number\n        - softwareVersion: (string, optional) Software Version\n        - priority: (number, optional) Priority\n      - stackRingProtocol: (string, optional) Stack Ring Protocol\n      - validLicenseLevels: (array[string], optional)\n      - totalMemberCount: (number, optional) Total Member Count\n    - reloadRequested: (boolean, optional) Reload Requested\n    - addedOn: (number, optional) Added On\n    - siteId: (string, optional) Site Id\n    - aaaCredentials: (map, optional)\n      - password: (string, optional) Password\n      - username: (string, optional) Username\n    - userMicNumbers: (array[string], optional)\n    - userSudiSerialNos: (array[string], optional)\n    - addnMacAddrs: (array[string], optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional) Cli\n      - cliOutput: (string, optional) Cli Output\n    - tags: (map, optional)\n    - sudiRequired: (boolean, optional) Sudi Required\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - populateInventory: (boolean, optional) Populate Inventory\n    - siteName: (string, optional) Site Name\n    - name: (string, optional) Name\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - workflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - type: (string, optional) Type\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - name: (string, optional) Name\n    - errorFlag: (boolean, optional) Error Flag\n    - timestamp: (number, optional) Timestamp\n  - workflowParameters: (map, optional)\n    - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n    - licenseLevel: (string, optional) License Level\n    - licenseType: (string, optional) License Type\n    - configList: (array[map], optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - configId: (string, optional) Config Id\n  - dayZeroConfig: (map, optional)\n    - config: (string, optional) Config\n  - dayZeroConfigPreview: (map, optional)\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"_id\": \"string\",\n  \"deviceInfo\": {\n    \"aaaCredentials\": {\n      \"password\": \"string\",\n      \"username\": \"string\"\n    },\n    \"addedOn\": 0,\n    \"addnMacAddrs\": [\n      \"string\"\n    ],\n    \"agentType\": \"string\",\n    \"authStatus\": \"string\",\n    \"authenticatedSudiSerialNo\": \"string\",\n    \"capabilitiesSupported\": [\n      \"string\"\n    ],\n    \"cmState\": \"string\",\n    \"description\": \"string\",\n    \"deviceSudiSerialNos\": [\n      \"string\"\n    ],\n    \"deviceType\": \"string\",\n    \"featuresSupported\": [\n      \"string\"\n    ],\n    \"fileSystemList\": [\n      {\n        \"freespace\": 0,\n        \"name\": \"string\",\n        \"readable\": false,\n        \"size\": 0,\n        \"type\": \"string\",\n        \"writeable\": false\n      }\n    ],\n    \"firstContact\": 0,\n    \"hostname\": \"string\",\n    \"httpHeaders\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"imageFile\": \"string\",\n    \"imageVersion\": \"string\",\n    \"ipInterfaces\": [\n      {\n        \"ipv4Address\": \"any\",\n        \"ipv6AddressList\": [\n          \"any\"\n        ],\n        \"macAddress\": \"string\",\n        \"name\": \"string\",\n        \"status\": \"string\"\n      }\n    ],\n    \"lastContact\": 0,\n    \"lastSyncTime\": 0,\n    \"lastUpdateOn\": 0,\n    \"location\": {\n      \"address\": \"string\",\n      \"altitude\": \"string\",\n      \"latitude\": \"string\",\n      \"longitude\": \"string\",\n      \"siteId\": \"string\"\n    },\n    \"macAddress\": \"string\",\n    \"mode\": \"string\",\n    \"name\": \"string\",\n    \"neighborLinks\": [\n      {\n        \"localInterfaceName\": \"string\",\n        \"localMacAddress\": \"string\",\n        \"localShortInterfaceName\": \"string\",\n        \"remoteDeviceName\": \"string\",\n        \"remoteInterfaceName\": \"string\",\n        \"remoteMacAddress\": \"string\",\n        \"remotePlatform\": \"string\",\n        \"remoteShortInterfaceName\": \"string\",\n        \"remoteVersion\": \"string\"\n      }\n    ],\n    \"onbState\": \"string\",\n    \"pid\": \"string\",\n    \"pnpProfileList\": [\n      {\n        \"createdBy\": \"string\",\n        \"discoveryCreated\": false,\n        \"primaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        },\n        \"profileName\": \"string\",\n        \"secondaryEndpoint\": {\n          \"certificate\": \"string\",\n          \"fqdn\": \"string\",\n          \"ipv4Address\": \"any\",\n          \"ipv6Address\": \"any\",\n          \"port\": 0,\n          \"protocol\": \"string\"\n        }\n      }\n    ],\n    \"populateInventory\": false,\n    \"preWorkflowCliOuputs\": [\n      {\n        \"cli\": \"string\",\n        \"cliOutput\": \"string\"\n      }\n    ],\n    \"projectId\": \"string\",\n    \"projectName\": \"string\",\n    \"reloadRequested\": false,\n    \"serialNumber\": \"string\",\n    \"smartAccountId\": \"string\",\n    \"source\": \"string\",\n    \"stack\": false,\n    \"stackInfo\": {\n      \"isFullRing\": false,\n      \"stackMemberList\": [\n        {\n          \"hardwareVersion\": \"string\",\n          \"licenseLevel\": \"string\",\n          \"licenseType\": \"string\",\n          \"macAddress\": \"string\",\n          \"pid\": \"string\",\n          \"priority\": 0,\n          \"role\": \"string\",\n          \"serialNumber\": \"string\",\n          \"softwareVersion\": \"string\",\n          \"stackNumber\": 0,\n          \"state\": \"string\",\n          \"sudiSerialNumber\": \"string\"\n        }\n      ],\n      \"stackRingProtocol\": \"string\",\n      \"supportsStackWorkflows\": false,\n      \"totalMemberCount\": 0,\n      \"validLicenseLevels\": [\n        \"string\"\n      ]\n    },\n    \"state\": \"string\",\n    \"sudiRequired\": false,\n    \"tags\": \"any\",\n    \"userSudiSerialNos\": [\n      \"string\"\n    ],\n    \"virtualAccountId\": \"string\",\n    \"workflowId\": \"string\",\n    \"workflowName\": \"string\"\n  },\n  \"runSummaryList\": [\n    {\n      \"details\": \"string\",\n      \"errorFlag\": false,\n      \"historyTaskInfo\": {\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"name\": \"string\",\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      },\n      \"timestamp\": 0\n    }\n  ],\n  \"systemResetWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"systemWorkflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"tenantId\": \"string\",\n  \"version\": 0,\n  \"workflow\": {\n    \"_id\": \"string\",\n    \"addToInventory\": false,\n    \"addedOn\": 0,\n    \"configId\": \"string\",\n    \"currTaskIdx\": 0,\n    \"description\": \"string\",\n    \"endTime\": 0,\n    \"execTime\": 0,\n    \"imageId\": \"string\",\n    \"instanceType\": \"string\",\n    \"lastupdateOn\": 0,\n    \"name\": \"string\",\n    \"startTime\": 0,\n    \"state\": \"string\",\n    \"tasks\": [\n      {\n        \"currWorkItemIdx\": 0,\n        \"endTime\": 0,\n        \"name\": \"string\",\n        \"startTime\": 0,\n        \"state\": \"string\",\n        \"taskSeqNo\": 0,\n        \"timeTaken\": 0,\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"command\": \"string\",\n            \"endTime\": 0,\n            \"outputStr\": \"string\",\n            \"startTime\": 0,\n            \"state\": \"string\",\n            \"timeTaken\": 0\n          }\n        ]\n      }\n    ],\n    \"tenantId\": \"string\",\n    \"type\": \"string\",\n    \"useState\": \"string\",\n    \"version\": 0\n  },\n  \"workflowParameters\": {\n    \"configList\": [\n      {\n        \"configId\": \"string\",\n        \"configParameters\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ]\n      }\n    ],\n    \"licenseLevel\": \"string\",\n    \"licenseType\": \"string\",\n    \"topOfStackSerialNumber\": \"string\"\n  }\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) id"
												}
											]
										},
										"description": "Updates device details specified by device id in PnP database\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - deviceInfo: (map, required)\n    - aaaCredentials: (map, optional)\n      - password: (string, optional)\n      - username: (string, optional)\n    - addedOn: (integer, optional)\n    - addnMacAddrs: (array[string], optional)\n    - agentType: (enum[\"POSIX\",\"IOS\"], optional)\n    - authStatus: (string, optional)\n    - authenticatedSudiSerialNo: (string, optional)\n    - capabilitiesSupported: (array[string], optional)\n    - cmState: (enum[\"NotContacted\",\"Contacted\",\"Disconnected\",\"SecuringConnection\",\"SecuredConnection\",\"Authenticated\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\"], optional)\n    - description: (string, optional)\n    - deviceSudiSerialNos: (array[string], optional)\n    - deviceType: (string, optional)\n    - featuresSupported: (array[string], optional)\n    - fileSystemList: (array[map], optional)\n      - freespace: (integer, optional)\n      - name: (string, optional)\n      - readable: (boolean, optional)\n      - size: (integer, optional)\n      - type: (string, optional)\n      - writeable: (boolean, optional)\n    - firstContact: (integer, optional)\n    - hostname: (string, optional)\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional)\n      - value: (string, optional)\n    - imageFile: (string, optional)\n    - imageVersion: (string, optional)\n    - ipInterfaces: (array[map], optional)\n      - ipv4Address: (any, optional)\n      - ipv6AddressList: (array[any], optional)\n      - macAddress: (string, optional)\n      - name: (string, optional)\n      - status: (string, optional)\n    - lastContact: (integer, optional)\n    - lastSyncTime: (integer, optional)\n    - lastUpdateOn: (integer, optional)\n    - location: (map, optional)\n      - address: (string, optional)\n      - altitude: (string, optional)\n      - latitude: (string, optional)\n      - longitude: (string, optional)\n      - siteId: (string, optional)\n    - macAddress: (string, optional)\n    - mode: (string, optional)\n    - name: (string, optional)\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional)\n      - localMacAddress: (string, optional)\n      - localShortInterfaceName: (string, optional)\n      - remoteDeviceName: (string, optional)\n      - remoteInterfaceName: (string, optional)\n      - remoteMacAddress: (string, optional)\n      - remotePlatform: (string, optional)\n      - remoteShortInterfaceName: (string, optional)\n      - remoteVersion: (string, optional)\n    - onbState: (enum[\"NotContacted\",\"Connecting\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\",\"Initializing\",\"Initialized\",\"ErrorInitializing\",\"SudiAuthorizing\",\"ErrorSudiAuthorizing\",\"ExecutingWorkflow\",\"ExecutedWorkflow\",\"ErrorExecutingWorkflow\",\"ExecutingReset\",\"ErrorExecutingReset\",\"Provisioned\"], optional)\n    - pid: (string, optional)\n    - pnpProfileList: (array[map], optional)\n      - createdBy: (string, optional)\n      - discoveryCreated: (boolean, optional)\n      - primaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n      - profileName: (string, optional)\n      - secondaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n    - populateInventory: (boolean, optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional)\n      - cliOutput: (string, optional)\n    - projectId: (string, optional)\n    - projectName: (string, optional)\n    - reloadRequested: (boolean, optional)\n    - serialNumber: (string, required)\n    - smartAccountId: (string, optional)\n    - source: (string, optional)\n    - stack: (boolean, optional)\n    - stackInfo: (map, optional)\n      - isFullRing: (boolean, optional)\n      - stackMemberList: (array[map], optional)\n        - hardwareVersion: (string, optional)\n        - licenseLevel: (string, optional)\n        - licenseType: (string, optional)\n        - macAddress: (string, optional)\n        - pid: (string, optional)\n        - priority: (integer, optional)\n        - role: (string, optional)\n        - serialNumber: (string, optional)\n        - softwareVersion: (string, optional)\n        - stackNumber: (integer, optional)\n        - state: (string, optional)\n        - sudiSerialNumber: (string, optional)\n      - stackRingProtocol: (string, optional)\n      - supportsStackWorkflows: (boolean, optional)\n      - totalMemberCount: (integer, optional)\n      - validLicenseLevels: (array[string], optional)\n    - state: (enum[\"Unclaimed\",\"Planned\",\"Onboarding\",\"Provisioned\",\"Error\",\"Deleted\"], optional)\n    - sudiRequired: (boolean, optional)\n    - tags: (any, optional)\n    - userSudiSerialNos: (array[string], optional)\n    - virtualAccountId: (string, optional)\n    - workflowId: (string, optional)\n    - workflowName: (string, optional)\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional)\n    - errorFlag: (boolean, optional)\n    - historyTaskInfo: (map, optional)\n      - addnDetails: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n      - name: (string, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - timestamp: (integer, optional)\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n  - workflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - workflowParameters: (map, optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - deviceInfo: (map, optional)\n    - source: (string, optional) Source\n    - serialNumber: (string, optional) Serial Number\n    - stack: (boolean, optional) Stack\n    - mode: (string, optional) Mode\n    - state: (string, optional) State\n    - location: (map, optional)\n      - siteId: (string, optional) Site Id\n      - address: (string, optional) Address\n      - latitude: (string, optional) Latitude\n      - longitude: (string, optional) Longitude\n      - altitude: (string, optional) Altitude\n    - description: (string, optional) Description\n    - onbState: (string, optional) Onb State\n    - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n    - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n    - capabilitiesSupported: (array[string], optional)\n    - featuresSupported: (array[string], optional)\n    - cmState: (string, optional) Cm State\n    - firstContact: (number, optional) First Contact\n    - lastContact: (number, optional) Last Contact\n    - macAddress: (string, optional) Mac Address\n    - pid: (string, optional) Pid\n    - deviceSudiSerialNos: (array[string], optional)\n    - lastUpdateOn: (number, optional) Last Update On\n    - workflowId: (string, optional) Workflow Id\n    - workflowName: (string, optional) Workflow Name\n    - projectId: (string, optional) Project Id\n    - projectName: (string, optional) Project Name\n    - deviceType: (string, optional) Device Type\n    - agentType: (string, optional) Agent Type\n    - imageVersion: (string, optional) Image Version\n    - fileSystemList: (array[map], optional)\n      - type: (string, optional) Type\n      - writeable: (boolean, optional) Writeable\n      - freespace: (number, optional) Freespace\n      - name: (string, optional) Name\n      - readable: (boolean, optional) Readable\n      - size: (number, optional) Size\n    - pnpProfileList: (array[map], optional)\n      - profileName: (string, optional) Profile Name\n      - discoveryCreated: (boolean, optional) Discovery Created\n      - createdBy: (string, optional) Created By\n      - primaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n      - secondaryEndpoint: (map, optional)\n        - port: (number, optional) Port\n        - protocol: (string, optional) Protocol\n        - ipv4Address: (map, optional)\n        - ipv6Address: (map, optional)\n        - fqdn: (string, optional) Fqdn\n        - certificate: (string, optional) Certificate\n    - imageFile: (string, optional) Image File\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional) Key\n      - value: (string, optional) Value\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional) Local Interface Name\n      - localShortInterfaceName: (string, optional) Local Short Interface Name\n      - localMacAddress: (string, optional) Local Mac Address\n      - remoteInterfaceName: (string, optional) Remote Interface Name\n      - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n      - remoteMacAddress: (string, optional) Remote Mac Address\n      - remoteDeviceName: (string, optional) Remote Device Name\n      - remotePlatform: (string, optional) Remote Platform\n      - remoteVersion: (string, optional) Remote Version\n    - lastSyncTime: (number, optional) Last Sync Time\n    - ipInterfaces: (array[map], optional)\n      - status: (string, optional) Status\n      - macAddress: (string, optional) Mac Address\n      - ipv4Address: (map, optional)\n      - ipv6AddressList: (array[map], optional)\n      - name: (string, optional) Name\n    - hostname: (string, optional) Hostname\n    - authStatus: (string, optional) Auth Status\n    - stackInfo: (map, optional)\n      - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n      - isFullRing: (boolean, optional) Is Full Ring\n      - stackMemberList: (array[map], optional)\n        - serialNumber: (string, optional) Serial Number\n        - state: (string, optional) State\n        - role: (string, optional) Role\n        - macAddress: (string, optional) Mac Address\n        - pid: (string, optional) Pid\n        - licenseLevel: (string, optional) License Level\n        - licenseType: (string, optional) License Type\n        - sudiSerialNumber: (string, optional) Sudi Serial Number\n        - hardwareVersion: (string, optional) Hardware Version\n        - stackNumber: (number, optional) Stack Number\n        - softwareVersion: (string, optional) Software Version\n        - priority: (number, optional) Priority\n      - stackRingProtocol: (string, optional) Stack Ring Protocol\n      - validLicenseLevels: (array[string], optional)\n      - totalMemberCount: (number, optional) Total Member Count\n    - reloadRequested: (boolean, optional) Reload Requested\n    - addedOn: (number, optional) Added On\n    - siteId: (string, optional) Site Id\n    - aaaCredentials: (map, optional)\n      - password: (string, optional) Password\n      - username: (string, optional) Username\n    - userMicNumbers: (array[string], optional)\n    - userSudiSerialNos: (array[string], optional)\n    - addnMacAddrs: (array[string], optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional) Cli\n      - cliOutput: (string, optional) Cli Output\n    - tags: (map, optional)\n    - sudiRequired: (boolean, optional) Sudi Required\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - populateInventory: (boolean, optional) Populate Inventory\n    - siteName: (string, optional) Site Name\n    - name: (string, optional) Name\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - workflow: (map, optional)\n    - _id: (string, optional)  Id\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - description: (string, optional) Description\n    - lastupdateOn: (number, optional) Lastupdate On\n    - imageId: (string, optional) Image Id\n    - currTaskIdx: (number, optional) Curr Task Idx\n    - addedOn: (number, optional) Added On\n    - tasks: (array[map], optional)\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - currWorkItemIdx: (number, optional) Curr Work Item Idx\n      - taskSeqNo: (number, optional) Task Seq No\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - name: (string, optional) Name\n    - addToInventory: (boolean, optional) Add To Inventory\n    - instanceType: (string, optional) Instance Type\n    - endTime: (number, optional) End Time\n    - execTime: (number, optional) Exec Time\n    - startTime: (number, optional) Start Time\n    - useState: (string, optional) Use State\n    - configId: (string, optional) Config Id\n    - name: (string, optional) Name\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - type: (string, optional) Type\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - outputStr: (string, optional) Output Str\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - timeTaken: (number, optional) Time Taken\n      - timeTaken: (number, optional) Time Taken\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - name: (string, optional) Name\n    - errorFlag: (boolean, optional) Error Flag\n    - timestamp: (number, optional) Timestamp\n  - workflowParameters: (map, optional)\n    - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n    - licenseLevel: (string, optional) License Level\n    - licenseType: (string, optional) License Type\n    - configList: (array[map], optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - configId: (string, optional) Config Id\n  - dayZeroConfig: (map, optional)\n    - config: (string, optional) Config\n  - dayZeroConfigPreview: (map, optional)\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"_id\": \"string\",\n  \"deviceInfo\": {\n    \"source\": \"string\",\n    \"serialNumber\": \"string\",\n    \"stack\": false,\n    \"mode\": \"string\",\n    \"state\": \"string\",\n    \"location\": {\n      \"siteId\": \"string\",\n      \"address\": \"string\",\n      \"latitude\": \"string\",\n      \"longitude\": \"string\",\n      \"altitude\": \"string\"\n    },\n    \"description\": \"string\",\n    \"onbState\": \"string\",\n    \"authenticatedMicNumber\": \"string\",\n    \"authenticatedSudiSerialNo\": \"string\",\n    \"capabilitiesSupported\": [\n      \"string\"\n    ],\n    \"featuresSupported\": [\n      \"string\"\n    ],\n    \"cmState\": \"string\",\n    \"firstContact\": 0.1,\n    \"lastContact\": 0.1,\n    \"macAddress\": \"string\",\n    \"pid\": \"string\",\n    \"deviceSudiSerialNos\": [\n      \"string\"\n    ],\n    \"lastUpdateOn\": 0.1,\n    \"workflowId\": \"string\",\n    \"workflowName\": \"string\",\n    \"projectId\": \"string\",\n    \"projectName\": \"string\",\n    \"deviceType\": \"string\",\n    \"agentType\": \"string\",\n    \"imageVersion\": \"string\",\n    \"fileSystemList\": [\n      {\n        \"type\": \"string\",\n        \"writeable\": false,\n        \"freespace\": 0.1,\n        \"name\": \"string\",\n        \"readable\": false,\n        \"size\": 0.1\n      }\n    ],\n    \"pnpProfileList\": [\n      {\n        \"profileName\": \"string\",\n        \"discoveryCreated\": false,\n        \"createdBy\": \"string\",\n        \"primaryEndpoint\": {\n          \"port\": 0.1,\n          \"protocol\": \"string\",\n          \"ipv4Address\": {\n            \n          },\n          \"ipv6Address\": {\n            \n          },\n          \"fqdn\": \"string\",\n          \"certificate\": \"string\"\n        },\n        \"secondaryEndpoint\": {\n          \"port\": 0.1,\n          \"protocol\": \"string\",\n          \"ipv4Address\": {\n            \n          },\n          \"ipv6Address\": {\n            \n          },\n          \"fqdn\": \"string\",\n          \"certificate\": \"string\"\n        }\n      }\n    ],\n    \"imageFile\": \"string\",\n    \"httpHeaders\": [\n      {\n        \"key\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"neighborLinks\": [\n      {\n        \"localInterfaceName\": \"string\",\n        \"localShortInterfaceName\": \"string\",\n        \"localMacAddress\": \"string\",\n        \"remoteInterfaceName\": \"string\",\n        \"remoteShortInterfaceName\": \"string\",\n        \"remoteMacAddress\": \"string\",\n        \"remoteDeviceName\": \"string\",\n        \"remotePlatform\": \"string\",\n        \"remoteVersion\": \"string\"\n      }\n    ],\n    \"lastSyncTime\": 0.1,\n    \"ipInterfaces\": [\n      {\n        \"status\": \"string\",\n        \"macAddress\": \"string\",\n        \"ipv4Address\": {\n          \n        },\n        \"ipv6AddressList\": [\n          {\n            \n          }\n        ],\n        \"name\": \"string\"\n      }\n    ],\n    \"hostname\": \"string\",\n    \"authStatus\": \"string\",\n    \"stackInfo\": {\n      \"supportsStackWorkflows\": false,\n      \"isFullRing\": false,\n      \"stackMemberList\": [\n        {\n          \"serialNumber\": \"string\",\n          \"state\": \"string\",\n          \"role\": \"string\",\n          \"macAddress\": \"string\",\n          \"pid\": \"string\",\n          \"licenseLevel\": \"string\",\n          \"licenseType\": \"string\",\n          \"sudiSerialNumber\": \"string\",\n          \"hardwareVersion\": \"string\",\n          \"stackNumber\": 0.1,\n          \"softwareVersion\": \"string\",\n          \"priority\": 0.1\n        }\n      ],\n      \"stackRingProtocol\": \"string\",\n      \"validLicenseLevels\": [\n        \"string\"\n      ],\n      \"totalMemberCount\": 0.1\n    },\n    \"reloadRequested\": false,\n    \"addedOn\": 0.1,\n    \"siteId\": \"string\",\n    \"aaaCredentials\": {\n      \"password\": \"string\",\n      \"username\": \"string\"\n    },\n    \"userMicNumbers\": [\n      \"string\"\n    ],\n    \"userSudiSerialNos\": [\n      \"string\"\n    ],\n    \"addnMacAddrs\": [\n      \"string\"\n    ],\n    \"preWorkflowCliOuputs\": [\n      {\n        \"cli\": \"string\",\n        \"cliOutput\": \"string\"\n      }\n    ],\n    \"tags\": {\n      \n    },\n    \"sudiRequired\": false,\n    \"smartAccountId\": \"string\",\n    \"virtualAccountId\": \"string\",\n    \"populateInventory\": false,\n    \"siteName\": \"string\",\n    \"name\": \"string\"\n  },\n  \"systemResetWorkflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"systemWorkflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"workflow\": {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  },\n  \"runSummaryList\": [\n    {\n      \"details\": \"string\",\n      \"historyTaskInfo\": {\n        \"type\": \"string\",\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"name\": \"string\"\n      },\n      \"errorFlag\": false,\n      \"timestamp\": 0.1\n    }\n  ],\n  \"workflowParameters\": {\n    \"topOfStackSerialNumber\": \"string\",\n    \"licenseLevel\": \"string\",\n    \"licenseType\": \"string\",\n    \"configList\": [\n      {\n        \"configParameters\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"configId\": \"string\"\n      }\n    ]\n  },\n  \"dayZeroConfig\": {\n    \"config\": \"string\"\n  },\n  \"dayZeroConfigPreview\": {\n    \n  },\n  \"version\": 0.1,\n  \"tenantId\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Claim Device",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"configFileUrl\": \"string\",\n  \"configId\": \"string\",\n  \"deviceClaimList\": [\n    {\n      \"configList\": [\n        {\n          \"configId\": \"string\",\n          \"configParameters\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ]\n        }\n      ],\n      \"deviceId\": \"string\",\n      \"licenseLevel\": \"string\",\n      \"licenseType\": \"string\",\n      \"topOfStackSerialNumber\": \"string\"\n    }\n  ],\n  \"fileServiceId\": \"string\",\n  \"imageId\": \"string\",\n  \"imageUrl\": \"string\",\n  \"populateInventory\": false,\n  \"projectId\": \"string\",\n  \"workflowId\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/claim",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device",
										"claim"
									]
								},
								"description": "Claims one of more devices with specified workflow\n\n###### Request Model\n- root: (map, optional)\n  - configFileUrl: (string, optional)\n  - configId: (string, optional)\n  - deviceClaimList: (array[map], optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - deviceId: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n  - fileServiceId: (string, optional)\n  - imageId: (string, optional)\n  - imageUrl: (string, optional)\n  - populateInventory: (boolean, optional)\n  - projectId: (string, optional)\n  - workflowId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - jsonArrayResponse: (array[any], optional)\n  - jsonResponse: (map, optional)\n  - message: (string, optional) Message\n  - statusCode: (number, optional) Status Code"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"configFileUrl\": \"string\",\n  \"configId\": \"string\",\n  \"deviceClaimList\": [\n    {\n      \"configList\": [\n        {\n          \"configId\": \"string\",\n          \"configParameters\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ]\n        }\n      ],\n      \"deviceId\": \"string\",\n      \"licenseLevel\": \"string\",\n      \"licenseType\": \"string\",\n      \"topOfStackSerialNumber\": \"string\"\n    }\n  ],\n  \"fileServiceId\": \"string\",\n  \"imageId\": \"string\",\n  \"imageUrl\": \"string\",\n  \"populateInventory\": false,\n  \"projectId\": \"string\",\n  \"workflowId\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/claim",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device",
												"claim"
											]
										},
										"description": "Claims one of more devices with specified workflow\n\n###### Request Model\n- root: (map, optional)\n  - configFileUrl: (string, optional)\n  - configId: (string, optional)\n  - deviceClaimList: (array[map], optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - deviceId: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n  - fileServiceId: (string, optional)\n  - imageId: (string, optional)\n  - imageUrl: (string, optional)\n  - populateInventory: (boolean, optional)\n  - projectId: (string, optional)\n  - workflowId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - jsonArrayResponse: (array[any], optional)\n  - jsonResponse: (map, optional)\n  - message: (string, optional) Message\n  - statusCode: (number, optional) Status Code"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"jsonArrayResponse\": [\n    \"any\"\n  ],\n  \"jsonResponse\": {\n    \n  },\n  \"message\": \"string\",\n  \"statusCode\": 0.1\n}"
								}
							]
						},
						{
							"name": "Get Device Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/count?serialNumber=&state=&onbState=&cmState=&name=&pid=&source=&projectId=&workflowId=&projectName=&workflowName=&smartAccountId=&virtualAccountId=&lastContact=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device",
										"count"
									],
									"query": [
										{
											"key": "serialNumber",
											"value": "",
											"description": "(array, optional) Device Serial Number"
										},
										{
											"key": "state",
											"value": "",
											"description": "(array, optional) Device State"
										},
										{
											"key": "onbState",
											"value": "",
											"description": "(array, optional) Device Onboarding State"
										},
										{
											"key": "cmState",
											"value": "",
											"description": "(array, optional) Device Connection Manager State"
										},
										{
											"key": "name",
											"value": "",
											"description": "(array, optional) Device Name"
										},
										{
											"key": "pid",
											"value": "",
											"description": "(array, optional) Device ProductId"
										},
										{
											"key": "source",
											"value": "",
											"description": "(array, optional) Device Source"
										},
										{
											"key": "projectId",
											"value": "",
											"description": "(array, optional) Device Project Id"
										},
										{
											"key": "workflowId",
											"value": "",
											"description": "(array, optional) Device Workflow Id"
										},
										{
											"key": "projectName",
											"value": "",
											"description": "(array, optional) Device Project Name"
										},
										{
											"key": "workflowName",
											"value": "",
											"description": "(array, optional) Device Workflow Name"
										},
										{
											"key": "smartAccountId",
											"value": "",
											"description": "(array, optional) Device Smart Account"
										},
										{
											"key": "virtualAccountId",
											"value": "",
											"description": "(array, optional) Device Virtual Account"
										},
										{
											"key": "lastContact",
											"value": "",
											"description": "(boolean, optional) Device Has Contacted lastContact > 0"
										}
									]
								},
								"description": "Returns the device count based on filter criteria. This is useful for pagination\n\n###### Response Model\n- root: (map, optional)\n  - response: (number, optional) Response"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/count?serialNumber=&state=&onbState=&cmState=&name=&pid=&source=&projectId=&workflowId=&projectName=&workflowName=&smartAccountId=&virtualAccountId=&lastContact=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device",
												"count"
											],
											"query": [
												{
													"key": "serialNumber",
													"value": "",
													"description": "(array, optional) Device Serial Number"
												},
												{
													"key": "state",
													"value": "",
													"description": "(array, optional) Device State"
												},
												{
													"key": "onbState",
													"value": "",
													"description": "(array, optional) Device Onboarding State"
												},
												{
													"key": "cmState",
													"value": "",
													"description": "(array, optional) Device Connection Manager State"
												},
												{
													"key": "name",
													"value": "",
													"description": "(array, optional) Device Name"
												},
												{
													"key": "pid",
													"value": "",
													"description": "(array, optional) Device ProductId"
												},
												{
													"key": "source",
													"value": "",
													"description": "(array, optional) Device Source"
												},
												{
													"key": "projectId",
													"value": "",
													"description": "(array, optional) Device Project Id"
												},
												{
													"key": "workflowId",
													"value": "",
													"description": "(array, optional) Device Workflow Id"
												},
												{
													"key": "projectName",
													"value": "",
													"description": "(array, optional) Device Project Name"
												},
												{
													"key": "workflowName",
													"value": "",
													"description": "(array, optional) Device Workflow Name"
												},
												{
													"key": "smartAccountId",
													"value": "",
													"description": "(array, optional) Device Smart Account"
												},
												{
													"key": "virtualAccountId",
													"value": "",
													"description": "(array, optional) Device Virtual Account"
												},
												{
													"key": "lastContact",
													"value": "",
													"description": "(boolean, optional) Device Has Contacted lastContact > 0"
												}
											]
										},
										"description": "Returns the device count based on filter criteria. This is useful for pagination\n\n###### Response Model\n- root: (map, optional)\n  - response: (number, optional) Response"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0.1\n}"
								}
							]
						},
						{
							"name": "Get Device History",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/history?serialNumber=&sort=&sortOrder=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device",
										"history"
									],
									"query": [
										{
											"key": "serialNumber",
											"value": "",
											"description": "(string, required) Device Serial Number"
										},
										{
											"key": "sort",
											"value": "",
											"description": "(array, optional) Comma seperated list of fields to sort on"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "(string, optional) Sort Order Ascending (asc) or Descending (des)"
										}
									]
								},
								"description": "Returns history for a specific device. Serial number is a required parameter\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - timestamp: (number, optional) Timestamp\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - name: (string, optional) Name\n      - type: (string, optional) Type\n      - timeTaken: (number, optional) Time Taken\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - startTime: (number, optional) Start Time\n        - endTime: (number, optional) End Time\n        - timeTaken: (number, optional) Time Taken\n        - outputStr: (string, optional) Output Str\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n    - errorFlag: (boolean, optional) Error Flag\n  - statusCode: (number, optional) Status Code"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/history?serialNumber=&sort=&sortOrder=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device",
												"history"
											],
											"query": [
												{
													"key": "serialNumber",
													"value": "",
													"description": "(string, required) Device Serial Number"
												},
												{
													"key": "sort",
													"value": "",
													"description": "(array, optional) Comma seperated list of fields to sort on"
												},
												{
													"key": "sortOrder",
													"value": "",
													"description": "(string, optional) Sort Order Ascending (asc) or Descending (des)"
												}
											]
										},
										"description": "Returns history for a specific device. Serial number is a required parameter\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - timestamp: (number, optional) Timestamp\n    - details: (string, optional) Details\n    - historyTaskInfo: (map, optional)\n      - name: (string, optional) Name\n      - type: (string, optional) Type\n      - timeTaken: (number, optional) Time Taken\n      - workItemList: (array[map], optional)\n        - state: (string, optional) State\n        - command: (string, optional) Command\n        - startTime: (number, optional) Start Time\n        - endTime: (number, optional) End Time\n        - timeTaken: (number, optional) Time Taken\n        - outputStr: (string, optional) Output Str\n      - addnDetails: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n    - errorFlag: (boolean, optional) Error Flag\n  - statusCode: (number, optional) Status Code"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"timestamp\": 0.1,\n      \"details\": \"string\",\n      \"historyTaskInfo\": {\n        \"name\": \"string\",\n        \"type\": \"string\",\n        \"timeTaken\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"startTime\": 0.1,\n            \"endTime\": 0.1,\n            \"timeTaken\": 0.1,\n            \"outputStr\": \"string\"\n          }\n        ],\n        \"addnDetails\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ]\n      },\n      \"errorFlag\": false\n    }\n  ],\n  \"statusCode\": 0.1\n}"
								}
							]
						},
						{
							"name": "Import Devices in bulk",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"_id\": \"string\",\n    \"deviceInfo\": {\n      \"aaaCredentials\": {\n        \"password\": \"string\",\n        \"username\": \"string\"\n      },\n      \"addedOn\": 0,\n      \"addnMacAddrs\": [\n        \"string\"\n      ],\n      \"agentType\": \"string\",\n      \"authStatus\": \"string\",\n      \"authenticatedSudiSerialNo\": \"string\",\n      \"capabilitiesSupported\": [\n        \"string\"\n      ],\n      \"cmState\": \"string\",\n      \"description\": \"string\",\n      \"deviceSudiSerialNos\": [\n        \"string\"\n      ],\n      \"deviceType\": \"string\",\n      \"featuresSupported\": [\n        \"string\"\n      ],\n      \"fileSystemList\": [\n        {\n          \"freespace\": 0,\n          \"name\": \"string\",\n          \"readable\": false,\n          \"size\": 0,\n          \"type\": \"string\",\n          \"writeable\": false\n        }\n      ],\n      \"firstContact\": 0,\n      \"hostname\": \"string\",\n      \"httpHeaders\": [\n        {\n          \"key\": \"string\",\n          \"value\": \"string\"\n        }\n      ],\n      \"imageFile\": \"string\",\n      \"imageVersion\": \"string\",\n      \"ipInterfaces\": [\n        {\n          \"ipv4Address\": \"any\",\n          \"ipv6AddressList\": [\n            \"any\"\n          ],\n          \"macAddress\": \"string\",\n          \"name\": \"string\",\n          \"status\": \"string\"\n        }\n      ],\n      \"lastContact\": 0,\n      \"lastSyncTime\": 0,\n      \"lastUpdateOn\": 0,\n      \"location\": {\n        \"address\": \"string\",\n        \"altitude\": \"string\",\n        \"latitude\": \"string\",\n        \"longitude\": \"string\",\n        \"siteId\": \"string\"\n      },\n      \"macAddress\": \"string\",\n      \"mode\": \"string\",\n      \"name\": \"string\",\n      \"neighborLinks\": [\n        {\n          \"localInterfaceName\": \"string\",\n          \"localMacAddress\": \"string\",\n          \"localShortInterfaceName\": \"string\",\n          \"remoteDeviceName\": \"string\",\n          \"remoteInterfaceName\": \"string\",\n          \"remoteMacAddress\": \"string\",\n          \"remotePlatform\": \"string\",\n          \"remoteShortInterfaceName\": \"string\",\n          \"remoteVersion\": \"string\"\n        }\n      ],\n      \"onbState\": \"string\",\n      \"pid\": \"string\",\n      \"pnpProfileList\": [\n        {\n          \"createdBy\": \"string\",\n          \"discoveryCreated\": false,\n          \"primaryEndpoint\": {\n            \"certificate\": \"string\",\n            \"fqdn\": \"string\",\n            \"ipv4Address\": \"any\",\n            \"ipv6Address\": \"any\",\n            \"port\": 0,\n            \"protocol\": \"string\"\n          },\n          \"profileName\": \"string\",\n          \"secondaryEndpoint\": {\n            \"certificate\": \"string\",\n            \"fqdn\": \"string\",\n            \"ipv4Address\": \"any\",\n            \"ipv6Address\": \"any\",\n            \"port\": 0,\n            \"protocol\": \"string\"\n          }\n        }\n      ],\n      \"populateInventory\": false,\n      \"preWorkflowCliOuputs\": [\n        {\n          \"cli\": \"string\",\n          \"cliOutput\": \"string\"\n        }\n      ],\n      \"projectId\": \"string\",\n      \"projectName\": \"string\",\n      \"reloadRequested\": false,\n      \"serialNumber\": \"string\",\n      \"smartAccountId\": \"string\",\n      \"source\": \"string\",\n      \"stack\": false,\n      \"stackInfo\": {\n        \"isFullRing\": false,\n        \"stackMemberList\": [\n          {\n            \"hardwareVersion\": \"string\",\n            \"licenseLevel\": \"string\",\n            \"licenseType\": \"string\",\n            \"macAddress\": \"string\",\n            \"pid\": \"string\",\n            \"priority\": 0,\n            \"role\": \"string\",\n            \"serialNumber\": \"string\",\n            \"softwareVersion\": \"string\",\n            \"stackNumber\": 0,\n            \"state\": \"string\",\n            \"sudiSerialNumber\": \"string\"\n          }\n        ],\n        \"stackRingProtocol\": \"string\",\n        \"supportsStackWorkflows\": false,\n        \"totalMemberCount\": 0,\n        \"validLicenseLevels\": [\n          \"string\"\n        ]\n      },\n      \"state\": \"string\",\n      \"sudiRequired\": false,\n      \"tags\": \"any\",\n      \"userSudiSerialNos\": [\n        \"string\"\n      ],\n      \"virtualAccountId\": \"string\",\n      \"workflowId\": \"string\",\n      \"workflowName\": \"string\"\n    },\n    \"runSummaryList\": [\n      {\n        \"details\": \"string\",\n        \"errorFlag\": false,\n        \"historyTaskInfo\": {\n          \"addnDetails\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ],\n          \"name\": \"string\",\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        },\n        \"timestamp\": 0\n      }\n    ],\n    \"systemResetWorkflow\": {\n      \"_id\": \"string\",\n      \"addToInventory\": false,\n      \"addedOn\": 0,\n      \"configId\": \"string\",\n      \"currTaskIdx\": 0,\n      \"description\": \"string\",\n      \"endTime\": 0,\n      \"execTime\": 0,\n      \"imageId\": \"string\",\n      \"instanceType\": \"string\",\n      \"lastupdateOn\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"tasks\": [\n        {\n          \"currWorkItemIdx\": 0,\n          \"endTime\": 0,\n          \"name\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"taskSeqNo\": 0,\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"string\",\n      \"type\": \"string\",\n      \"useState\": \"string\",\n      \"version\": 0\n    },\n    \"systemWorkflow\": {\n      \"_id\": \"string\",\n      \"addToInventory\": false,\n      \"addedOn\": 0,\n      \"configId\": \"string\",\n      \"currTaskIdx\": 0,\n      \"description\": \"string\",\n      \"endTime\": 0,\n      \"execTime\": 0,\n      \"imageId\": \"string\",\n      \"instanceType\": \"string\",\n      \"lastupdateOn\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"tasks\": [\n        {\n          \"currWorkItemIdx\": 0,\n          \"endTime\": 0,\n          \"name\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"taskSeqNo\": 0,\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"string\",\n      \"type\": \"string\",\n      \"useState\": \"string\",\n      \"version\": 0\n    },\n    \"tenantId\": \"string\",\n    \"version\": 0,\n    \"workflow\": {\n      \"_id\": \"string\",\n      \"addToInventory\": false,\n      \"addedOn\": 0,\n      \"configId\": \"string\",\n      \"currTaskIdx\": 0,\n      \"description\": \"string\",\n      \"endTime\": 0,\n      \"execTime\": 0,\n      \"imageId\": \"string\",\n      \"instanceType\": \"string\",\n      \"lastupdateOn\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"tasks\": [\n        {\n          \"currWorkItemIdx\": 0,\n          \"endTime\": 0,\n          \"name\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"taskSeqNo\": 0,\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"string\",\n      \"type\": \"string\",\n      \"useState\": \"string\",\n      \"version\": 0\n    },\n    \"workflowParameters\": {\n      \"configList\": [\n        {\n          \"configId\": \"string\",\n          \"configParameters\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ]\n        }\n      ],\n      \"licenseLevel\": \"string\",\n      \"licenseType\": \"string\",\n      \"topOfStackSerialNumber\": \"string\"\n    }\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/import",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device",
										"import"
									]
								},
								"description": "Add devices to PnP in bulk\n\n###### Request Model\n- root: (array[map], optional)\n  - _id: (string, optional)\n  - deviceInfo: (map, required)\n    - aaaCredentials: (map, optional)\n      - password: (string, optional)\n      - username: (string, optional)\n    - addedOn: (integer, optional)\n    - addnMacAddrs: (array[string], optional)\n    - agentType: (enum[\"POSIX\",\"IOS\"], optional)\n    - authStatus: (string, optional)\n    - authenticatedSudiSerialNo: (string, optional)\n    - capabilitiesSupported: (array[string], optional)\n    - cmState: (enum[\"NotContacted\",\"Contacted\",\"Disconnected\",\"SecuringConnection\",\"SecuredConnection\",\"Authenticated\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\"], optional)\n    - description: (string, optional)\n    - deviceSudiSerialNos: (array[string], optional)\n    - deviceType: (string, optional)\n    - featuresSupported: (array[string], optional)\n    - fileSystemList: (array[map], optional)\n      - freespace: (integer, optional)\n      - name: (string, optional)\n      - readable: (boolean, optional)\n      - size: (integer, optional)\n      - type: (string, optional)\n      - writeable: (boolean, optional)\n    - firstContact: (integer, optional)\n    - hostname: (string, optional)\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional)\n      - value: (string, optional)\n    - imageFile: (string, optional)\n    - imageVersion: (string, optional)\n    - ipInterfaces: (array[map], optional)\n      - ipv4Address: (any, optional)\n      - ipv6AddressList: (array[any], optional)\n      - macAddress: (string, optional)\n      - name: (string, optional)\n      - status: (string, optional)\n    - lastContact: (integer, optional)\n    - lastSyncTime: (integer, optional)\n    - lastUpdateOn: (integer, optional)\n    - location: (map, optional)\n      - address: (string, optional)\n      - altitude: (string, optional)\n      - latitude: (string, optional)\n      - longitude: (string, optional)\n      - siteId: (string, optional)\n    - macAddress: (string, optional)\n    - mode: (string, optional)\n    - name: (string, optional)\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional)\n      - localMacAddress: (string, optional)\n      - localShortInterfaceName: (string, optional)\n      - remoteDeviceName: (string, optional)\n      - remoteInterfaceName: (string, optional)\n      - remoteMacAddress: (string, optional)\n      - remotePlatform: (string, optional)\n      - remoteShortInterfaceName: (string, optional)\n      - remoteVersion: (string, optional)\n    - onbState: (enum[\"NotContacted\",\"Connecting\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\",\"Initializing\",\"Initialized\",\"ErrorInitializing\",\"SudiAuthorizing\",\"ErrorSudiAuthorizing\",\"ExecutingWorkflow\",\"ExecutedWorkflow\",\"ErrorExecutingWorkflow\",\"ExecutingReset\",\"ErrorExecutingReset\",\"Provisioned\"], optional)\n    - pid: (string, optional)\n    - pnpProfileList: (array[map], optional)\n      - createdBy: (string, optional)\n      - discoveryCreated: (boolean, optional)\n      - primaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n      - profileName: (string, optional)\n      - secondaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n    - populateInventory: (boolean, optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional)\n      - cliOutput: (string, optional)\n    - projectId: (string, optional)\n    - projectName: (string, optional)\n    - reloadRequested: (boolean, optional)\n    - serialNumber: (string, required)\n    - smartAccountId: (string, optional)\n    - source: (string, optional)\n    - stack: (boolean, optional)\n    - stackInfo: (map, optional)\n      - isFullRing: (boolean, optional)\n      - stackMemberList: (array[map], optional)\n        - hardwareVersion: (string, optional)\n        - licenseLevel: (string, optional)\n        - licenseType: (string, optional)\n        - macAddress: (string, optional)\n        - pid: (string, optional)\n        - priority: (integer, optional)\n        - role: (string, optional)\n        - serialNumber: (string, optional)\n        - softwareVersion: (string, optional)\n        - stackNumber: (integer, optional)\n        - state: (string, optional)\n        - sudiSerialNumber: (string, optional)\n      - stackRingProtocol: (string, optional)\n      - supportsStackWorkflows: (boolean, optional)\n      - totalMemberCount: (integer, optional)\n      - validLicenseLevels: (array[string], optional)\n    - state: (enum[\"Unclaimed\",\"Planned\",\"Onboarding\",\"Provisioned\",\"Error\",\"Deleted\"], optional)\n    - sudiRequired: (boolean, optional)\n    - tags: (any, optional)\n    - userSudiSerialNos: (array[string], optional)\n    - virtualAccountId: (string, optional)\n    - workflowId: (string, optional)\n    - workflowName: (string, optional)\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional)\n    - errorFlag: (boolean, optional)\n    - historyTaskInfo: (map, optional)\n      - addnDetails: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n      - name: (string, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - timestamp: (integer, optional)\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n  - workflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - workflowParameters: (map, optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - successList: (array[map], optional)\n    - _id: (string, optional)  Id\n    - deviceInfo: (map, optional)\n      - source: (string, optional) Source\n      - serialNumber: (string, optional) Serial Number\n      - stack: (boolean, optional) Stack\n      - mode: (string, optional) Mode\n      - state: (string, optional) State\n      - location: (map, optional)\n        - siteId: (string, optional) Site Id\n        - address: (string, optional) Address\n        - latitude: (string, optional) Latitude\n        - longitude: (string, optional) Longitude\n        - altitude: (string, optional) Altitude\n      - description: (string, optional) Description\n      - onbState: (string, optional) Onb State\n      - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n      - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n      - capabilitiesSupported: (array[string], optional)\n      - featuresSupported: (array[string], optional)\n      - cmState: (string, optional) Cm State\n      - firstContact: (number, optional) First Contact\n      - lastContact: (number, optional) Last Contact\n      - macAddress: (string, optional) Mac Address\n      - pid: (string, optional) Pid\n      - deviceSudiSerialNos: (array[string], optional)\n      - lastUpdateOn: (number, optional) Last Update On\n      - workflowId: (string, optional) Workflow Id\n      - workflowName: (string, optional) Workflow Name\n      - projectId: (string, optional) Project Id\n      - projectName: (string, optional) Project Name\n      - deviceType: (string, optional) Device Type\n      - agentType: (string, optional) Agent Type\n      - imageVersion: (string, optional) Image Version\n      - fileSystemList: (array[map], optional)\n        - type: (string, optional) Type\n        - writeable: (boolean, optional) Writeable\n        - freespace: (number, optional) Freespace\n        - name: (string, optional) Name\n        - readable: (boolean, optional) Readable\n        - size: (number, optional) Size\n      - pnpProfileList: (array[map], optional)\n        - profileName: (string, optional) Profile Name\n        - discoveryCreated: (boolean, optional) Discovery Created\n        - createdBy: (string, optional) Created By\n        - primaryEndpoint: (map, optional)\n          - port: (number, optional) Port\n          - protocol: (string, optional) Protocol\n          - ipv4Address: (map, optional)\n          - ipv6Address: (map, optional)\n          - fqdn: (string, optional) Fqdn\n          - certificate: (string, optional) Certificate\n        - secondaryEndpoint: (map, optional)\n          - port: (number, optional) Port\n          - protocol: (string, optional) Protocol\n          - ipv4Address: (map, optional)\n          - ipv6Address: (map, optional)\n          - fqdn: (string, optional) Fqdn\n          - certificate: (string, optional) Certificate\n      - imageFile: (string, optional) Image File\n      - httpHeaders: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - neighborLinks: (array[map], optional)\n        - localInterfaceName: (string, optional) Local Interface Name\n        - localShortInterfaceName: (string, optional) Local Short Interface Name\n        - localMacAddress: (string, optional) Local Mac Address\n        - remoteInterfaceName: (string, optional) Remote Interface Name\n        - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n        - remoteMacAddress: (string, optional) Remote Mac Address\n        - remoteDeviceName: (string, optional) Remote Device Name\n        - remotePlatform: (string, optional) Remote Platform\n        - remoteVersion: (string, optional) Remote Version\n      - lastSyncTime: (number, optional) Last Sync Time\n      - ipInterfaces: (array[map], optional)\n        - status: (string, optional) Status\n        - macAddress: (string, optional) Mac Address\n        - ipv4Address: (map, optional)\n        - ipv6AddressList: (array[map], optional)\n        - name: (string, optional) Name\n      - hostname: (string, optional) Hostname\n      - authStatus: (string, optional) Auth Status\n      - stackInfo: (map, optional)\n        - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n        - isFullRing: (boolean, optional) Is Full Ring\n        - stackMemberList: (array[map], optional)\n          - serialNumber: (string, optional) Serial Number\n          - state: (string, optional) State\n          - role: (string, optional) Role\n          - macAddress: (string, optional) Mac Address\n          - pid: (string, optional) Pid\n          - licenseLevel: (string, optional) License Level\n          - licenseType: (string, optional) License Type\n          - sudiSerialNumber: (string, optional) Sudi Serial Number\n          - hardwareVersion: (string, optional) Hardware Version\n          - stackNumber: (number, optional) Stack Number\n          - softwareVersion: (string, optional) Software Version\n          - priority: (number, optional) Priority\n        - stackRingProtocol: (string, optional) Stack Ring Protocol\n        - validLicenseLevels: (array[string], optional)\n        - totalMemberCount: (number, optional) Total Member Count\n      - reloadRequested: (boolean, optional) Reload Requested\n      - addedOn: (number, optional) Added On\n      - siteId: (string, optional) Site Id\n      - aaaCredentials: (map, optional)\n        - password: (string, optional) Password\n        - username: (string, optional) Username\n      - userMicNumbers: (array[string], optional)\n      - userSudiSerialNos: (array[string], optional)\n      - addnMacAddrs: (array[string], optional)\n      - preWorkflowCliOuputs: (array[map], optional)\n        - cli: (string, optional) Cli\n        - cliOutput: (string, optional) Cli Output\n      - tags: (map, optional)\n      - sudiRequired: (boolean, optional) Sudi Required\n      - smartAccountId: (string, optional) Smart Account Id\n      - virtualAccountId: (string, optional) Virtual Account Id\n      - populateInventory: (boolean, optional) Populate Inventory\n      - siteName: (string, optional) Site Name\n      - name: (string, optional) Name\n    - systemResetWorkflow: (map, optional)\n      - _id: (string, optional)  Id\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - description: (string, optional) Description\n      - lastupdateOn: (number, optional) Lastupdate On\n      - imageId: (string, optional) Image Id\n      - currTaskIdx: (number, optional) Curr Task Idx\n      - addedOn: (number, optional) Added On\n      - tasks: (array[map], optional)\n        - state: (string, optional) State\n        - type: (string, optional) Type\n        - currWorkItemIdx: (number, optional) Curr Work Item Idx\n        - taskSeqNo: (number, optional) Task Seq No\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - workItemList: (array[map], optional)\n          - state: (string, optional) State\n          - command: (string, optional) Command\n          - outputStr: (string, optional) Output Str\n          - endTime: (number, optional) End Time\n          - startTime: (number, optional) Start Time\n          - timeTaken: (number, optional) Time Taken\n        - timeTaken: (number, optional) Time Taken\n        - name: (string, optional) Name\n      - addToInventory: (boolean, optional) Add To Inventory\n      - instanceType: (string, optional) Instance Type\n      - endTime: (number, optional) End Time\n      - execTime: (number, optional) Exec Time\n      - startTime: (number, optional) Start Time\n      - useState: (string, optional) Use State\n      - configId: (string, optional) Config Id\n      - name: (string, optional) Name\n      - version: (number, optional) Version\n      - tenantId: (string, optional) Tenant Id\n    - systemWorkflow: (map, optional)\n      - _id: (string, optional)  Id\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - description: (string, optional) Description\n      - lastupdateOn: (number, optional) Lastupdate On\n      - imageId: (string, optional) Image Id\n      - currTaskIdx: (number, optional) Curr Task Idx\n      - addedOn: (number, optional) Added On\n      - tasks: (array[map], optional)\n        - state: (string, optional) State\n        - type: (string, optional) Type\n        - currWorkItemIdx: (number, optional) Curr Work Item Idx\n        - taskSeqNo: (number, optional) Task Seq No\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - workItemList: (array[map], optional)\n          - state: (string, optional) State\n          - command: (string, optional) Command\n          - outputStr: (string, optional) Output Str\n          - endTime: (number, optional) End Time\n          - startTime: (number, optional) Start Time\n          - timeTaken: (number, optional) Time Taken\n        - timeTaken: (number, optional) Time Taken\n        - name: (string, optional) Name\n      - addToInventory: (boolean, optional) Add To Inventory\n      - instanceType: (string, optional) Instance Type\n      - endTime: (number, optional) End Time\n      - execTime: (number, optional) Exec Time\n      - startTime: (number, optional) Start Time\n      - useState: (string, optional) Use State\n      - configId: (string, optional) Config Id\n      - name: (string, optional) Name\n      - version: (number, optional) Version\n      - tenantId: (string, optional) Tenant Id\n    - workflow: (map, optional)\n      - _id: (string, optional)  Id\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - description: (string, optional) Description\n      - lastupdateOn: (number, optional) Lastupdate On\n      - imageId: (string, optional) Image Id\n      - currTaskIdx: (number, optional) Curr Task Idx\n      - addedOn: (number, optional) Added On\n      - tasks: (array[map], optional)\n        - state: (string, optional) State\n        - type: (string, optional) Type\n        - currWorkItemIdx: (number, optional) Curr Work Item Idx\n        - taskSeqNo: (number, optional) Task Seq No\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - workItemList: (array[map], optional)\n          - state: (string, optional) State\n          - command: (string, optional) Command\n          - outputStr: (string, optional) Output Str\n          - endTime: (number, optional) End Time\n          - startTime: (number, optional) Start Time\n          - timeTaken: (number, optional) Time Taken\n        - timeTaken: (number, optional) Time Taken\n        - name: (string, optional) Name\n      - addToInventory: (boolean, optional) Add To Inventory\n      - instanceType: (string, optional) Instance Type\n      - endTime: (number, optional) End Time\n      - execTime: (number, optional) Exec Time\n      - startTime: (number, optional) Start Time\n      - useState: (string, optional) Use State\n      - configId: (string, optional) Config Id\n      - name: (string, optional) Name\n      - version: (number, optional) Version\n      - tenantId: (string, optional) Tenant Id\n    - runSummaryList: (array[map], optional)\n      - details: (string, optional) Details\n      - historyTaskInfo: (map, optional)\n        - type: (string, optional) Type\n        - workItemList: (array[map], optional)\n          - state: (string, optional) State\n          - command: (string, optional) Command\n          - outputStr: (string, optional) Output Str\n          - endTime: (number, optional) End Time\n          - startTime: (number, optional) Start Time\n          - timeTaken: (number, optional) Time Taken\n        - timeTaken: (number, optional) Time Taken\n        - addnDetails: (array[map], optional)\n          - key: (string, optional) Key\n          - value: (string, optional) Value\n        - name: (string, optional) Name\n      - errorFlag: (boolean, optional) Error Flag\n      - timestamp: (number, optional) Timestamp\n    - workflowParameters: (map, optional)\n      - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n      - licenseLevel: (string, optional) License Level\n      - licenseType: (string, optional) License Type\n      - configList: (array[map], optional)\n        - configParameters: (array[map], optional)\n          - key: (string, optional) Key\n          - value: (string, optional) Value\n        - configId: (string, optional) Config Id\n    - dayZeroConfig: (map, optional)\n      - config: (string, optional) Config\n    - dayZeroConfigPreview: (map, optional)\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - failureList: (array[map], optional)\n    - index: (number, optional) Index\n    - serialNum: (string, optional) Serial Num\n    - id: (string, optional) Id\n    - msg: (string, optional) Msg"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"_id\": \"string\",\n    \"deviceInfo\": {\n      \"aaaCredentials\": {\n        \"password\": \"string\",\n        \"username\": \"string\"\n      },\n      \"addedOn\": 0,\n      \"addnMacAddrs\": [\n        \"string\"\n      ],\n      \"agentType\": \"string\",\n      \"authStatus\": \"string\",\n      \"authenticatedSudiSerialNo\": \"string\",\n      \"capabilitiesSupported\": [\n        \"string\"\n      ],\n      \"cmState\": \"string\",\n      \"description\": \"string\",\n      \"deviceSudiSerialNos\": [\n        \"string\"\n      ],\n      \"deviceType\": \"string\",\n      \"featuresSupported\": [\n        \"string\"\n      ],\n      \"fileSystemList\": [\n        {\n          \"freespace\": 0,\n          \"name\": \"string\",\n          \"readable\": false,\n          \"size\": 0,\n          \"type\": \"string\",\n          \"writeable\": false\n        }\n      ],\n      \"firstContact\": 0,\n      \"hostname\": \"string\",\n      \"httpHeaders\": [\n        {\n          \"key\": \"string\",\n          \"value\": \"string\"\n        }\n      ],\n      \"imageFile\": \"string\",\n      \"imageVersion\": \"string\",\n      \"ipInterfaces\": [\n        {\n          \"ipv4Address\": \"any\",\n          \"ipv6AddressList\": [\n            \"any\"\n          ],\n          \"macAddress\": \"string\",\n          \"name\": \"string\",\n          \"status\": \"string\"\n        }\n      ],\n      \"lastContact\": 0,\n      \"lastSyncTime\": 0,\n      \"lastUpdateOn\": 0,\n      \"location\": {\n        \"address\": \"string\",\n        \"altitude\": \"string\",\n        \"latitude\": \"string\",\n        \"longitude\": \"string\",\n        \"siteId\": \"string\"\n      },\n      \"macAddress\": \"string\",\n      \"mode\": \"string\",\n      \"name\": \"string\",\n      \"neighborLinks\": [\n        {\n          \"localInterfaceName\": \"string\",\n          \"localMacAddress\": \"string\",\n          \"localShortInterfaceName\": \"string\",\n          \"remoteDeviceName\": \"string\",\n          \"remoteInterfaceName\": \"string\",\n          \"remoteMacAddress\": \"string\",\n          \"remotePlatform\": \"string\",\n          \"remoteShortInterfaceName\": \"string\",\n          \"remoteVersion\": \"string\"\n        }\n      ],\n      \"onbState\": \"string\",\n      \"pid\": \"string\",\n      \"pnpProfileList\": [\n        {\n          \"createdBy\": \"string\",\n          \"discoveryCreated\": false,\n          \"primaryEndpoint\": {\n            \"certificate\": \"string\",\n            \"fqdn\": \"string\",\n            \"ipv4Address\": \"any\",\n            \"ipv6Address\": \"any\",\n            \"port\": 0,\n            \"protocol\": \"string\"\n          },\n          \"profileName\": \"string\",\n          \"secondaryEndpoint\": {\n            \"certificate\": \"string\",\n            \"fqdn\": \"string\",\n            \"ipv4Address\": \"any\",\n            \"ipv6Address\": \"any\",\n            \"port\": 0,\n            \"protocol\": \"string\"\n          }\n        }\n      ],\n      \"populateInventory\": false,\n      \"preWorkflowCliOuputs\": [\n        {\n          \"cli\": \"string\",\n          \"cliOutput\": \"string\"\n        }\n      ],\n      \"projectId\": \"string\",\n      \"projectName\": \"string\",\n      \"reloadRequested\": false,\n      \"serialNumber\": \"string\",\n      \"smartAccountId\": \"string\",\n      \"source\": \"string\",\n      \"stack\": false,\n      \"stackInfo\": {\n        \"isFullRing\": false,\n        \"stackMemberList\": [\n          {\n            \"hardwareVersion\": \"string\",\n            \"licenseLevel\": \"string\",\n            \"licenseType\": \"string\",\n            \"macAddress\": \"string\",\n            \"pid\": \"string\",\n            \"priority\": 0,\n            \"role\": \"string\",\n            \"serialNumber\": \"string\",\n            \"softwareVersion\": \"string\",\n            \"stackNumber\": 0,\n            \"state\": \"string\",\n            \"sudiSerialNumber\": \"string\"\n          }\n        ],\n        \"stackRingProtocol\": \"string\",\n        \"supportsStackWorkflows\": false,\n        \"totalMemberCount\": 0,\n        \"validLicenseLevels\": [\n          \"string\"\n        ]\n      },\n      \"state\": \"string\",\n      \"sudiRequired\": false,\n      \"tags\": \"any\",\n      \"userSudiSerialNos\": [\n        \"string\"\n      ],\n      \"virtualAccountId\": \"string\",\n      \"workflowId\": \"string\",\n      \"workflowName\": \"string\"\n    },\n    \"runSummaryList\": [\n      {\n        \"details\": \"string\",\n        \"errorFlag\": false,\n        \"historyTaskInfo\": {\n          \"addnDetails\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ],\n          \"name\": \"string\",\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        },\n        \"timestamp\": 0\n      }\n    ],\n    \"systemResetWorkflow\": {\n      \"_id\": \"string\",\n      \"addToInventory\": false,\n      \"addedOn\": 0,\n      \"configId\": \"string\",\n      \"currTaskIdx\": 0,\n      \"description\": \"string\",\n      \"endTime\": 0,\n      \"execTime\": 0,\n      \"imageId\": \"string\",\n      \"instanceType\": \"string\",\n      \"lastupdateOn\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"tasks\": [\n        {\n          \"currWorkItemIdx\": 0,\n          \"endTime\": 0,\n          \"name\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"taskSeqNo\": 0,\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"string\",\n      \"type\": \"string\",\n      \"useState\": \"string\",\n      \"version\": 0\n    },\n    \"systemWorkflow\": {\n      \"_id\": \"string\",\n      \"addToInventory\": false,\n      \"addedOn\": 0,\n      \"configId\": \"string\",\n      \"currTaskIdx\": 0,\n      \"description\": \"string\",\n      \"endTime\": 0,\n      \"execTime\": 0,\n      \"imageId\": \"string\",\n      \"instanceType\": \"string\",\n      \"lastupdateOn\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"tasks\": [\n        {\n          \"currWorkItemIdx\": 0,\n          \"endTime\": 0,\n          \"name\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"taskSeqNo\": 0,\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"string\",\n      \"type\": \"string\",\n      \"useState\": \"string\",\n      \"version\": 0\n    },\n    \"tenantId\": \"string\",\n    \"version\": 0,\n    \"workflow\": {\n      \"_id\": \"string\",\n      \"addToInventory\": false,\n      \"addedOn\": 0,\n      \"configId\": \"string\",\n      \"currTaskIdx\": 0,\n      \"description\": \"string\",\n      \"endTime\": 0,\n      \"execTime\": 0,\n      \"imageId\": \"string\",\n      \"instanceType\": \"string\",\n      \"lastupdateOn\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"tasks\": [\n        {\n          \"currWorkItemIdx\": 0,\n          \"endTime\": 0,\n          \"name\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"taskSeqNo\": 0,\n          \"timeTaken\": 0,\n          \"type\": \"string\",\n          \"workItemList\": [\n            {\n              \"command\": \"string\",\n              \"endTime\": 0,\n              \"outputStr\": \"string\",\n              \"startTime\": 0,\n              \"state\": \"string\",\n              \"timeTaken\": 0\n            }\n          ]\n        }\n      ],\n      \"tenantId\": \"string\",\n      \"type\": \"string\",\n      \"useState\": \"string\",\n      \"version\": 0\n    },\n    \"workflowParameters\": {\n      \"configList\": [\n        {\n          \"configId\": \"string\",\n          \"configParameters\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ]\n        }\n      ],\n      \"licenseLevel\": \"string\",\n      \"licenseType\": \"string\",\n      \"topOfStackSerialNumber\": \"string\"\n    }\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/import",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device",
												"import"
											]
										},
										"description": "Add devices to PnP in bulk\n\n###### Request Model\n- root: (array[map], optional)\n  - _id: (string, optional)\n  - deviceInfo: (map, required)\n    - aaaCredentials: (map, optional)\n      - password: (string, optional)\n      - username: (string, optional)\n    - addedOn: (integer, optional)\n    - addnMacAddrs: (array[string], optional)\n    - agentType: (enum[\"POSIX\",\"IOS\"], optional)\n    - authStatus: (string, optional)\n    - authenticatedSudiSerialNo: (string, optional)\n    - capabilitiesSupported: (array[string], optional)\n    - cmState: (enum[\"NotContacted\",\"Contacted\",\"Disconnected\",\"SecuringConnection\",\"SecuredConnection\",\"Authenticated\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\"], optional)\n    - description: (string, optional)\n    - deviceSudiSerialNos: (array[string], optional)\n    - deviceType: (string, optional)\n    - featuresSupported: (array[string], optional)\n    - fileSystemList: (array[map], optional)\n      - freespace: (integer, optional)\n      - name: (string, optional)\n      - readable: (boolean, optional)\n      - size: (integer, optional)\n      - type: (string, optional)\n      - writeable: (boolean, optional)\n    - firstContact: (integer, optional)\n    - hostname: (string, optional)\n    - httpHeaders: (array[map], optional)\n      - key: (string, optional)\n      - value: (string, optional)\n    - imageFile: (string, optional)\n    - imageVersion: (string, optional)\n    - ipInterfaces: (array[map], optional)\n      - ipv4Address: (any, optional)\n      - ipv6AddressList: (array[any], optional)\n      - macAddress: (string, optional)\n      - name: (string, optional)\n      - status: (string, optional)\n    - lastContact: (integer, optional)\n    - lastSyncTime: (integer, optional)\n    - lastUpdateOn: (integer, optional)\n    - location: (map, optional)\n      - address: (string, optional)\n      - altitude: (string, optional)\n      - latitude: (string, optional)\n      - longitude: (string, optional)\n      - siteId: (string, optional)\n    - macAddress: (string, optional)\n    - mode: (string, optional)\n    - name: (string, optional)\n    - neighborLinks: (array[map], optional)\n      - localInterfaceName: (string, optional)\n      - localMacAddress: (string, optional)\n      - localShortInterfaceName: (string, optional)\n      - remoteDeviceName: (string, optional)\n      - remoteInterfaceName: (string, optional)\n      - remoteMacAddress: (string, optional)\n      - remotePlatform: (string, optional)\n      - remoteShortInterfaceName: (string, optional)\n      - remoteVersion: (string, optional)\n    - onbState: (enum[\"NotContacted\",\"Connecting\",\"ErrorSecuringConnection\",\"ErrorAuthenticating\",\"Initializing\",\"Initialized\",\"ErrorInitializing\",\"SudiAuthorizing\",\"ErrorSudiAuthorizing\",\"ExecutingWorkflow\",\"ExecutedWorkflow\",\"ErrorExecutingWorkflow\",\"ExecutingReset\",\"ErrorExecutingReset\",\"Provisioned\"], optional)\n    - pid: (string, optional)\n    - pnpProfileList: (array[map], optional)\n      - createdBy: (string, optional)\n      - discoveryCreated: (boolean, optional)\n      - primaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n      - profileName: (string, optional)\n      - secondaryEndpoint: (map, optional)\n        - certificate: (string, optional)\n        - fqdn: (string, optional)\n        - ipv4Address: (any, optional)\n        - ipv6Address: (any, optional)\n        - port: (integer, optional)\n        - protocol: (string, optional)\n    - populateInventory: (boolean, optional)\n    - preWorkflowCliOuputs: (array[map], optional)\n      - cli: (string, optional)\n      - cliOutput: (string, optional)\n    - projectId: (string, optional)\n    - projectName: (string, optional)\n    - reloadRequested: (boolean, optional)\n    - serialNumber: (string, required)\n    - smartAccountId: (string, optional)\n    - source: (string, optional)\n    - stack: (boolean, optional)\n    - stackInfo: (map, optional)\n      - isFullRing: (boolean, optional)\n      - stackMemberList: (array[map], optional)\n        - hardwareVersion: (string, optional)\n        - licenseLevel: (string, optional)\n        - licenseType: (string, optional)\n        - macAddress: (string, optional)\n        - pid: (string, optional)\n        - priority: (integer, optional)\n        - role: (string, optional)\n        - serialNumber: (string, optional)\n        - softwareVersion: (string, optional)\n        - stackNumber: (integer, optional)\n        - state: (string, optional)\n        - sudiSerialNumber: (string, optional)\n      - stackRingProtocol: (string, optional)\n      - supportsStackWorkflows: (boolean, optional)\n      - totalMemberCount: (integer, optional)\n      - validLicenseLevels: (array[string], optional)\n    - state: (enum[\"Unclaimed\",\"Planned\",\"Onboarding\",\"Provisioned\",\"Error\",\"Deleted\"], optional)\n    - sudiRequired: (boolean, optional)\n    - tags: (any, optional)\n    - userSudiSerialNos: (array[string], optional)\n    - virtualAccountId: (string, optional)\n    - workflowId: (string, optional)\n    - workflowName: (string, optional)\n  - runSummaryList: (array[map], optional)\n    - details: (string, optional)\n    - errorFlag: (boolean, optional)\n    - historyTaskInfo: (map, optional)\n      - addnDetails: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n      - name: (string, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - timestamp: (integer, optional)\n  - systemResetWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - systemWorkflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n  - workflow: (map, optional)\n    - _id: (string, optional)\n    - addToInventory: (boolean, optional)\n    - addedOn: (integer, optional)\n    - configId: (string, optional)\n    - currTaskIdx: (integer, optional)\n    - description: (string, optional)\n    - endTime: (integer, optional)\n    - execTime: (integer, optional)\n    - imageId: (string, optional)\n    - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n    - lastupdateOn: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - tasks: (array[map], optional)\n      - currWorkItemIdx: (integer, optional)\n      - endTime: (integer, optional)\n      - name: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - taskSeqNo: (integer, optional)\n      - timeTaken: (integer, optional)\n      - type: (string, optional)\n      - workItemList: (array[map], optional)\n        - command: (string, optional)\n        - endTime: (integer, optional)\n        - outputStr: (string, optional)\n        - startTime: (integer, optional)\n        - state: (string, optional)\n        - timeTaken: (integer, optional)\n    - tenantId: (string, optional)\n    - type: (string, optional)\n    - useState: (string, optional)\n    - version: (integer, optional)\n  - workflowParameters: (map, optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - successList: (array[map], optional)\n    - _id: (string, optional)  Id\n    - deviceInfo: (map, optional)\n      - source: (string, optional) Source\n      - serialNumber: (string, optional) Serial Number\n      - stack: (boolean, optional) Stack\n      - mode: (string, optional) Mode\n      - state: (string, optional) State\n      - location: (map, optional)\n        - siteId: (string, optional) Site Id\n        - address: (string, optional) Address\n        - latitude: (string, optional) Latitude\n        - longitude: (string, optional) Longitude\n        - altitude: (string, optional) Altitude\n      - description: (string, optional) Description\n      - onbState: (string, optional) Onb State\n      - authenticatedMicNumber: (string, optional) Authenticated Mic Number\n      - authenticatedSudiSerialNo: (string, optional) Authenticated Sudi Serial No\n      - capabilitiesSupported: (array[string], optional)\n      - featuresSupported: (array[string], optional)\n      - cmState: (string, optional) Cm State\n      - firstContact: (number, optional) First Contact\n      - lastContact: (number, optional) Last Contact\n      - macAddress: (string, optional) Mac Address\n      - pid: (string, optional) Pid\n      - deviceSudiSerialNos: (array[string], optional)\n      - lastUpdateOn: (number, optional) Last Update On\n      - workflowId: (string, optional) Workflow Id\n      - workflowName: (string, optional) Workflow Name\n      - projectId: (string, optional) Project Id\n      - projectName: (string, optional) Project Name\n      - deviceType: (string, optional) Device Type\n      - agentType: (string, optional) Agent Type\n      - imageVersion: (string, optional) Image Version\n      - fileSystemList: (array[map], optional)\n        - type: (string, optional) Type\n        - writeable: (boolean, optional) Writeable\n        - freespace: (number, optional) Freespace\n        - name: (string, optional) Name\n        - readable: (boolean, optional) Readable\n        - size: (number, optional) Size\n      - pnpProfileList: (array[map], optional)\n        - profileName: (string, optional) Profile Name\n        - discoveryCreated: (boolean, optional) Discovery Created\n        - createdBy: (string, optional) Created By\n        - primaryEndpoint: (map, optional)\n          - port: (number, optional) Port\n          - protocol: (string, optional) Protocol\n          - ipv4Address: (map, optional)\n          - ipv6Address: (map, optional)\n          - fqdn: (string, optional) Fqdn\n          - certificate: (string, optional) Certificate\n        - secondaryEndpoint: (map, optional)\n          - port: (number, optional) Port\n          - protocol: (string, optional) Protocol\n          - ipv4Address: (map, optional)\n          - ipv6Address: (map, optional)\n          - fqdn: (string, optional) Fqdn\n          - certificate: (string, optional) Certificate\n      - imageFile: (string, optional) Image File\n      - httpHeaders: (array[map], optional)\n        - key: (string, optional) Key\n        - value: (string, optional) Value\n      - neighborLinks: (array[map], optional)\n        - localInterfaceName: (string, optional) Local Interface Name\n        - localShortInterfaceName: (string, optional) Local Short Interface Name\n        - localMacAddress: (string, optional) Local Mac Address\n        - remoteInterfaceName: (string, optional) Remote Interface Name\n        - remoteShortInterfaceName: (string, optional) Remote Short Interface Name\n        - remoteMacAddress: (string, optional) Remote Mac Address\n        - remoteDeviceName: (string, optional) Remote Device Name\n        - remotePlatform: (string, optional) Remote Platform\n        - remoteVersion: (string, optional) Remote Version\n      - lastSyncTime: (number, optional) Last Sync Time\n      - ipInterfaces: (array[map], optional)\n        - status: (string, optional) Status\n        - macAddress: (string, optional) Mac Address\n        - ipv4Address: (map, optional)\n        - ipv6AddressList: (array[map], optional)\n        - name: (string, optional) Name\n      - hostname: (string, optional) Hostname\n      - authStatus: (string, optional) Auth Status\n      - stackInfo: (map, optional)\n        - supportsStackWorkflows: (boolean, optional) Supports Stack Workflows\n        - isFullRing: (boolean, optional) Is Full Ring\n        - stackMemberList: (array[map], optional)\n          - serialNumber: (string, optional) Serial Number\n          - state: (string, optional) State\n          - role: (string, optional) Role\n          - macAddress: (string, optional) Mac Address\n          - pid: (string, optional) Pid\n          - licenseLevel: (string, optional) License Level\n          - licenseType: (string, optional) License Type\n          - sudiSerialNumber: (string, optional) Sudi Serial Number\n          - hardwareVersion: (string, optional) Hardware Version\n          - stackNumber: (number, optional) Stack Number\n          - softwareVersion: (string, optional) Software Version\n          - priority: (number, optional) Priority\n        - stackRingProtocol: (string, optional) Stack Ring Protocol\n        - validLicenseLevels: (array[string], optional)\n        - totalMemberCount: (number, optional) Total Member Count\n      - reloadRequested: (boolean, optional) Reload Requested\n      - addedOn: (number, optional) Added On\n      - siteId: (string, optional) Site Id\n      - aaaCredentials: (map, optional)\n        - password: (string, optional) Password\n        - username: (string, optional) Username\n      - userMicNumbers: (array[string], optional)\n      - userSudiSerialNos: (array[string], optional)\n      - addnMacAddrs: (array[string], optional)\n      - preWorkflowCliOuputs: (array[map], optional)\n        - cli: (string, optional) Cli\n        - cliOutput: (string, optional) Cli Output\n      - tags: (map, optional)\n      - sudiRequired: (boolean, optional) Sudi Required\n      - smartAccountId: (string, optional) Smart Account Id\n      - virtualAccountId: (string, optional) Virtual Account Id\n      - populateInventory: (boolean, optional) Populate Inventory\n      - siteName: (string, optional) Site Name\n      - name: (string, optional) Name\n    - systemResetWorkflow: (map, optional)\n      - _id: (string, optional)  Id\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - description: (string, optional) Description\n      - lastupdateOn: (number, optional) Lastupdate On\n      - imageId: (string, optional) Image Id\n      - currTaskIdx: (number, optional) Curr Task Idx\n      - addedOn: (number, optional) Added On\n      - tasks: (array[map], optional)\n        - state: (string, optional) State\n        - type: (string, optional) Type\n        - currWorkItemIdx: (number, optional) Curr Work Item Idx\n        - taskSeqNo: (number, optional) Task Seq No\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - workItemList: (array[map], optional)\n          - state: (string, optional) State\n          - command: (string, optional) Command\n          - outputStr: (string, optional) Output Str\n          - endTime: (number, optional) End Time\n          - startTime: (number, optional) Start Time\n          - timeTaken: (number, optional) Time Taken\n        - timeTaken: (number, optional) Time Taken\n        - name: (string, optional) Name\n      - addToInventory: (boolean, optional) Add To Inventory\n      - instanceType: (string, optional) Instance Type\n      - endTime: (number, optional) End Time\n      - execTime: (number, optional) Exec Time\n      - startTime: (number, optional) Start Time\n      - useState: (string, optional) Use State\n      - configId: (string, optional) Config Id\n      - name: (string, optional) Name\n      - version: (number, optional) Version\n      - tenantId: (string, optional) Tenant Id\n    - systemWorkflow: (map, optional)\n      - _id: (string, optional)  Id\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - description: (string, optional) Description\n      - lastupdateOn: (number, optional) Lastupdate On\n      - imageId: (string, optional) Image Id\n      - currTaskIdx: (number, optional) Curr Task Idx\n      - addedOn: (number, optional) Added On\n      - tasks: (array[map], optional)\n        - state: (string, optional) State\n        - type: (string, optional) Type\n        - currWorkItemIdx: (number, optional) Curr Work Item Idx\n        - taskSeqNo: (number, optional) Task Seq No\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - workItemList: (array[map], optional)\n          - state: (string, optional) State\n          - command: (string, optional) Command\n          - outputStr: (string, optional) Output Str\n          - endTime: (number, optional) End Time\n          - startTime: (number, optional) Start Time\n          - timeTaken: (number, optional) Time Taken\n        - timeTaken: (number, optional) Time Taken\n        - name: (string, optional) Name\n      - addToInventory: (boolean, optional) Add To Inventory\n      - instanceType: (string, optional) Instance Type\n      - endTime: (number, optional) End Time\n      - execTime: (number, optional) Exec Time\n      - startTime: (number, optional) Start Time\n      - useState: (string, optional) Use State\n      - configId: (string, optional) Config Id\n      - name: (string, optional) Name\n      - version: (number, optional) Version\n      - tenantId: (string, optional) Tenant Id\n    - workflow: (map, optional)\n      - _id: (string, optional)  Id\n      - state: (string, optional) State\n      - type: (string, optional) Type\n      - description: (string, optional) Description\n      - lastupdateOn: (number, optional) Lastupdate On\n      - imageId: (string, optional) Image Id\n      - currTaskIdx: (number, optional) Curr Task Idx\n      - addedOn: (number, optional) Added On\n      - tasks: (array[map], optional)\n        - state: (string, optional) State\n        - type: (string, optional) Type\n        - currWorkItemIdx: (number, optional) Curr Work Item Idx\n        - taskSeqNo: (number, optional) Task Seq No\n        - endTime: (number, optional) End Time\n        - startTime: (number, optional) Start Time\n        - workItemList: (array[map], optional)\n          - state: (string, optional) State\n          - command: (string, optional) Command\n          - outputStr: (string, optional) Output Str\n          - endTime: (number, optional) End Time\n          - startTime: (number, optional) Start Time\n          - timeTaken: (number, optional) Time Taken\n        - timeTaken: (number, optional) Time Taken\n        - name: (string, optional) Name\n      - addToInventory: (boolean, optional) Add To Inventory\n      - instanceType: (string, optional) Instance Type\n      - endTime: (number, optional) End Time\n      - execTime: (number, optional) Exec Time\n      - startTime: (number, optional) Start Time\n      - useState: (string, optional) Use State\n      - configId: (string, optional) Config Id\n      - name: (string, optional) Name\n      - version: (number, optional) Version\n      - tenantId: (string, optional) Tenant Id\n    - runSummaryList: (array[map], optional)\n      - details: (string, optional) Details\n      - historyTaskInfo: (map, optional)\n        - type: (string, optional) Type\n        - workItemList: (array[map], optional)\n          - state: (string, optional) State\n          - command: (string, optional) Command\n          - outputStr: (string, optional) Output Str\n          - endTime: (number, optional) End Time\n          - startTime: (number, optional) Start Time\n          - timeTaken: (number, optional) Time Taken\n        - timeTaken: (number, optional) Time Taken\n        - addnDetails: (array[map], optional)\n          - key: (string, optional) Key\n          - value: (string, optional) Value\n        - name: (string, optional) Name\n      - errorFlag: (boolean, optional) Error Flag\n      - timestamp: (number, optional) Timestamp\n    - workflowParameters: (map, optional)\n      - topOfStackSerialNumber: (string, optional) Top Of Stack Serial Number\n      - licenseLevel: (string, optional) License Level\n      - licenseType: (string, optional) License Type\n      - configList: (array[map], optional)\n        - configParameters: (array[map], optional)\n          - key: (string, optional) Key\n          - value: (string, optional) Value\n        - configId: (string, optional) Config Id\n    - dayZeroConfig: (map, optional)\n      - config: (string, optional) Config\n    - dayZeroConfigPreview: (map, optional)\n    - version: (number, optional) Version\n    - tenantId: (string, optional) Tenant Id\n  - failureList: (array[map], optional)\n    - index: (number, optional) Index\n    - serialNum: (string, optional) Serial Num\n    - id: (string, optional) Id\n    - msg: (string, optional) Msg"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"successList\": [\n    {\n      \"_id\": \"string\",\n      \"deviceInfo\": {\n        \"source\": \"string\",\n        \"serialNumber\": \"string\",\n        \"stack\": false,\n        \"mode\": \"string\",\n        \"state\": \"string\",\n        \"location\": {\n          \"siteId\": \"string\",\n          \"address\": \"string\",\n          \"latitude\": \"string\",\n          \"longitude\": \"string\",\n          \"altitude\": \"string\"\n        },\n        \"description\": \"string\",\n        \"onbState\": \"string\",\n        \"authenticatedMicNumber\": \"string\",\n        \"authenticatedSudiSerialNo\": \"string\",\n        \"capabilitiesSupported\": [\n          \"string\"\n        ],\n        \"featuresSupported\": [\n          \"string\"\n        ],\n        \"cmState\": \"string\",\n        \"firstContact\": 0.1,\n        \"lastContact\": 0.1,\n        \"macAddress\": \"string\",\n        \"pid\": \"string\",\n        \"deviceSudiSerialNos\": [\n          \"string\"\n        ],\n        \"lastUpdateOn\": 0.1,\n        \"workflowId\": \"string\",\n        \"workflowName\": \"string\",\n        \"projectId\": \"string\",\n        \"projectName\": \"string\",\n        \"deviceType\": \"string\",\n        \"agentType\": \"string\",\n        \"imageVersion\": \"string\",\n        \"fileSystemList\": [\n          {\n            \"type\": \"string\",\n            \"writeable\": false,\n            \"freespace\": 0.1,\n            \"name\": \"string\",\n            \"readable\": false,\n            \"size\": 0.1\n          }\n        ],\n        \"pnpProfileList\": [\n          {\n            \"profileName\": \"string\",\n            \"discoveryCreated\": false,\n            \"createdBy\": \"string\",\n            \"primaryEndpoint\": {\n              \"port\": 0.1,\n              \"protocol\": \"string\",\n              \"ipv4Address\": {\n                \n              },\n              \"ipv6Address\": {\n                \n              },\n              \"fqdn\": \"string\",\n              \"certificate\": \"string\"\n            },\n            \"secondaryEndpoint\": {\n              \"port\": 0.1,\n              \"protocol\": \"string\",\n              \"ipv4Address\": {\n                \n              },\n              \"ipv6Address\": {\n                \n              },\n              \"fqdn\": \"string\",\n              \"certificate\": \"string\"\n            }\n          }\n        ],\n        \"imageFile\": \"string\",\n        \"httpHeaders\": [\n          {\n            \"key\": \"string\",\n            \"value\": \"string\"\n          }\n        ],\n        \"neighborLinks\": [\n          {\n            \"localInterfaceName\": \"string\",\n            \"localShortInterfaceName\": \"string\",\n            \"localMacAddress\": \"string\",\n            \"remoteInterfaceName\": \"string\",\n            \"remoteShortInterfaceName\": \"string\",\n            \"remoteMacAddress\": \"string\",\n            \"remoteDeviceName\": \"string\",\n            \"remotePlatform\": \"string\",\n            \"remoteVersion\": \"string\"\n          }\n        ],\n        \"lastSyncTime\": 0.1,\n        \"ipInterfaces\": [\n          {\n            \"status\": \"string\",\n            \"macAddress\": \"string\",\n            \"ipv4Address\": {\n              \n            },\n            \"ipv6AddressList\": [\n              {\n                \n              }\n            ],\n            \"name\": \"string\"\n          }\n        ],\n        \"hostname\": \"string\",\n        \"authStatus\": \"string\",\n        \"stackInfo\": {\n          \"supportsStackWorkflows\": false,\n          \"isFullRing\": false,\n          \"stackMemberList\": [\n            {\n              \"serialNumber\": \"string\",\n              \"state\": \"string\",\n              \"role\": \"string\",\n              \"macAddress\": \"string\",\n              \"pid\": \"string\",\n              \"licenseLevel\": \"string\",\n              \"licenseType\": \"string\",\n              \"sudiSerialNumber\": \"string\",\n              \"hardwareVersion\": \"string\",\n              \"stackNumber\": 0.1,\n              \"softwareVersion\": \"string\",\n              \"priority\": 0.1\n            }\n          ],\n          \"stackRingProtocol\": \"string\",\n          \"validLicenseLevels\": [\n            \"string\"\n          ],\n          \"totalMemberCount\": 0.1\n        },\n        \"reloadRequested\": false,\n        \"addedOn\": 0.1,\n        \"siteId\": \"string\",\n        \"aaaCredentials\": {\n          \"password\": \"string\",\n          \"username\": \"string\"\n        },\n        \"userMicNumbers\": [\n          \"string\"\n        ],\n        \"userSudiSerialNos\": [\n          \"string\"\n        ],\n        \"addnMacAddrs\": [\n          \"string\"\n        ],\n        \"preWorkflowCliOuputs\": [\n          {\n            \"cli\": \"string\",\n            \"cliOutput\": \"string\"\n          }\n        ],\n        \"tags\": {\n          \n        },\n        \"sudiRequired\": false,\n        \"smartAccountId\": \"string\",\n        \"virtualAccountId\": \"string\",\n        \"populateInventory\": false,\n        \"siteName\": \"string\",\n        \"name\": \"string\"\n      },\n      \"systemResetWorkflow\": {\n        \"_id\": \"string\",\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"description\": \"string\",\n        \"lastupdateOn\": 0.1,\n        \"imageId\": \"string\",\n        \"currTaskIdx\": 0.1,\n        \"addedOn\": 0.1,\n        \"tasks\": [\n          {\n            \"state\": \"string\",\n            \"type\": \"string\",\n            \"currWorkItemIdx\": 0.1,\n            \"taskSeqNo\": 0.1,\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"workItemList\": [\n              {\n                \"state\": \"string\",\n                \"command\": \"string\",\n                \"outputStr\": \"string\",\n                \"endTime\": 0.1,\n                \"startTime\": 0.1,\n                \"timeTaken\": 0.1\n              }\n            ],\n            \"timeTaken\": 0.1,\n            \"name\": \"string\"\n          }\n        ],\n        \"addToInventory\": false,\n        \"instanceType\": \"string\",\n        \"endTime\": 0.1,\n        \"execTime\": 0.1,\n        \"startTime\": 0.1,\n        \"useState\": \"string\",\n        \"configId\": \"string\",\n        \"name\": \"string\",\n        \"version\": 0.1,\n        \"tenantId\": \"string\"\n      },\n      \"systemWorkflow\": {\n        \"_id\": \"string\",\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"description\": \"string\",\n        \"lastupdateOn\": 0.1,\n        \"imageId\": \"string\",\n        \"currTaskIdx\": 0.1,\n        \"addedOn\": 0.1,\n        \"tasks\": [\n          {\n            \"state\": \"string\",\n            \"type\": \"string\",\n            \"currWorkItemIdx\": 0.1,\n            \"taskSeqNo\": 0.1,\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"workItemList\": [\n              {\n                \"state\": \"string\",\n                \"command\": \"string\",\n                \"outputStr\": \"string\",\n                \"endTime\": 0.1,\n                \"startTime\": 0.1,\n                \"timeTaken\": 0.1\n              }\n            ],\n            \"timeTaken\": 0.1,\n            \"name\": \"string\"\n          }\n        ],\n        \"addToInventory\": false,\n        \"instanceType\": \"string\",\n        \"endTime\": 0.1,\n        \"execTime\": 0.1,\n        \"startTime\": 0.1,\n        \"useState\": \"string\",\n        \"configId\": \"string\",\n        \"name\": \"string\",\n        \"version\": 0.1,\n        \"tenantId\": \"string\"\n      },\n      \"workflow\": {\n        \"_id\": \"string\",\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"description\": \"string\",\n        \"lastupdateOn\": 0.1,\n        \"imageId\": \"string\",\n        \"currTaskIdx\": 0.1,\n        \"addedOn\": 0.1,\n        \"tasks\": [\n          {\n            \"state\": \"string\",\n            \"type\": \"string\",\n            \"currWorkItemIdx\": 0.1,\n            \"taskSeqNo\": 0.1,\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"workItemList\": [\n              {\n                \"state\": \"string\",\n                \"command\": \"string\",\n                \"outputStr\": \"string\",\n                \"endTime\": 0.1,\n                \"startTime\": 0.1,\n                \"timeTaken\": 0.1\n              }\n            ],\n            \"timeTaken\": 0.1,\n            \"name\": \"string\"\n          }\n        ],\n        \"addToInventory\": false,\n        \"instanceType\": \"string\",\n        \"endTime\": 0.1,\n        \"execTime\": 0.1,\n        \"startTime\": 0.1,\n        \"useState\": \"string\",\n        \"configId\": \"string\",\n        \"name\": \"string\",\n        \"version\": 0.1,\n        \"tenantId\": \"string\"\n      },\n      \"runSummaryList\": [\n        {\n          \"details\": \"string\",\n          \"historyTaskInfo\": {\n            \"type\": \"string\",\n            \"workItemList\": [\n              {\n                \"state\": \"string\",\n                \"command\": \"string\",\n                \"outputStr\": \"string\",\n                \"endTime\": 0.1,\n                \"startTime\": 0.1,\n                \"timeTaken\": 0.1\n              }\n            ],\n            \"timeTaken\": 0.1,\n            \"addnDetails\": [\n              {\n                \"key\": \"string\",\n                \"value\": \"string\"\n              }\n            ],\n            \"name\": \"string\"\n          },\n          \"errorFlag\": false,\n          \"timestamp\": 0.1\n        }\n      ],\n      \"workflowParameters\": {\n        \"topOfStackSerialNumber\": \"string\",\n        \"licenseLevel\": \"string\",\n        \"licenseType\": \"string\",\n        \"configList\": [\n          {\n            \"configParameters\": [\n              {\n                \"key\": \"string\",\n                \"value\": \"string\"\n              }\n            ],\n            \"configId\": \"string\"\n          }\n        ]\n      },\n      \"dayZeroConfig\": {\n        \"config\": \"string\"\n      },\n      \"dayZeroConfigPreview\": {\n        \n      },\n      \"version\": 0.1,\n      \"tenantId\": \"string\"\n    }\n  ],\n  \"failureList\": [\n    {\n      \"index\": 0.1,\n      \"serialNum\": \"string\",\n      \"id\": \"string\",\n      \"msg\": \"string\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Reset Device",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceResetList\": [\n    {\n      \"configList\": [\n        {\n          \"configId\": \"string\",\n          \"configParameters\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ]\n        }\n      ],\n      \"deviceId\": \"string\",\n      \"licenseLevel\": \"string\",\n      \"licenseType\": \"string\",\n      \"topOfStackSerialNumber\": \"string\"\n    }\n  ],\n  \"projectId\": \"string\",\n  \"workflowId\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/reset",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device",
										"reset"
									]
								},
								"description": "Recovers a device from a Workflow Execution Error state\n\n###### Request Model\n- root: (map, optional)\n  - deviceResetList: (array[map], optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - deviceId: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n  - projectId: (string, optional)\n  - workflowId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - jsonArrayResponse: (array[any], optional)\n  - jsonResponse: (map, optional)\n  - message: (string, optional) Message\n  - statusCode: (number, optional) Status Code"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceResetList\": [\n    {\n      \"configList\": [\n        {\n          \"configId\": \"string\",\n          \"configParameters\": [\n            {\n              \"key\": \"string\",\n              \"value\": \"string\"\n            }\n          ]\n        }\n      ],\n      \"deviceId\": \"string\",\n      \"licenseLevel\": \"string\",\n      \"licenseType\": \"string\",\n      \"topOfStackSerialNumber\": \"string\"\n    }\n  ],\n  \"projectId\": \"string\",\n  \"workflowId\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/reset",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device",
												"reset"
											]
										},
										"description": "Recovers a device from a Workflow Execution Error state\n\n###### Request Model\n- root: (map, optional)\n  - deviceResetList: (array[map], optional)\n    - configList: (array[map], optional)\n      - configId: (string, optional)\n      - configParameters: (array[map], optional)\n        - key: (string, optional)\n        - value: (string, optional)\n    - deviceId: (string, optional)\n    - licenseLevel: (string, optional)\n    - licenseType: (string, optional)\n    - topOfStackSerialNumber: (string, optional)\n  - projectId: (string, optional)\n  - workflowId: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - jsonArrayResponse: (array[any], optional)\n  - jsonResponse: (map, optional)\n  - message: (string, optional) Message\n  - statusCode: (number, optional) Status Code"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"jsonArrayResponse\": [\n    \"any\"\n  ],\n  \"jsonResponse\": {\n    \n  },\n  \"message\": \"string\",\n  \"statusCode\": 0.1\n}"
								}
							]
						},
						{
							"name": "Get Sync Result for Virtual Account",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/sacct/:domain/vacct/:name/sync-result",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device",
										"sacct",
										":domain",
										"vacct",
										":name",
										"sync-result"
									],
									"variable": [
										{
											"key": "domain",
											"value": "",
											"description": "(string, required) Smart Account Domain"
										},
										{
											"key": "name",
											"value": "",
											"description": "(string, required) Virtual Account Name"
										}
									]
								},
								"description": "Returns the summary of devices synced from the given smart account & virtual account with PnP\n\n###### Response Model\n- root: (map, optional)\n  - virtualAccountId: (string, optional) Virtual Account Id\n  - autoSyncPeriod: (number, optional) Auto Sync Period\n  - syncResultStr: (string, optional) Sync Result Str\n  - profile: (map, optional)\n    - proxy: (boolean, optional) Proxy\n    - makeDefault: (boolean, optional) Make Default\n    - port: (number, optional) Port\n    - profileId: (string, optional) Profile Id\n    - name: (string, optional) Name\n    - addressIpV4: (string, optional) Address Ip V4\n    - cert: (string, optional) Cert\n    - addressFqdn: (string, optional) Address Fqdn\n  - ccoUser: (string, optional) Cco User\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - syncType: (string, optional) Sync Type\n      - deviceSnList: (array[string], optional)\n    - syncMsg: (string, optional) Sync Msg\n  - token: (string, optional) Token\n  - syncStartTime: (number, optional) Sync Start Time\n  - lastSync: (number, optional) Last Sync\n  - tenantId: (string, optional) Tenant Id\n  - smartAccountId: (string, optional) Smart Account Id\n  - expiry: (number, optional) Expiry\n  - syncStatus: (string, optional) Sync Status"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/sacct/:domain/vacct/:name/sync-result",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device",
												"sacct",
												":domain",
												"vacct",
												":name",
												"sync-result"
											],
											"variable": [
												{
													"key": "domain",
													"value": "",
													"description": "(string, required) Smart Account Domain"
												},
												{
													"key": "name",
													"value": "",
													"description": "(string, required) Virtual Account Name"
												}
											]
										},
										"description": "Returns the summary of devices synced from the given smart account & virtual account with PnP\n\n###### Response Model\n- root: (map, optional)\n  - virtualAccountId: (string, optional) Virtual Account Id\n  - autoSyncPeriod: (number, optional) Auto Sync Period\n  - syncResultStr: (string, optional) Sync Result Str\n  - profile: (map, optional)\n    - proxy: (boolean, optional) Proxy\n    - makeDefault: (boolean, optional) Make Default\n    - port: (number, optional) Port\n    - profileId: (string, optional) Profile Id\n    - name: (string, optional) Name\n    - addressIpV4: (string, optional) Address Ip V4\n    - cert: (string, optional) Cert\n    - addressFqdn: (string, optional) Address Fqdn\n  - ccoUser: (string, optional) Cco User\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - syncType: (string, optional) Sync Type\n      - deviceSnList: (array[string], optional)\n    - syncMsg: (string, optional) Sync Msg\n  - token: (string, optional) Token\n  - syncStartTime: (number, optional) Sync Start Time\n  - lastSync: (number, optional) Last Sync\n  - tenantId: (string, optional) Tenant Id\n  - smartAccountId: (string, optional) Smart Account Id\n  - expiry: (number, optional) Expiry\n  - syncStatus: (string, optional) Sync Status"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"virtualAccountId\": \"string\",\n  \"autoSyncPeriod\": 0.1,\n  \"syncResultStr\": \"string\",\n  \"profile\": {\n    \"proxy\": false,\n    \"makeDefault\": false,\n    \"port\": 0.1,\n    \"profileId\": \"string\",\n    \"name\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"addressFqdn\": \"string\"\n  },\n  \"ccoUser\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"syncType\": \"string\",\n        \"deviceSnList\": [\n          \"string\"\n        ]\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"token\": \"string\",\n  \"syncStartTime\": 0.1,\n  \"lastSync\": 0.1,\n  \"tenantId\": \"string\",\n  \"smartAccountId\": \"string\",\n  \"expiry\": 0.1,\n  \"syncStatus\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Un-Claim Device",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceIdList\": [\n    \"string\"\n  ]\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/unclaim",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device",
										"unclaim"
									]
								},
								"description": "Un-Claims one of more devices with specified workflow\n\n###### Request Model\n- root: (map, optional)\n  - deviceIdList: (array[string], optional)\n\n###### Response Model\n- root: (map, optional)\n  - jsonArrayResponse: (array[any], optional)\n  - jsonResponse: (map, optional)\n  - message: (string, optional) Message\n  - statusCode: (number, optional) Status Code"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceIdList\": [\n    \"string\"\n  ]\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/unclaim",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device",
												"unclaim"
											]
										},
										"description": "Un-Claims one of more devices with specified workflow\n\n###### Request Model\n- root: (map, optional)\n  - deviceIdList: (array[string], optional)\n\n###### Response Model\n- root: (map, optional)\n  - jsonArrayResponse: (array[any], optional)\n  - jsonResponse: (map, optional)\n  - message: (string, optional) Message\n  - statusCode: (number, optional) Status Code"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"jsonArrayResponse\": [\n    \"any\"\n  ],\n  \"jsonResponse\": {\n    \n  },\n  \"message\": \"string\",\n  \"statusCode\": 0.1\n}"
								}
							]
						},
						{
							"name": "Sync Virtual Account Devices",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"autoSyncPeriod\": 0,\n  \"ccoUser\": \"string\",\n  \"expiry\": 0,\n  \"lastSync\": 0,\n  \"profile\": {\n    \"addressFqdn\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"makeDefault\": false,\n    \"name\": \"string\",\n    \"port\": 0,\n    \"profileId\": \"string\",\n    \"proxy\": false\n  },\n  \"smartAccountId\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"deviceSnList\": [\n          \"string\"\n        ],\n        \"syncType\": \"string\"\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"syncResultStr\": \"string\",\n  \"syncStartTime\": 0,\n  \"syncStatus\": \"string\",\n  \"tenantId\": \"string\",\n  \"token\": \"string\",\n  \"virtualAccountId\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/vacct-sync",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-device",
										"vacct-sync"
									]
								},
								"description": "Synchronizes the device info from the given smart account & virtual account with the PnP database. The response payload returns a list of synced devices\n\n###### Request Model\n- root: (map, optional)\n  - autoSyncPeriod: (integer, optional)\n  - ccoUser: (string, optional)\n  - expiry: (integer, optional)\n  - lastSync: (integer, optional)\n  - profile: (map, required)\n    - addressFqdn: (string, required)\n    - addressIpV4: (string, required)\n    - cert: (string, optional)\n    - makeDefault: (boolean, optional)\n    - name: (string, required)\n    - port: (integer, optional)\n    - profileId: (string, optional)\n    - proxy: (boolean, optional)\n  - smartAccountId: (string, required)\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - deviceSnList: (array[string], optional)\n      - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n    - syncMsg: (string, optional)\n  - syncResultStr: (string, optional)\n  - syncStartTime: (integer, optional)\n  - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n  - tenantId: (string, optional)\n  - token: (string, optional)\n  - virtualAccountId: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - virtualAccountId: (string, optional) Virtual Account Id\n  - autoSyncPeriod: (number, optional) Auto Sync Period\n  - syncResultStr: (string, optional) Sync Result Str\n  - profile: (map, optional)\n    - proxy: (boolean, optional) Proxy\n    - makeDefault: (boolean, optional) Make Default\n    - port: (number, optional) Port\n    - profileId: (string, optional) Profile Id\n    - name: (string, optional) Name\n    - addressIpV4: (string, optional) Address Ip V4\n    - cert: (string, optional) Cert\n    - addressFqdn: (string, optional) Address Fqdn\n  - ccoUser: (string, optional) Cco User\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - syncType: (string, optional) Sync Type\n      - deviceSnList: (array[string], optional)\n    - syncMsg: (string, optional) Sync Msg\n  - token: (string, optional) Token\n  - syncStartTime: (number, optional) Sync Start Time\n  - lastSync: (number, optional) Last Sync\n  - tenantId: (string, optional) Tenant Id\n  - smartAccountId: (string, optional) Smart Account Id\n  - expiry: (number, optional) Expiry\n  - syncStatus: (string, optional) Sync Status"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autoSyncPeriod\": 0,\n  \"ccoUser\": \"string\",\n  \"expiry\": 0,\n  \"lastSync\": 0,\n  \"profile\": {\n    \"addressFqdn\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"makeDefault\": false,\n    \"name\": \"string\",\n    \"port\": 0,\n    \"profileId\": \"string\",\n    \"proxy\": false\n  },\n  \"smartAccountId\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"deviceSnList\": [\n          \"string\"\n        ],\n        \"syncType\": \"string\"\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"syncResultStr\": \"string\",\n  \"syncStartTime\": 0,\n  \"syncStatus\": \"string\",\n  \"tenantId\": \"string\",\n  \"token\": \"string\",\n  \"virtualAccountId\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-device/vacct-sync",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-device",
												"vacct-sync"
											]
										},
										"description": "Synchronizes the device info from the given smart account & virtual account with the PnP database. The response payload returns a list of synced devices\n\n###### Request Model\n- root: (map, optional)\n  - autoSyncPeriod: (integer, optional)\n  - ccoUser: (string, optional)\n  - expiry: (integer, optional)\n  - lastSync: (integer, optional)\n  - profile: (map, required)\n    - addressFqdn: (string, required)\n    - addressIpV4: (string, required)\n    - cert: (string, optional)\n    - makeDefault: (boolean, optional)\n    - name: (string, required)\n    - port: (integer, optional)\n    - profileId: (string, optional)\n    - proxy: (boolean, optional)\n  - smartAccountId: (string, required)\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - deviceSnList: (array[string], optional)\n      - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n    - syncMsg: (string, optional)\n  - syncResultStr: (string, optional)\n  - syncStartTime: (integer, optional)\n  - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n  - tenantId: (string, optional)\n  - token: (string, optional)\n  - virtualAccountId: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - virtualAccountId: (string, optional) Virtual Account Id\n  - autoSyncPeriod: (number, optional) Auto Sync Period\n  - syncResultStr: (string, optional) Sync Result Str\n  - profile: (map, optional)\n    - proxy: (boolean, optional) Proxy\n    - makeDefault: (boolean, optional) Make Default\n    - port: (number, optional) Port\n    - profileId: (string, optional) Profile Id\n    - name: (string, optional) Name\n    - addressIpV4: (string, optional) Address Ip V4\n    - cert: (string, optional) Cert\n    - addressFqdn: (string, optional) Address Fqdn\n  - ccoUser: (string, optional) Cco User\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - syncType: (string, optional) Sync Type\n      - deviceSnList: (array[string], optional)\n    - syncMsg: (string, optional) Sync Msg\n  - token: (string, optional) Token\n  - syncStartTime: (number, optional) Sync Start Time\n  - lastSync: (number, optional) Last Sync\n  - tenantId: (string, optional) Tenant Id\n  - smartAccountId: (string, optional) Smart Account Id\n  - expiry: (number, optional) Expiry\n  - syncStatus: (string, optional) Sync Status"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"virtualAccountId\": \"string\",\n  \"autoSyncPeriod\": 0.1,\n  \"syncResultStr\": \"string\",\n  \"profile\": {\n    \"proxy\": false,\n    \"makeDefault\": false,\n    \"port\": 0.1,\n    \"profileId\": \"string\",\n    \"name\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"addressFqdn\": \"string\"\n  },\n  \"ccoUser\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"syncType\": \"string\",\n        \"deviceSnList\": [\n          \"string\"\n        ]\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"token\": \"string\",\n  \"syncStartTime\": 0.1,\n  \"lastSync\": 0.1,\n  \"tenantId\": \"string\",\n  \"smartAccountId\": \"string\",\n  \"expiry\": 0.1,\n  \"syncStatus\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get PnP global settings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-settings"
									]
								},
								"description": "Returns global PnP settings of the user\n\n###### Response Model\n- root: (map, optional)\n  - savaMappingList: (array[map], optional)\n    - syncStatus: (string, optional) Sync Status\n    - syncStartTime: (number, optional) Sync Start Time\n    - syncResult: (map, optional)\n      - syncList: (array[map], optional)\n        - syncType: (string, optional) Sync Type\n        - deviceSnList: (array[string], optional)\n      - syncMsg: (string, optional) Sync Msg\n    - lastSync: (number, optional) Last Sync\n    - tenantId: (string, optional) Tenant Id\n    - profile: (map, optional)\n      - port: (number, optional) Port\n      - addressIpV4: (string, optional) Address Ip V4\n      - addressFqdn: (string, optional) Address Fqdn\n      - profileId: (string, optional) Profile Id\n      - proxy: (boolean, optional) Proxy\n      - makeDefault: (boolean, optional) Make Default\n      - cert: (string, optional) Cert\n      - name: (string, optional) Name\n    - token: (string, optional) Token\n    - expiry: (number, optional) Expiry\n    - ccoUser: (string, optional) Cco User\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - autoSyncPeriod: (number, optional) Auto Sync Period\n    - syncResultStr: (string, optional) Sync Result Str\n  - taskTimeOuts: (map, optional)\n    - imageDownloadTimeOut: (number, optional) Image Download Time Out\n    - configTimeOut: (number, optional) Config Time Out\n    - generalTimeOut: (number, optional) General Time Out\n  - tenantId: (string, optional) Tenant Id\n  - aaaCredentials: (map, optional)\n    - password: (string, optional) Password\n    - username: (string, optional) Username\n  - defaultProfile: (map, optional)\n    - fqdnAddresses: (array[string], optional)\n    - proxy: (boolean, optional) Proxy\n    - cert: (string, optional) Cert\n    - ipAddresses: (array[string], optional)\n    - port: (number, optional) Port\n  - acceptEula: (boolean, optional) Accept Eula\n  - id: (string, optional) Id\n  - _id: (string, optional)  Id\n  - version: (number, optional) Version"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-settings"
											]
										},
										"description": "Returns global PnP settings of the user\n\n###### Response Model\n- root: (map, optional)\n  - savaMappingList: (array[map], optional)\n    - syncStatus: (string, optional) Sync Status\n    - syncStartTime: (number, optional) Sync Start Time\n    - syncResult: (map, optional)\n      - syncList: (array[map], optional)\n        - syncType: (string, optional) Sync Type\n        - deviceSnList: (array[string], optional)\n      - syncMsg: (string, optional) Sync Msg\n    - lastSync: (number, optional) Last Sync\n    - tenantId: (string, optional) Tenant Id\n    - profile: (map, optional)\n      - port: (number, optional) Port\n      - addressIpV4: (string, optional) Address Ip V4\n      - addressFqdn: (string, optional) Address Fqdn\n      - profileId: (string, optional) Profile Id\n      - proxy: (boolean, optional) Proxy\n      - makeDefault: (boolean, optional) Make Default\n      - cert: (string, optional) Cert\n      - name: (string, optional) Name\n    - token: (string, optional) Token\n    - expiry: (number, optional) Expiry\n    - ccoUser: (string, optional) Cco User\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - autoSyncPeriod: (number, optional) Auto Sync Period\n    - syncResultStr: (string, optional) Sync Result Str\n  - taskTimeOuts: (map, optional)\n    - imageDownloadTimeOut: (number, optional) Image Download Time Out\n    - configTimeOut: (number, optional) Config Time Out\n    - generalTimeOut: (number, optional) General Time Out\n  - tenantId: (string, optional) Tenant Id\n  - aaaCredentials: (map, optional)\n    - password: (string, optional) Password\n    - username: (string, optional) Username\n  - defaultProfile: (map, optional)\n    - fqdnAddresses: (array[string], optional)\n    - proxy: (boolean, optional) Proxy\n    - cert: (string, optional) Cert\n    - ipAddresses: (array[string], optional)\n    - port: (number, optional) Port\n  - acceptEula: (boolean, optional) Accept Eula\n  - id: (string, optional) Id\n  - _id: (string, optional)  Id\n  - version: (number, optional) Version"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"savaMappingList\": [\n    {\n      \"syncStatus\": \"string\",\n      \"syncStartTime\": 0.1,\n      \"syncResult\": {\n        \"syncList\": [\n          {\n            \"syncType\": \"string\",\n            \"deviceSnList\": [\n              \"string\"\n            ]\n          }\n        ],\n        \"syncMsg\": \"string\"\n      },\n      \"lastSync\": 0.1,\n      \"tenantId\": \"string\",\n      \"profile\": {\n        \"port\": 0.1,\n        \"addressIpV4\": \"string\",\n        \"addressFqdn\": \"string\",\n        \"profileId\": \"string\",\n        \"proxy\": false,\n        \"makeDefault\": false,\n        \"cert\": \"string\",\n        \"name\": \"string\"\n      },\n      \"token\": \"string\",\n      \"expiry\": 0.1,\n      \"ccoUser\": \"string\",\n      \"smartAccountId\": \"string\",\n      \"virtualAccountId\": \"string\",\n      \"autoSyncPeriod\": 0.1,\n      \"syncResultStr\": \"string\"\n    }\n  ],\n  \"taskTimeOuts\": {\n    \"imageDownloadTimeOut\": 0.1,\n    \"configTimeOut\": 0.1,\n    \"generalTimeOut\": 0.1\n  },\n  \"tenantId\": \"string\",\n  \"aaaCredentials\": {\n    \"password\": \"string\",\n    \"username\": \"string\"\n  },\n  \"defaultProfile\": {\n    \"fqdnAddresses\": [\n      \"string\"\n    ],\n    \"proxy\": false,\n    \"cert\": \"string\",\n    \"ipAddresses\": [\n      \"string\"\n    ],\n    \"port\": 0.1\n  },\n  \"acceptEula\": false,\n  \"id\": \"string\",\n  \"_id\": \"string\",\n  \"version\": 0.1\n}"
								}
							]
						},
						{
							"name": "Update PnP global settings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"_id\": \"string\",\n  \"aaaCredentials\": {\n    \"password\": \"string\",\n    \"username\": \"string\"\n  },\n  \"acceptEula\": false,\n  \"defaultProfile\": {\n    \"cert\": \"string\",\n    \"fqdnAddresses\": [\n      \"string\"\n    ],\n    \"ipAddresses\": [\n      \"string\"\n    ],\n    \"port\": 0,\n    \"proxy\": false\n  },\n  \"savaMappingList\": [\n    {\n      \"autoSyncPeriod\": 0,\n      \"ccoUser\": \"string\",\n      \"expiry\": 0,\n      \"lastSync\": 0,\n      \"profile\": {\n        \"addressFqdn\": \"string\",\n        \"addressIpV4\": \"string\",\n        \"cert\": \"string\",\n        \"makeDefault\": false,\n        \"name\": \"string\",\n        \"port\": 0,\n        \"profileId\": \"string\",\n        \"proxy\": false\n      },\n      \"smartAccountId\": \"string\",\n      \"syncResult\": {\n        \"syncList\": [\n          {\n            \"deviceSnList\": [\n              \"string\"\n            ],\n            \"syncType\": \"string\"\n          }\n        ],\n        \"syncMsg\": \"string\"\n      },\n      \"syncResultStr\": \"string\",\n      \"syncStartTime\": 0,\n      \"syncStatus\": \"string\",\n      \"tenantId\": \"string\",\n      \"token\": \"string\",\n      \"virtualAccountId\": \"string\"\n    }\n  ],\n  \"taskTimeOuts\": {\n    \"configTimeOut\": 0,\n    \"generalTimeOut\": 0,\n    \"imageDownloadTimeOut\": 0\n  },\n  \"tenantId\": \"string\",\n  \"version\": 0\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-settings"
									]
								},
								"description": "Updates the user's list of global PnP settings\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - aaaCredentials: (map, optional)\n    - password: (string, optional)\n    - username: (string, optional)\n  - acceptEula: (boolean, optional)\n  - defaultProfile: (map, optional)\n    - cert: (string, optional)\n    - fqdnAddresses: (array[string], required)\n    - ipAddresses: (array[string], required)\n    - port: (integer, optional)\n    - proxy: (boolean, optional)\n  - savaMappingList: (array[map], optional)\n    - autoSyncPeriod: (integer, optional)\n    - ccoUser: (string, optional)\n    - expiry: (integer, optional)\n    - lastSync: (integer, optional)\n    - profile: (map, required)\n      - addressFqdn: (string, required)\n      - addressIpV4: (string, required)\n      - cert: (string, optional)\n      - makeDefault: (boolean, optional)\n      - name: (string, required)\n      - port: (integer, optional)\n      - profileId: (string, optional)\n      - proxy: (boolean, optional)\n    - smartAccountId: (string, required)\n    - syncResult: (map, optional)\n      - syncList: (array[map], optional)\n        - deviceSnList: (array[string], optional)\n        - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n      - syncMsg: (string, optional)\n    - syncResultStr: (string, optional)\n    - syncStartTime: (integer, optional)\n    - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n    - tenantId: (string, optional)\n    - token: (string, optional)\n    - virtualAccountId: (string, required)\n  - taskTimeOuts: (map, optional)\n    - configTimeOut: (integer, optional)\n    - generalTimeOut: (integer, optional)\n    - imageDownloadTimeOut: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n\n###### Response Model\n- root: (map, optional)\n  - savaMappingList: (array[map], optional)\n    - syncStatus: (string, optional) Sync Status\n    - syncStartTime: (number, optional) Sync Start Time\n    - syncResult: (map, optional)\n      - syncList: (array[map], optional)\n        - syncType: (string, optional) Sync Type\n        - deviceSnList: (array[string], optional)\n      - syncMsg: (string, optional) Sync Msg\n    - lastSync: (number, optional) Last Sync\n    - tenantId: (string, optional) Tenant Id\n    - profile: (map, optional)\n      - port: (number, optional) Port\n      - addressIpV4: (string, optional) Address Ip V4\n      - addressFqdn: (string, optional) Address Fqdn\n      - profileId: (string, optional) Profile Id\n      - proxy: (boolean, optional) Proxy\n      - makeDefault: (boolean, optional) Make Default\n      - cert: (string, optional) Cert\n      - name: (string, optional) Name\n    - token: (string, optional) Token\n    - expiry: (number, optional) Expiry\n    - ccoUser: (string, optional) Cco User\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - autoSyncPeriod: (number, optional) Auto Sync Period\n    - syncResultStr: (string, optional) Sync Result Str\n  - taskTimeOuts: (map, optional)\n    - imageDownloadTimeOut: (number, optional) Image Download Time Out\n    - configTimeOut: (number, optional) Config Time Out\n    - generalTimeOut: (number, optional) General Time Out\n  - tenantId: (string, optional) Tenant Id\n  - aaaCredentials: (map, optional)\n    - password: (string, optional) Password\n    - username: (string, optional) Username\n  - defaultProfile: (map, optional)\n    - fqdnAddresses: (array[string], optional)\n    - proxy: (boolean, optional) Proxy\n    - cert: (string, optional) Cert\n    - ipAddresses: (array[string], optional)\n    - port: (number, optional) Port\n  - acceptEula: (boolean, optional) Accept Eula\n  - id: (string, optional) Id\n  - _id: (string, optional)  Id\n  - version: (number, optional) Version"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"_id\": \"string\",\n  \"aaaCredentials\": {\n    \"password\": \"string\",\n    \"username\": \"string\"\n  },\n  \"acceptEula\": false,\n  \"defaultProfile\": {\n    \"cert\": \"string\",\n    \"fqdnAddresses\": [\n      \"string\"\n    ],\n    \"ipAddresses\": [\n      \"string\"\n    ],\n    \"port\": 0,\n    \"proxy\": false\n  },\n  \"savaMappingList\": [\n    {\n      \"autoSyncPeriod\": 0,\n      \"ccoUser\": \"string\",\n      \"expiry\": 0,\n      \"lastSync\": 0,\n      \"profile\": {\n        \"addressFqdn\": \"string\",\n        \"addressIpV4\": \"string\",\n        \"cert\": \"string\",\n        \"makeDefault\": false,\n        \"name\": \"string\",\n        \"port\": 0,\n        \"profileId\": \"string\",\n        \"proxy\": false\n      },\n      \"smartAccountId\": \"string\",\n      \"syncResult\": {\n        \"syncList\": [\n          {\n            \"deviceSnList\": [\n              \"string\"\n            ],\n            \"syncType\": \"string\"\n          }\n        ],\n        \"syncMsg\": \"string\"\n      },\n      \"syncResultStr\": \"string\",\n      \"syncStartTime\": 0,\n      \"syncStatus\": \"string\",\n      \"tenantId\": \"string\",\n      \"token\": \"string\",\n      \"virtualAccountId\": \"string\"\n    }\n  ],\n  \"taskTimeOuts\": {\n    \"configTimeOut\": 0,\n    \"generalTimeOut\": 0,\n    \"imageDownloadTimeOut\": 0\n  },\n  \"tenantId\": \"string\",\n  \"version\": 0\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-settings"
											]
										},
										"description": "Updates the user's list of global PnP settings\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - aaaCredentials: (map, optional)\n    - password: (string, optional)\n    - username: (string, optional)\n  - acceptEula: (boolean, optional)\n  - defaultProfile: (map, optional)\n    - cert: (string, optional)\n    - fqdnAddresses: (array[string], required)\n    - ipAddresses: (array[string], required)\n    - port: (integer, optional)\n    - proxy: (boolean, optional)\n  - savaMappingList: (array[map], optional)\n    - autoSyncPeriod: (integer, optional)\n    - ccoUser: (string, optional)\n    - expiry: (integer, optional)\n    - lastSync: (integer, optional)\n    - profile: (map, required)\n      - addressFqdn: (string, required)\n      - addressIpV4: (string, required)\n      - cert: (string, optional)\n      - makeDefault: (boolean, optional)\n      - name: (string, required)\n      - port: (integer, optional)\n      - profileId: (string, optional)\n      - proxy: (boolean, optional)\n    - smartAccountId: (string, required)\n    - syncResult: (map, optional)\n      - syncList: (array[map], optional)\n        - deviceSnList: (array[string], optional)\n        - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n      - syncMsg: (string, optional)\n    - syncResultStr: (string, optional)\n    - syncStartTime: (integer, optional)\n    - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n    - tenantId: (string, optional)\n    - token: (string, optional)\n    - virtualAccountId: (string, required)\n  - taskTimeOuts: (map, optional)\n    - configTimeOut: (integer, optional)\n    - generalTimeOut: (integer, optional)\n    - imageDownloadTimeOut: (integer, optional)\n  - tenantId: (string, optional)\n  - version: (integer, optional)\n\n###### Response Model\n- root: (map, optional)\n  - savaMappingList: (array[map], optional)\n    - syncStatus: (string, optional) Sync Status\n    - syncStartTime: (number, optional) Sync Start Time\n    - syncResult: (map, optional)\n      - syncList: (array[map], optional)\n        - syncType: (string, optional) Sync Type\n        - deviceSnList: (array[string], optional)\n      - syncMsg: (string, optional) Sync Msg\n    - lastSync: (number, optional) Last Sync\n    - tenantId: (string, optional) Tenant Id\n    - profile: (map, optional)\n      - port: (number, optional) Port\n      - addressIpV4: (string, optional) Address Ip V4\n      - addressFqdn: (string, optional) Address Fqdn\n      - profileId: (string, optional) Profile Id\n      - proxy: (boolean, optional) Proxy\n      - makeDefault: (boolean, optional) Make Default\n      - cert: (string, optional) Cert\n      - name: (string, optional) Name\n    - token: (string, optional) Token\n    - expiry: (number, optional) Expiry\n    - ccoUser: (string, optional) Cco User\n    - smartAccountId: (string, optional) Smart Account Id\n    - virtualAccountId: (string, optional) Virtual Account Id\n    - autoSyncPeriod: (number, optional) Auto Sync Period\n    - syncResultStr: (string, optional) Sync Result Str\n  - taskTimeOuts: (map, optional)\n    - imageDownloadTimeOut: (number, optional) Image Download Time Out\n    - configTimeOut: (number, optional) Config Time Out\n    - generalTimeOut: (number, optional) General Time Out\n  - tenantId: (string, optional) Tenant Id\n  - aaaCredentials: (map, optional)\n    - password: (string, optional) Password\n    - username: (string, optional) Username\n  - defaultProfile: (map, optional)\n    - fqdnAddresses: (array[string], optional)\n    - proxy: (boolean, optional) Proxy\n    - cert: (string, optional) Cert\n    - ipAddresses: (array[string], optional)\n    - port: (number, optional) Port\n  - acceptEula: (boolean, optional) Accept Eula\n  - id: (string, optional) Id\n  - _id: (string, optional)  Id\n  - version: (number, optional) Version"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"savaMappingList\": [\n    {\n      \"syncStatus\": \"string\",\n      \"syncStartTime\": 0.1,\n      \"syncResult\": {\n        \"syncList\": [\n          {\n            \"syncType\": \"string\",\n            \"deviceSnList\": [\n              \"string\"\n            ]\n          }\n        ],\n        \"syncMsg\": \"string\"\n      },\n      \"lastSync\": 0.1,\n      \"tenantId\": \"string\",\n      \"profile\": {\n        \"port\": 0.1,\n        \"addressIpV4\": \"string\",\n        \"addressFqdn\": \"string\",\n        \"profileId\": \"string\",\n        \"proxy\": false,\n        \"makeDefault\": false,\n        \"cert\": \"string\",\n        \"name\": \"string\"\n      },\n      \"token\": \"string\",\n      \"expiry\": 0.1,\n      \"ccoUser\": \"string\",\n      \"smartAccountId\": \"string\",\n      \"virtualAccountId\": \"string\",\n      \"autoSyncPeriod\": 0.1,\n      \"syncResultStr\": \"string\"\n    }\n  ],\n  \"taskTimeOuts\": {\n    \"imageDownloadTimeOut\": 0.1,\n    \"configTimeOut\": 0.1,\n    \"generalTimeOut\": 0.1\n  },\n  \"tenantId\": \"string\",\n  \"aaaCredentials\": {\n    \"password\": \"string\",\n    \"username\": \"string\"\n  },\n  \"defaultProfile\": {\n    \"fqdnAddresses\": [\n      \"string\"\n    ],\n    \"proxy\": false,\n    \"cert\": \"string\",\n    \"ipAddresses\": [\n      \"string\"\n    ],\n    \"port\": 0.1\n  },\n  \"acceptEula\": false,\n  \"id\": \"string\",\n  \"_id\": \"string\",\n  \"version\": 0.1\n}"
								}
							]
						},
						{
							"name": "Get Smart Account List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings/sacct",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-settings",
										"sacct"
									]
								},
								"description": "Returns the list of Smart Account domains\n\n###### Response Model\n- root: (array[string], optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings/sacct",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-settings",
												"sacct"
											]
										},
										"description": "Returns the list of Smart Account domains\n\n###### Response Model\n- root: (array[string], optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "[\n  \"string\"\n]"
								}
							]
						},
						{
							"name": "Get Virtual Account List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings/sacct/:domain/vacct",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-settings",
										"sacct",
										":domain",
										"vacct"
									],
									"variable": [
										{
											"key": "domain",
											"value": "",
											"description": "(string, required) Smart Account Domain"
										}
									]
								},
								"description": "Returns list of virtual accounts associated with the specified smart account\n\n###### Response Model\n- root: (array[string], optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings/sacct/:domain/vacct",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-settings",
												"sacct",
												":domain",
												"vacct"
											],
											"variable": [
												{
													"key": "domain",
													"value": "",
													"description": "(string, required) Smart Account Domain"
												}
											]
										},
										"description": "Returns list of virtual accounts associated with the specified smart account\n\n###### Response Model\n- root: (array[string], optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "[\n  \"string\"\n]"
								}
							]
						},
						{
							"name": "Add Virtual Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"autoSyncPeriod\": 0,\n  \"ccoUser\": \"string\",\n  \"expiry\": 0,\n  \"lastSync\": 0,\n  \"profile\": {\n    \"addressFqdn\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"makeDefault\": false,\n    \"name\": \"string\",\n    \"port\": 0,\n    \"profileId\": \"string\",\n    \"proxy\": false\n  },\n  \"smartAccountId\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"deviceSnList\": [\n          \"string\"\n        ],\n        \"syncType\": \"string\"\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"syncResultStr\": \"string\",\n  \"syncStartTime\": 0,\n  \"syncStatus\": \"string\",\n  \"tenantId\": \"string\",\n  \"token\": \"string\",\n  \"virtualAccountId\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings/savacct",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-settings",
										"savacct"
									]
								},
								"description": "Registers a Smart Account, Virtual Account and the relevant server profile info with the PnP System & database. The devices present in the registered virtual account are synced with the PnP database as well. The response payload returns the new profile\n\n###### Request Model\n- root: (map, optional)\n  - autoSyncPeriod: (integer, optional)\n  - ccoUser: (string, optional)\n  - expiry: (integer, optional)\n  - lastSync: (integer, optional)\n  - profile: (map, required)\n    - addressFqdn: (string, required)\n    - addressIpV4: (string, required)\n    - cert: (string, optional)\n    - makeDefault: (boolean, optional)\n    - name: (string, required)\n    - port: (integer, optional)\n    - profileId: (string, optional)\n    - proxy: (boolean, optional)\n  - smartAccountId: (string, required)\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - deviceSnList: (array[string], optional)\n      - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n    - syncMsg: (string, optional)\n  - syncResultStr: (string, optional)\n  - syncStartTime: (integer, optional)\n  - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n  - tenantId: (string, optional)\n  - token: (string, optional)\n  - virtualAccountId: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - virtualAccountId: (string, optional) Virtual Account Id\n  - autoSyncPeriod: (number, optional) Auto Sync Period\n  - syncResultStr: (string, optional) Sync Result Str\n  - profile: (map, optional)\n    - proxy: (boolean, optional) Proxy\n    - makeDefault: (boolean, optional) Make Default\n    - port: (number, optional) Port\n    - profileId: (string, optional) Profile Id\n    - name: (string, optional) Name\n    - addressIpV4: (string, optional) Address Ip V4\n    - cert: (string, optional) Cert\n    - addressFqdn: (string, optional) Address Fqdn\n  - ccoUser: (string, optional) Cco User\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - syncType: (string, optional) Sync Type\n      - deviceSnList: (array[string], optional)\n    - syncMsg: (string, optional) Sync Msg\n  - token: (string, optional) Token\n  - syncStartTime: (number, optional) Sync Start Time\n  - lastSync: (number, optional) Last Sync\n  - tenantId: (string, optional) Tenant Id\n  - smartAccountId: (string, optional) Smart Account Id\n  - expiry: (number, optional) Expiry\n  - syncStatus: (string, optional) Sync Status"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autoSyncPeriod\": 0,\n  \"ccoUser\": \"string\",\n  \"expiry\": 0,\n  \"lastSync\": 0,\n  \"profile\": {\n    \"addressFqdn\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"makeDefault\": false,\n    \"name\": \"string\",\n    \"port\": 0,\n    \"profileId\": \"string\",\n    \"proxy\": false\n  },\n  \"smartAccountId\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"deviceSnList\": [\n          \"string\"\n        ],\n        \"syncType\": \"string\"\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"syncResultStr\": \"string\",\n  \"syncStartTime\": 0,\n  \"syncStatus\": \"string\",\n  \"tenantId\": \"string\",\n  \"token\": \"string\",\n  \"virtualAccountId\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings/savacct",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-settings",
												"savacct"
											]
										},
										"description": "Registers a Smart Account, Virtual Account and the relevant server profile info with the PnP System & database. The devices present in the registered virtual account are synced with the PnP database as well. The response payload returns the new profile\n\n###### Request Model\n- root: (map, optional)\n  - autoSyncPeriod: (integer, optional)\n  - ccoUser: (string, optional)\n  - expiry: (integer, optional)\n  - lastSync: (integer, optional)\n  - profile: (map, required)\n    - addressFqdn: (string, required)\n    - addressIpV4: (string, required)\n    - cert: (string, optional)\n    - makeDefault: (boolean, optional)\n    - name: (string, required)\n    - port: (integer, optional)\n    - profileId: (string, optional)\n    - proxy: (boolean, optional)\n  - smartAccountId: (string, required)\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - deviceSnList: (array[string], optional)\n      - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n    - syncMsg: (string, optional)\n  - syncResultStr: (string, optional)\n  - syncStartTime: (integer, optional)\n  - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n  - tenantId: (string, optional)\n  - token: (string, optional)\n  - virtualAccountId: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - virtualAccountId: (string, optional) Virtual Account Id\n  - autoSyncPeriod: (number, optional) Auto Sync Period\n  - syncResultStr: (string, optional) Sync Result Str\n  - profile: (map, optional)\n    - proxy: (boolean, optional) Proxy\n    - makeDefault: (boolean, optional) Make Default\n    - port: (number, optional) Port\n    - profileId: (string, optional) Profile Id\n    - name: (string, optional) Name\n    - addressIpV4: (string, optional) Address Ip V4\n    - cert: (string, optional) Cert\n    - addressFqdn: (string, optional) Address Fqdn\n  - ccoUser: (string, optional) Cco User\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - syncType: (string, optional) Sync Type\n      - deviceSnList: (array[string], optional)\n    - syncMsg: (string, optional) Sync Msg\n  - token: (string, optional) Token\n  - syncStartTime: (number, optional) Sync Start Time\n  - lastSync: (number, optional) Last Sync\n  - tenantId: (string, optional) Tenant Id\n  - smartAccountId: (string, optional) Smart Account Id\n  - expiry: (number, optional) Expiry\n  - syncStatus: (string, optional) Sync Status"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"virtualAccountId\": \"string\",\n  \"autoSyncPeriod\": 0.1,\n  \"syncResultStr\": \"string\",\n  \"profile\": {\n    \"proxy\": false,\n    \"makeDefault\": false,\n    \"port\": 0.1,\n    \"profileId\": \"string\",\n    \"name\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"addressFqdn\": \"string\"\n  },\n  \"ccoUser\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"syncType\": \"string\",\n        \"deviceSnList\": [\n          \"string\"\n        ]\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"token\": \"string\",\n  \"syncStartTime\": 0.1,\n  \"lastSync\": 0.1,\n  \"tenantId\": \"string\",\n  \"smartAccountId\": \"string\",\n  \"expiry\": 0.1,\n  \"syncStatus\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update PnP Server Profile",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"autoSyncPeriod\": 0,\n  \"ccoUser\": \"string\",\n  \"expiry\": 0,\n  \"lastSync\": 0,\n  \"profile\": {\n    \"addressFqdn\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"makeDefault\": false,\n    \"name\": \"string\",\n    \"port\": 0,\n    \"profileId\": \"string\",\n    \"proxy\": false\n  },\n  \"smartAccountId\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"deviceSnList\": [\n          \"string\"\n        ],\n        \"syncType\": \"string\"\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"syncResultStr\": \"string\",\n  \"syncStartTime\": 0,\n  \"syncStatus\": \"string\",\n  \"tenantId\": \"string\",\n  \"token\": \"string\",\n  \"virtualAccountId\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings/savacct",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-settings",
										"savacct"
									]
								},
								"description": "Updates the PnP Server profile in a registered Virtual Account in the PnP database. The response payload returns the updated smart & virtual account info\n\n###### Request Model\n- root: (map, optional)\n  - autoSyncPeriod: (integer, optional)\n  - ccoUser: (string, optional)\n  - expiry: (integer, optional)\n  - lastSync: (integer, optional)\n  - profile: (map, required)\n    - addressFqdn: (string, required)\n    - addressIpV4: (string, required)\n    - cert: (string, optional)\n    - makeDefault: (boolean, optional)\n    - name: (string, required)\n    - port: (integer, optional)\n    - profileId: (string, optional)\n    - proxy: (boolean, optional)\n  - smartAccountId: (string, required)\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - deviceSnList: (array[string], optional)\n      - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n    - syncMsg: (string, optional)\n  - syncResultStr: (string, optional)\n  - syncStartTime: (integer, optional)\n  - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n  - tenantId: (string, optional)\n  - token: (string, optional)\n  - virtualAccountId: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - virtualAccountId: (string, optional) Virtual Account Id\n  - autoSyncPeriod: (number, optional) Auto Sync Period\n  - syncResultStr: (string, optional) Sync Result Str\n  - profile: (map, optional)\n    - proxy: (boolean, optional) Proxy\n    - makeDefault: (boolean, optional) Make Default\n    - port: (number, optional) Port\n    - profileId: (string, optional) Profile Id\n    - name: (string, optional) Name\n    - addressIpV4: (string, optional) Address Ip V4\n    - cert: (string, optional) Cert\n    - addressFqdn: (string, optional) Address Fqdn\n  - ccoUser: (string, optional) Cco User\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - syncType: (string, optional) Sync Type\n      - deviceSnList: (array[string], optional)\n    - syncMsg: (string, optional) Sync Msg\n  - token: (string, optional) Token\n  - syncStartTime: (number, optional) Sync Start Time\n  - lastSync: (number, optional) Last Sync\n  - tenantId: (string, optional) Tenant Id\n  - smartAccountId: (string, optional) Smart Account Id\n  - expiry: (number, optional) Expiry\n  - syncStatus: (string, optional) Sync Status"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autoSyncPeriod\": 0,\n  \"ccoUser\": \"string\",\n  \"expiry\": 0,\n  \"lastSync\": 0,\n  \"profile\": {\n    \"addressFqdn\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"makeDefault\": false,\n    \"name\": \"string\",\n    \"port\": 0,\n    \"profileId\": \"string\",\n    \"proxy\": false\n  },\n  \"smartAccountId\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"deviceSnList\": [\n          \"string\"\n        ],\n        \"syncType\": \"string\"\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"syncResultStr\": \"string\",\n  \"syncStartTime\": 0,\n  \"syncStatus\": \"string\",\n  \"tenantId\": \"string\",\n  \"token\": \"string\",\n  \"virtualAccountId\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings/savacct",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-settings",
												"savacct"
											]
										},
										"description": "Updates the PnP Server profile in a registered Virtual Account in the PnP database. The response payload returns the updated smart & virtual account info\n\n###### Request Model\n- root: (map, optional)\n  - autoSyncPeriod: (integer, optional)\n  - ccoUser: (string, optional)\n  - expiry: (integer, optional)\n  - lastSync: (integer, optional)\n  - profile: (map, required)\n    - addressFqdn: (string, required)\n    - addressIpV4: (string, required)\n    - cert: (string, optional)\n    - makeDefault: (boolean, optional)\n    - name: (string, required)\n    - port: (integer, optional)\n    - profileId: (string, optional)\n    - proxy: (boolean, optional)\n  - smartAccountId: (string, required)\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - deviceSnList: (array[string], optional)\n      - syncType: (enum[\"Add\",\"Update\",\"Delete\",\"MismatchError\"], optional)\n    - syncMsg: (string, optional)\n  - syncResultStr: (string, optional)\n  - syncStartTime: (integer, optional)\n  - syncStatus: (enum[\"NOT_SYNCED\",\"SYNCING\",\"SUCCESS\",\"FAILURE\"], required)\n  - tenantId: (string, optional)\n  - token: (string, optional)\n  - virtualAccountId: (string, required)\n\n###### Response Model\n- root: (map, optional)\n  - virtualAccountId: (string, optional) Virtual Account Id\n  - autoSyncPeriod: (number, optional) Auto Sync Period\n  - syncResultStr: (string, optional) Sync Result Str\n  - profile: (map, optional)\n    - proxy: (boolean, optional) Proxy\n    - makeDefault: (boolean, optional) Make Default\n    - port: (number, optional) Port\n    - profileId: (string, optional) Profile Id\n    - name: (string, optional) Name\n    - addressIpV4: (string, optional) Address Ip V4\n    - cert: (string, optional) Cert\n    - addressFqdn: (string, optional) Address Fqdn\n  - ccoUser: (string, optional) Cco User\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - syncType: (string, optional) Sync Type\n      - deviceSnList: (array[string], optional)\n    - syncMsg: (string, optional) Sync Msg\n  - token: (string, optional) Token\n  - syncStartTime: (number, optional) Sync Start Time\n  - lastSync: (number, optional) Last Sync\n  - tenantId: (string, optional) Tenant Id\n  - smartAccountId: (string, optional) Smart Account Id\n  - expiry: (number, optional) Expiry\n  - syncStatus: (string, optional) Sync Status"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"virtualAccountId\": \"string\",\n  \"autoSyncPeriod\": 0.1,\n  \"syncResultStr\": \"string\",\n  \"profile\": {\n    \"proxy\": false,\n    \"makeDefault\": false,\n    \"port\": 0.1,\n    \"profileId\": \"string\",\n    \"name\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"addressFqdn\": \"string\"\n  },\n  \"ccoUser\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"syncType\": \"string\",\n        \"deviceSnList\": [\n          \"string\"\n        ]\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"token\": \"string\",\n  \"syncStartTime\": 0.1,\n  \"lastSync\": 0.1,\n  \"tenantId\": \"string\",\n  \"smartAccountId\": \"string\",\n  \"expiry\": 0.1,\n  \"syncStatus\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Deregister Virtual Account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings/vacct?domain=&name=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-settings",
										"vacct"
									],
									"query": [
										{
											"key": "domain",
											"value": "",
											"description": "(string, required) Smart Account Domain"
										},
										{
											"key": "name",
											"value": "",
											"description": "(string, required) Virtual Account Name"
										}
									]
								},
								"description": "Deregisters the specified smart account & virtual account info and the associated device information from the PnP System & database. The devices associated with the deregistered virtual account are removed from the PnP database as well. The response payload contains the deregistered smart & virtual account information\n\n###### Response Model\n- root: (map, optional)\n  - virtualAccountId: (string, optional) Virtual Account Id\n  - autoSyncPeriod: (number, optional) Auto Sync Period\n  - syncResultStr: (string, optional) Sync Result Str\n  - profile: (map, optional)\n    - proxy: (boolean, optional) Proxy\n    - makeDefault: (boolean, optional) Make Default\n    - port: (number, optional) Port\n    - profileId: (string, optional) Profile Id\n    - name: (string, optional) Name\n    - addressIpV4: (string, optional) Address Ip V4\n    - cert: (string, optional) Cert\n    - addressFqdn: (string, optional) Address Fqdn\n  - ccoUser: (string, optional) Cco User\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - syncType: (string, optional) Sync Type\n      - deviceSnList: (array[string], optional)\n    - syncMsg: (string, optional) Sync Msg\n  - token: (string, optional) Token\n  - syncStartTime: (number, optional) Sync Start Time\n  - lastSync: (number, optional) Last Sync\n  - tenantId: (string, optional) Tenant Id\n  - smartAccountId: (string, optional) Smart Account Id\n  - expiry: (number, optional) Expiry\n  - syncStatus: (string, optional) Sync Status"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-settings/vacct?domain=&name=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-settings",
												"vacct"
											],
											"query": [
												{
													"key": "domain",
													"value": "",
													"description": "(string, required) Smart Account Domain"
												},
												{
													"key": "name",
													"value": "",
													"description": "(string, required) Virtual Account Name"
												}
											]
										},
										"description": "Deregisters the specified smart account & virtual account info and the associated device information from the PnP System & database. The devices associated with the deregistered virtual account are removed from the PnP database as well. The response payload contains the deregistered smart & virtual account information\n\n###### Response Model\n- root: (map, optional)\n  - virtualAccountId: (string, optional) Virtual Account Id\n  - autoSyncPeriod: (number, optional) Auto Sync Period\n  - syncResultStr: (string, optional) Sync Result Str\n  - profile: (map, optional)\n    - proxy: (boolean, optional) Proxy\n    - makeDefault: (boolean, optional) Make Default\n    - port: (number, optional) Port\n    - profileId: (string, optional) Profile Id\n    - name: (string, optional) Name\n    - addressIpV4: (string, optional) Address Ip V4\n    - cert: (string, optional) Cert\n    - addressFqdn: (string, optional) Address Fqdn\n  - ccoUser: (string, optional) Cco User\n  - syncResult: (map, optional)\n    - syncList: (array[map], optional)\n      - syncType: (string, optional) Sync Type\n      - deviceSnList: (array[string], optional)\n    - syncMsg: (string, optional) Sync Msg\n  - token: (string, optional) Token\n  - syncStartTime: (number, optional) Sync Start Time\n  - lastSync: (number, optional) Last Sync\n  - tenantId: (string, optional) Tenant Id\n  - smartAccountId: (string, optional) Smart Account Id\n  - expiry: (number, optional) Expiry\n  - syncStatus: (string, optional) Sync Status"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"virtualAccountId\": \"string\",\n  \"autoSyncPeriod\": 0.1,\n  \"syncResultStr\": \"string\",\n  \"profile\": {\n    \"proxy\": false,\n    \"makeDefault\": false,\n    \"port\": 0.1,\n    \"profileId\": \"string\",\n    \"name\": \"string\",\n    \"addressIpV4\": \"string\",\n    \"cert\": \"string\",\n    \"addressFqdn\": \"string\"\n  },\n  \"ccoUser\": \"string\",\n  \"syncResult\": {\n    \"syncList\": [\n      {\n        \"syncType\": \"string\",\n        \"deviceSnList\": [\n          \"string\"\n        ]\n      }\n    ],\n    \"syncMsg\": \"string\"\n  },\n  \"token\": \"string\",\n  \"syncStartTime\": 0.1,\n  \"lastSync\": 0.1,\n  \"tenantId\": \"string\",\n  \"smartAccountId\": \"string\",\n  \"expiry\": 0.1,\n  \"syncStatus\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Workflows",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow?limit=&offset=&sort=&sortOrder=&type=&name=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-workflow"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "(integer, optional) Limits number of results"
										},
										{
											"key": "offset",
											"value": "",
											"description": "(integer, optional) Index of first result"
										},
										{
											"key": "sort",
											"value": "",
											"description": "(array, optional) Comma seperated lost of fields to sort on"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "(string, optional) Sort Order Ascending (asc) or Descending (des)"
										},
										{
											"key": "type",
											"value": "",
											"description": "(array, optional) Workflow Type"
										},
										{
											"key": "name",
											"value": "",
											"description": "(array, optional) Workflow Name"
										}
									]
								},
								"description": "Returns the list of workflows based on filter criteria. If a limit is not specified, it will default to return 50 workflows. Pagination and sorting are also supported by this endpoint\n\n###### Response Model\n- root: (array[map], optional)\n  - _id: (string, optional)  Id\n  - state: (string, optional) State\n  - type: (string, optional) Type\n  - description: (string, optional) Description\n  - lastupdateOn: (number, optional) Lastupdate On\n  - imageId: (string, optional) Image Id\n  - currTaskIdx: (number, optional) Curr Task Idx\n  - addedOn: (number, optional) Added On\n  - tasks: (array[map], optional)\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - currWorkItemIdx: (number, optional) Curr Work Item Idx\n    - taskSeqNo: (number, optional) Task Seq No\n    - endTime: (number, optional) End Time\n    - startTime: (number, optional) Start Time\n    - workItemList: (array[map], optional)\n      - state: (string, optional) State\n      - command: (string, optional) Command\n      - outputStr: (string, optional) Output Str\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - timeTaken: (number, optional) Time Taken\n    - timeTaken: (number, optional) Time Taken\n    - name: (string, optional) Name\n  - addToInventory: (boolean, optional) Add To Inventory\n  - instanceType: (string, optional) Instance Type\n  - endTime: (number, optional) End Time\n  - execTime: (number, optional) Exec Time\n  - startTime: (number, optional) Start Time\n  - useState: (string, optional) Use State\n  - configId: (string, optional) Config Id\n  - name: (string, optional) Name\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow?limit=&offset=&sort=&sortOrder=&type=&name=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-workflow"
											],
											"query": [
												{
													"key": "limit",
													"value": "",
													"description": "(integer, optional) Limits number of results"
												},
												{
													"key": "offset",
													"value": "",
													"description": "(integer, optional) Index of first result"
												},
												{
													"key": "sort",
													"value": "",
													"description": "(array, optional) Comma seperated lost of fields to sort on"
												},
												{
													"key": "sortOrder",
													"value": "",
													"description": "(string, optional) Sort Order Ascending (asc) or Descending (des)"
												},
												{
													"key": "type",
													"value": "",
													"description": "(array, optional) Workflow Type"
												},
												{
													"key": "name",
													"value": "",
													"description": "(array, optional) Workflow Name"
												}
											]
										},
										"description": "Returns the list of workflows based on filter criteria. If a limit is not specified, it will default to return 50 workflows. Pagination and sorting are also supported by this endpoint\n\n###### Response Model\n- root: (array[map], optional)\n  - _id: (string, optional)  Id\n  - state: (string, optional) State\n  - type: (string, optional) Type\n  - description: (string, optional) Description\n  - lastupdateOn: (number, optional) Lastupdate On\n  - imageId: (string, optional) Image Id\n  - currTaskIdx: (number, optional) Curr Task Idx\n  - addedOn: (number, optional) Added On\n  - tasks: (array[map], optional)\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - currWorkItemIdx: (number, optional) Curr Work Item Idx\n    - taskSeqNo: (number, optional) Task Seq No\n    - endTime: (number, optional) End Time\n    - startTime: (number, optional) Start Time\n    - workItemList: (array[map], optional)\n      - state: (string, optional) State\n      - command: (string, optional) Command\n      - outputStr: (string, optional) Output Str\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - timeTaken: (number, optional) Time Taken\n    - timeTaken: (number, optional) Time Taken\n    - name: (string, optional) Name\n  - addToInventory: (boolean, optional) Add To Inventory\n  - instanceType: (string, optional) Instance Type\n  - endTime: (number, optional) End Time\n  - execTime: (number, optional) Exec Time\n  - startTime: (number, optional) Start Time\n  - useState: (string, optional) Use State\n  - configId: (string, optional) Config Id\n  - name: (string, optional) Name\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "[\n  {\n    \"_id\": \"string\",\n    \"state\": \"string\",\n    \"type\": \"string\",\n    \"description\": \"string\",\n    \"lastupdateOn\": 0.1,\n    \"imageId\": \"string\",\n    \"currTaskIdx\": 0.1,\n    \"addedOn\": 0.1,\n    \"tasks\": [\n      {\n        \"state\": \"string\",\n        \"type\": \"string\",\n        \"currWorkItemIdx\": 0.1,\n        \"taskSeqNo\": 0.1,\n        \"endTime\": 0.1,\n        \"startTime\": 0.1,\n        \"workItemList\": [\n          {\n            \"state\": \"string\",\n            \"command\": \"string\",\n            \"outputStr\": \"string\",\n            \"endTime\": 0.1,\n            \"startTime\": 0.1,\n            \"timeTaken\": 0.1\n          }\n        ],\n        \"timeTaken\": 0.1,\n        \"name\": \"string\"\n      }\n    ],\n    \"addToInventory\": false,\n    \"instanceType\": \"string\",\n    \"endTime\": 0.1,\n    \"execTime\": 0.1,\n    \"startTime\": 0.1,\n    \"useState\": \"string\",\n    \"configId\": \"string\",\n    \"name\": \"string\",\n    \"version\": 0.1,\n    \"tenantId\": \"string\"\n  }\n]"
								}
							]
						},
						{
							"name": "Add a Workflow",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"_id\": \"string\",\n  \"addToInventory\": false,\n  \"addedOn\": 0,\n  \"configId\": \"string\",\n  \"currTaskIdx\": 0,\n  \"description\": \"string\",\n  \"endTime\": 0,\n  \"execTime\": 0,\n  \"imageId\": \"string\",\n  \"instanceType\": \"string\",\n  \"lastupdateOn\": 0,\n  \"name\": \"string\",\n  \"startTime\": 0,\n  \"state\": \"string\",\n  \"tasks\": [\n    {\n      \"currWorkItemIdx\": 0,\n      \"endTime\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"taskSeqNo\": 0,\n      \"timeTaken\": 0,\n      \"type\": \"string\",\n      \"workItemList\": [\n        {\n          \"command\": \"string\",\n          \"endTime\": 0,\n          \"outputStr\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"timeTaken\": 0\n        }\n      ]\n    }\n  ],\n  \"tenantId\": \"string\",\n  \"type\": \"string\",\n  \"useState\": \"string\",\n  \"version\": 0\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-workflow"
									]
								},
								"description": "Adds a PnP Workflow along with the relevant tasks in the workflow into the PnP database\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - addToInventory: (boolean, optional)\n  - addedOn: (integer, optional)\n  - configId: (string, optional)\n  - currTaskIdx: (integer, optional)\n  - description: (string, optional)\n  - endTime: (integer, optional)\n  - execTime: (integer, optional)\n  - imageId: (string, optional)\n  - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n  - lastupdateOn: (integer, optional)\n  - name: (string, optional)\n  - startTime: (integer, optional)\n  - state: (string, optional)\n  - tasks: (array[map], optional)\n    - currWorkItemIdx: (integer, optional)\n    - endTime: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - taskSeqNo: (integer, optional)\n    - timeTaken: (integer, optional)\n    - type: (string, optional)\n    - workItemList: (array[map], optional)\n      - command: (string, optional)\n      - endTime: (integer, optional)\n      - outputStr: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - timeTaken: (integer, optional)\n  - tenantId: (string, optional)\n  - type: (string, optional)\n  - useState: (string, optional)\n  - version: (integer, optional)\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - state: (string, optional) State\n  - type: (string, optional) Type\n  - description: (string, optional) Description\n  - lastupdateOn: (number, optional) Lastupdate On\n  - imageId: (string, optional) Image Id\n  - currTaskIdx: (number, optional) Curr Task Idx\n  - addedOn: (number, optional) Added On\n  - tasks: (array[map], optional)\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - currWorkItemIdx: (number, optional) Curr Work Item Idx\n    - taskSeqNo: (number, optional) Task Seq No\n    - endTime: (number, optional) End Time\n    - startTime: (number, optional) Start Time\n    - workItemList: (array[map], optional)\n      - state: (string, optional) State\n      - command: (string, optional) Command\n      - outputStr: (string, optional) Output Str\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - timeTaken: (number, optional) Time Taken\n    - timeTaken: (number, optional) Time Taken\n    - name: (string, optional) Name\n  - addToInventory: (boolean, optional) Add To Inventory\n  - instanceType: (string, optional) Instance Type\n  - endTime: (number, optional) End Time\n  - execTime: (number, optional) Exec Time\n  - startTime: (number, optional) Start Time\n  - useState: (string, optional) Use State\n  - configId: (string, optional) Config Id\n  - name: (string, optional) Name\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"_id\": \"string\",\n  \"addToInventory\": false,\n  \"addedOn\": 0,\n  \"configId\": \"string\",\n  \"currTaskIdx\": 0,\n  \"description\": \"string\",\n  \"endTime\": 0,\n  \"execTime\": 0,\n  \"imageId\": \"string\",\n  \"instanceType\": \"string\",\n  \"lastupdateOn\": 0,\n  \"name\": \"string\",\n  \"startTime\": 0,\n  \"state\": \"string\",\n  \"tasks\": [\n    {\n      \"currWorkItemIdx\": 0,\n      \"endTime\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"taskSeqNo\": 0,\n      \"timeTaken\": 0,\n      \"type\": \"string\",\n      \"workItemList\": [\n        {\n          \"command\": \"string\",\n          \"endTime\": 0,\n          \"outputStr\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"timeTaken\": 0\n        }\n      ]\n    }\n  ],\n  \"tenantId\": \"string\",\n  \"type\": \"string\",\n  \"useState\": \"string\",\n  \"version\": 0\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-workflow"
											]
										},
										"description": "Adds a PnP Workflow along with the relevant tasks in the workflow into the PnP database\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - addToInventory: (boolean, optional)\n  - addedOn: (integer, optional)\n  - configId: (string, optional)\n  - currTaskIdx: (integer, optional)\n  - description: (string, optional)\n  - endTime: (integer, optional)\n  - execTime: (integer, optional)\n  - imageId: (string, optional)\n  - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n  - lastupdateOn: (integer, optional)\n  - name: (string, optional)\n  - startTime: (integer, optional)\n  - state: (string, optional)\n  - tasks: (array[map], optional)\n    - currWorkItemIdx: (integer, optional)\n    - endTime: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - taskSeqNo: (integer, optional)\n    - timeTaken: (integer, optional)\n    - type: (string, optional)\n    - workItemList: (array[map], optional)\n      - command: (string, optional)\n      - endTime: (integer, optional)\n      - outputStr: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - timeTaken: (integer, optional)\n  - tenantId: (string, optional)\n  - type: (string, optional)\n  - useState: (string, optional)\n  - version: (integer, optional)\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - state: (string, optional) State\n  - type: (string, optional) Type\n  - description: (string, optional) Description\n  - lastupdateOn: (number, optional) Lastupdate On\n  - imageId: (string, optional) Image Id\n  - currTaskIdx: (number, optional) Curr Task Idx\n  - addedOn: (number, optional) Added On\n  - tasks: (array[map], optional)\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - currWorkItemIdx: (number, optional) Curr Work Item Idx\n    - taskSeqNo: (number, optional) Task Seq No\n    - endTime: (number, optional) End Time\n    - startTime: (number, optional) Start Time\n    - workItemList: (array[map], optional)\n      - state: (string, optional) State\n      - command: (string, optional) Command\n      - outputStr: (string, optional) Output Str\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - timeTaken: (number, optional) Time Taken\n    - timeTaken: (number, optional) Time Taken\n    - name: (string, optional) Name\n  - addToInventory: (boolean, optional) Add To Inventory\n  - instanceType: (string, optional) Instance Type\n  - endTime: (number, optional) End Time\n  - execTime: (number, optional) Exec Time\n  - startTime: (number, optional) Start Time\n  - useState: (string, optional) Use State\n  - configId: (string, optional) Config Id\n  - name: (string, optional) Name\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"_id\": \"string\",\n  \"state\": \"string\",\n  \"type\": \"string\",\n  \"description\": \"string\",\n  \"lastupdateOn\": 0.1,\n  \"imageId\": \"string\",\n  \"currTaskIdx\": 0.1,\n  \"addedOn\": 0.1,\n  \"tasks\": [\n    {\n      \"state\": \"string\",\n      \"type\": \"string\",\n      \"currWorkItemIdx\": 0.1,\n      \"taskSeqNo\": 0.1,\n      \"endTime\": 0.1,\n      \"startTime\": 0.1,\n      \"workItemList\": [\n        {\n          \"state\": \"string\",\n          \"command\": \"string\",\n          \"outputStr\": \"string\",\n          \"endTime\": 0.1,\n          \"startTime\": 0.1,\n          \"timeTaken\": 0.1\n        }\n      ],\n      \"timeTaken\": 0.1,\n      \"name\": \"string\"\n    }\n  ],\n  \"addToInventory\": false,\n  \"instanceType\": \"string\",\n  \"endTime\": 0.1,\n  \"execTime\": 0.1,\n  \"startTime\": 0.1,\n  \"useState\": \"string\",\n  \"configId\": \"string\",\n  \"name\": \"string\",\n  \"version\": 0.1,\n  \"tenantId\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete Workflow By Id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-workflow",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) id"
										}
									]
								},
								"description": "Deletes a workflow specified by id\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - state: (string, optional) State\n  - type: (string, optional) Type\n  - description: (string, optional) Description\n  - lastupdateOn: (number, optional) Lastupdate On\n  - imageId: (string, optional) Image Id\n  - currTaskIdx: (number, optional) Curr Task Idx\n  - addedOn: (number, optional) Added On\n  - tasks: (array[map], optional)\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - currWorkItemIdx: (number, optional) Curr Work Item Idx\n    - taskSeqNo: (number, optional) Task Seq No\n    - endTime: (number, optional) End Time\n    - startTime: (number, optional) Start Time\n    - workItemList: (array[map], optional)\n      - state: (string, optional) State\n      - command: (string, optional) Command\n      - outputStr: (string, optional) Output Str\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - timeTaken: (number, optional) Time Taken\n    - timeTaken: (number, optional) Time Taken\n    - name: (string, optional) Name\n  - addToInventory: (boolean, optional) Add To Inventory\n  - instanceType: (string, optional) Instance Type\n  - endTime: (number, optional) End Time\n  - execTime: (number, optional) Exec Time\n  - startTime: (number, optional) Start Time\n  - useState: (string, optional) Use State\n  - configId: (string, optional) Config Id\n  - name: (string, optional) Name\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-workflow",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) id"
												}
											]
										},
										"description": "Deletes a workflow specified by id\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - state: (string, optional) State\n  - type: (string, optional) Type\n  - description: (string, optional) Description\n  - lastupdateOn: (number, optional) Lastupdate On\n  - imageId: (string, optional) Image Id\n  - currTaskIdx: (number, optional) Curr Task Idx\n  - addedOn: (number, optional) Added On\n  - tasks: (array[map], optional)\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - currWorkItemIdx: (number, optional) Curr Work Item Idx\n    - taskSeqNo: (number, optional) Task Seq No\n    - endTime: (number, optional) End Time\n    - startTime: (number, optional) Start Time\n    - workItemList: (array[map], optional)\n      - state: (string, optional) State\n      - command: (string, optional) Command\n      - outputStr: (string, optional) Output Str\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - timeTaken: (number, optional) Time Taken\n    - timeTaken: (number, optional) Time Taken\n    - name: (string, optional) Name\n  - addToInventory: (boolean, optional) Add To Inventory\n  - instanceType: (string, optional) Instance Type\n  - endTime: (number, optional) End Time\n  - execTime: (number, optional) Exec Time\n  - startTime: (number, optional) Start Time\n  - useState: (string, optional) Use State\n  - configId: (string, optional) Config Id\n  - name: (string, optional) Name\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"_id\": \"string\",\n  \"state\": \"string\",\n  \"type\": \"string\",\n  \"description\": \"string\",\n  \"lastupdateOn\": 0.1,\n  \"imageId\": \"string\",\n  \"currTaskIdx\": 0.1,\n  \"addedOn\": 0.1,\n  \"tasks\": [\n    {\n      \"state\": \"string\",\n      \"type\": \"string\",\n      \"currWorkItemIdx\": 0.1,\n      \"taskSeqNo\": 0.1,\n      \"endTime\": 0.1,\n      \"startTime\": 0.1,\n      \"workItemList\": [\n        {\n          \"state\": \"string\",\n          \"command\": \"string\",\n          \"outputStr\": \"string\",\n          \"endTime\": 0.1,\n          \"startTime\": 0.1,\n          \"timeTaken\": 0.1\n        }\n      ],\n      \"timeTaken\": 0.1,\n      \"name\": \"string\"\n    }\n  ],\n  \"addToInventory\": false,\n  \"instanceType\": \"string\",\n  \"endTime\": 0.1,\n  \"execTime\": 0.1,\n  \"startTime\": 0.1,\n  \"useState\": \"string\",\n  \"configId\": \"string\",\n  \"name\": \"string\",\n  \"version\": 0.1,\n  \"tenantId\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Workflow by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-workflow",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) id"
										}
									]
								},
								"description": "Returns a workflow specified by id\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - state: (string, optional) State\n  - type: (string, optional) Type\n  - description: (string, optional) Description\n  - lastupdateOn: (number, optional) Lastupdate On\n  - imageId: (string, optional) Image Id\n  - currTaskIdx: (number, optional) Curr Task Idx\n  - addedOn: (number, optional) Added On\n  - tasks: (array[map], optional)\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - currWorkItemIdx: (number, optional) Curr Work Item Idx\n    - taskSeqNo: (number, optional) Task Seq No\n    - endTime: (number, optional) End Time\n    - startTime: (number, optional) Start Time\n    - workItemList: (array[map], optional)\n      - state: (string, optional) State\n      - command: (string, optional) Command\n      - outputStr: (string, optional) Output Str\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - timeTaken: (number, optional) Time Taken\n    - timeTaken: (number, optional) Time Taken\n    - name: (string, optional) Name\n  - addToInventory: (boolean, optional) Add To Inventory\n  - instanceType: (string, optional) Instance Type\n  - endTime: (number, optional) End Time\n  - execTime: (number, optional) Exec Time\n  - startTime: (number, optional) Start Time\n  - useState: (string, optional) Use State\n  - configId: (string, optional) Config Id\n  - name: (string, optional) Name\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-workflow",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) id"
												}
											]
										},
										"description": "Returns a workflow specified by id\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - state: (string, optional) State\n  - type: (string, optional) Type\n  - description: (string, optional) Description\n  - lastupdateOn: (number, optional) Lastupdate On\n  - imageId: (string, optional) Image Id\n  - currTaskIdx: (number, optional) Curr Task Idx\n  - addedOn: (number, optional) Added On\n  - tasks: (array[map], optional)\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - currWorkItemIdx: (number, optional) Curr Work Item Idx\n    - taskSeqNo: (number, optional) Task Seq No\n    - endTime: (number, optional) End Time\n    - startTime: (number, optional) Start Time\n    - workItemList: (array[map], optional)\n      - state: (string, optional) State\n      - command: (string, optional) Command\n      - outputStr: (string, optional) Output Str\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - timeTaken: (number, optional) Time Taken\n    - timeTaken: (number, optional) Time Taken\n    - name: (string, optional) Name\n  - addToInventory: (boolean, optional) Add To Inventory\n  - instanceType: (string, optional) Instance Type\n  - endTime: (number, optional) End Time\n  - execTime: (number, optional) Exec Time\n  - startTime: (number, optional) Start Time\n  - useState: (string, optional) Use State\n  - configId: (string, optional) Config Id\n  - name: (string, optional) Name\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"_id\": \"string\",\n  \"state\": \"string\",\n  \"type\": \"string\",\n  \"description\": \"string\",\n  \"lastupdateOn\": 0.1,\n  \"imageId\": \"string\",\n  \"currTaskIdx\": 0.1,\n  \"addedOn\": 0.1,\n  \"tasks\": [\n    {\n      \"state\": \"string\",\n      \"type\": \"string\",\n      \"currWorkItemIdx\": 0.1,\n      \"taskSeqNo\": 0.1,\n      \"endTime\": 0.1,\n      \"startTime\": 0.1,\n      \"workItemList\": [\n        {\n          \"state\": \"string\",\n          \"command\": \"string\",\n          \"outputStr\": \"string\",\n          \"endTime\": 0.1,\n          \"startTime\": 0.1,\n          \"timeTaken\": 0.1\n        }\n      ],\n      \"timeTaken\": 0.1,\n      \"name\": \"string\"\n    }\n  ],\n  \"addToInventory\": false,\n  \"instanceType\": \"string\",\n  \"endTime\": 0.1,\n  \"execTime\": 0.1,\n  \"startTime\": 0.1,\n  \"useState\": \"string\",\n  \"configId\": \"string\",\n  \"name\": \"string\",\n  \"version\": 0.1,\n  \"tenantId\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update Workflow",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"_id\": \"string\",\n  \"addToInventory\": false,\n  \"addedOn\": 0,\n  \"configId\": \"string\",\n  \"currTaskIdx\": 0,\n  \"description\": \"string\",\n  \"endTime\": 0,\n  \"execTime\": 0,\n  \"imageId\": \"string\",\n  \"instanceType\": \"string\",\n  \"lastupdateOn\": 0,\n  \"name\": \"string\",\n  \"startTime\": 0,\n  \"state\": \"string\",\n  \"tasks\": [\n    {\n      \"currWorkItemIdx\": 0,\n      \"endTime\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"taskSeqNo\": 0,\n      \"timeTaken\": 0,\n      \"type\": \"string\",\n      \"workItemList\": [\n        {\n          \"command\": \"string\",\n          \"endTime\": 0,\n          \"outputStr\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"timeTaken\": 0\n        }\n      ]\n    }\n  ],\n  \"tenantId\": \"string\",\n  \"type\": \"string\",\n  \"useState\": \"string\",\n  \"version\": 0\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow/:id",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-workflow",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(string, required) id"
										}
									]
								},
								"description": "Updates an existing workflow\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - addToInventory: (boolean, optional)\n  - addedOn: (integer, optional)\n  - configId: (string, optional)\n  - currTaskIdx: (integer, optional)\n  - description: (string, optional)\n  - endTime: (integer, optional)\n  - execTime: (integer, optional)\n  - imageId: (string, optional)\n  - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n  - lastupdateOn: (integer, optional)\n  - name: (string, optional)\n  - startTime: (integer, optional)\n  - state: (string, optional)\n  - tasks: (array[map], optional)\n    - currWorkItemIdx: (integer, optional)\n    - endTime: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - taskSeqNo: (integer, optional)\n    - timeTaken: (integer, optional)\n    - type: (string, optional)\n    - workItemList: (array[map], optional)\n      - command: (string, optional)\n      - endTime: (integer, optional)\n      - outputStr: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - timeTaken: (integer, optional)\n  - tenantId: (string, optional)\n  - type: (string, optional)\n  - useState: (string, optional)\n  - version: (integer, optional)\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - state: (string, optional) State\n  - type: (string, optional) Type\n  - description: (string, optional) Description\n  - lastupdateOn: (number, optional) Lastupdate On\n  - imageId: (string, optional) Image Id\n  - currTaskIdx: (number, optional) Curr Task Idx\n  - addedOn: (number, optional) Added On\n  - tasks: (array[map], optional)\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - currWorkItemIdx: (number, optional) Curr Work Item Idx\n    - taskSeqNo: (number, optional) Task Seq No\n    - endTime: (number, optional) End Time\n    - startTime: (number, optional) Start Time\n    - workItemList: (array[map], optional)\n      - state: (string, optional) State\n      - command: (string, optional) Command\n      - outputStr: (string, optional) Output Str\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - timeTaken: (number, optional) Time Taken\n    - timeTaken: (number, optional) Time Taken\n    - name: (string, optional) Name\n  - addToInventory: (boolean, optional) Add To Inventory\n  - instanceType: (string, optional) Instance Type\n  - endTime: (number, optional) End Time\n  - execTime: (number, optional) Exec Time\n  - startTime: (number, optional) Start Time\n  - useState: (string, optional) Use State\n  - configId: (string, optional) Config Id\n  - name: (string, optional) Name\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"_id\": \"string\",\n  \"addToInventory\": false,\n  \"addedOn\": 0,\n  \"configId\": \"string\",\n  \"currTaskIdx\": 0,\n  \"description\": \"string\",\n  \"endTime\": 0,\n  \"execTime\": 0,\n  \"imageId\": \"string\",\n  \"instanceType\": \"string\",\n  \"lastupdateOn\": 0,\n  \"name\": \"string\",\n  \"startTime\": 0,\n  \"state\": \"string\",\n  \"tasks\": [\n    {\n      \"currWorkItemIdx\": 0,\n      \"endTime\": 0,\n      \"name\": \"string\",\n      \"startTime\": 0,\n      \"state\": \"string\",\n      \"taskSeqNo\": 0,\n      \"timeTaken\": 0,\n      \"type\": \"string\",\n      \"workItemList\": [\n        {\n          \"command\": \"string\",\n          \"endTime\": 0,\n          \"outputStr\": \"string\",\n          \"startTime\": 0,\n          \"state\": \"string\",\n          \"timeTaken\": 0\n        }\n      ]\n    }\n  ],\n  \"tenantId\": \"string\",\n  \"type\": \"string\",\n  \"useState\": \"string\",\n  \"version\": 0\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow/:id",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-workflow",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "(string, required) id"
												}
											]
										},
										"description": "Updates an existing workflow\n\n###### Request Model\n- root: (map, optional)\n  - _id: (string, optional)\n  - addToInventory: (boolean, optional)\n  - addedOn: (integer, optional)\n  - configId: (string, optional)\n  - currTaskIdx: (integer, optional)\n  - description: (string, optional)\n  - endTime: (integer, optional)\n  - execTime: (integer, optional)\n  - imageId: (string, optional)\n  - instanceType: (enum[\"SystemWorkflow\",\"UserWorkflow\",\"SystemResetWorkflow\"], optional)\n  - lastupdateOn: (integer, optional)\n  - name: (string, optional)\n  - startTime: (integer, optional)\n  - state: (string, optional)\n  - tasks: (array[map], optional)\n    - currWorkItemIdx: (integer, optional)\n    - endTime: (integer, optional)\n    - name: (string, optional)\n    - startTime: (integer, optional)\n    - state: (string, optional)\n    - taskSeqNo: (integer, optional)\n    - timeTaken: (integer, optional)\n    - type: (string, optional)\n    - workItemList: (array[map], optional)\n      - command: (string, optional)\n      - endTime: (integer, optional)\n      - outputStr: (string, optional)\n      - startTime: (integer, optional)\n      - state: (string, optional)\n      - timeTaken: (integer, optional)\n  - tenantId: (string, optional)\n  - type: (string, optional)\n  - useState: (string, optional)\n  - version: (integer, optional)\n\n###### Response Model\n- root: (map, optional)\n  - _id: (string, optional)  Id\n  - state: (string, optional) State\n  - type: (string, optional) Type\n  - description: (string, optional) Description\n  - lastupdateOn: (number, optional) Lastupdate On\n  - imageId: (string, optional) Image Id\n  - currTaskIdx: (number, optional) Curr Task Idx\n  - addedOn: (number, optional) Added On\n  - tasks: (array[map], optional)\n    - state: (string, optional) State\n    - type: (string, optional) Type\n    - currWorkItemIdx: (number, optional) Curr Work Item Idx\n    - taskSeqNo: (number, optional) Task Seq No\n    - endTime: (number, optional) End Time\n    - startTime: (number, optional) Start Time\n    - workItemList: (array[map], optional)\n      - state: (string, optional) State\n      - command: (string, optional) Command\n      - outputStr: (string, optional) Output Str\n      - endTime: (number, optional) End Time\n      - startTime: (number, optional) Start Time\n      - timeTaken: (number, optional) Time Taken\n    - timeTaken: (number, optional) Time Taken\n    - name: (string, optional) Name\n  - addToInventory: (boolean, optional) Add To Inventory\n  - instanceType: (string, optional) Instance Type\n  - endTime: (number, optional) End Time\n  - execTime: (number, optional) Exec Time\n  - startTime: (number, optional) Start Time\n  - useState: (string, optional) Use State\n  - configId: (string, optional) Config Id\n  - name: (string, optional) Name\n  - version: (number, optional) Version\n  - tenantId: (string, optional) Tenant Id"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"_id\": \"string\",\n  \"state\": \"string\",\n  \"type\": \"string\",\n  \"description\": \"string\",\n  \"lastupdateOn\": 0.1,\n  \"imageId\": \"string\",\n  \"currTaskIdx\": 0.1,\n  \"addedOn\": 0.1,\n  \"tasks\": [\n    {\n      \"state\": \"string\",\n      \"type\": \"string\",\n      \"currWorkItemIdx\": 0.1,\n      \"taskSeqNo\": 0.1,\n      \"endTime\": 0.1,\n      \"startTime\": 0.1,\n      \"workItemList\": [\n        {\n          \"state\": \"string\",\n          \"command\": \"string\",\n          \"outputStr\": \"string\",\n          \"endTime\": 0.1,\n          \"startTime\": 0.1,\n          \"timeTaken\": 0.1\n        }\n      ],\n      \"timeTaken\": 0.1,\n      \"name\": \"string\"\n    }\n  ],\n  \"addToInventory\": false,\n  \"instanceType\": \"string\",\n  \"endTime\": 0.1,\n  \"execTime\": 0.1,\n  \"startTime\": 0.1,\n  \"useState\": \"string\",\n  \"configId\": \"string\",\n  \"name\": \"string\",\n  \"version\": 0.1,\n  \"tenantId\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get Workflow Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow/count?name=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"onboarding",
										"pnp-workflow",
										"count"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "(array, optional) Workflow Name"
										}
									]
								},
								"description": "Returns the workflow count\n\n###### Response Model\n- root: (map, optional)\n  - response: (number, optional) Response"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/onboarding/pnp-workflow/count?name=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"onboarding",
												"pnp-workflow",
												"count"
											],
											"query": [
												{
													"key": "name",
													"value": "",
													"description": "(array, optional) Workflow Name"
												}
											]
										},
										"description": "Returns the workflow count\n\n###### Response Model\n- root: (map, optional)\n  - response: (number, optional) Response"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": 0.1\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "SWIM",
					"item": [
						{
							"name": "Trigger software image activation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									},
									{
										"key": "Client-Type",
										"value": null,
										"description": "(string, optional) Client-type (Optional)"
									},
									{
										"key": "Client-Url",
										"value": null,
										"description": "(string, optional) Client-url (Optional)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"activateLowerImageVersion\": false,\n    \"deviceUpgradeMode\": \"string\",\n    \"deviceUuid\": \"string\",\n    \"distributeIfNeeded\": false,\n    \"imageUuidList\": [\n      \"string\"\n    ],\n    \"smuImageUuidList\": [\n      \"string\"\n    ]\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/image/activation/device?scheduleValidate=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"image",
										"activation",
										"device"
									],
									"query": [
										{
											"key": "scheduleValidate",
											"value": "",
											"description": "(boolean, optional) scheduleValidate, validates data before schedule (Optional)"
										}
									]
								},
								"description": "Activates a software image on a given device. Software image must be present in the device flash\n\n###### Request Model\n- root: (array[map], optional)\n  - activateLowerImageVersion: (boolean, optional)\n  - deviceUpgradeMode: (string, optional)\n  - deviceUuid: (string, optional)\n  - distributeIfNeeded: (boolean, optional)\n  - imageUuidList: (array[string], optional)\n  - smuImageUuidList: (array[string], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											},
											{
												"key": "Client-Type",
												"value": null,
												"description": "(string, optional) Client-type (Optional)"
											},
											{
												"key": "Client-Url",
												"value": null,
												"description": "(string, optional) Client-url (Optional)"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"activateLowerImageVersion\": false,\n    \"deviceUpgradeMode\": \"string\",\n    \"deviceUuid\": \"string\",\n    \"distributeIfNeeded\": false,\n    \"imageUuidList\": [\n      \"string\"\n    ],\n    \"smuImageUuidList\": [\n      \"string\"\n    ]\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/image/activation/device?scheduleValidate=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"image",
												"activation",
												"device"
											],
											"query": [
												{
													"key": "scheduleValidate",
													"value": "",
													"description": "(boolean, optional) scheduleValidate, validates data before schedule (Optional)"
												}
											]
										},
										"description": "Activates a software image on a given device. Software image must be present in the device flash\n\n###### Request Model\n- root: (array[map], optional)\n  - activateLowerImageVersion: (boolean, optional)\n  - deviceUpgradeMode: (string, optional)\n  - deviceUuid: (string, optional)\n  - distributeIfNeeded: (boolean, optional)\n  - imageUuidList: (array[string], optional)\n  - smuImageUuidList: (array[string], optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Trigger software image distribution",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"deviceUuid\": \"string\",\n    \"imageUuid\": \"string\"\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/image/distribution",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"image",
										"distribution"
									]
								},
								"description": "Distributes a software image on a given device. Software image must be imported successfully into DNA Center before it can be distributed\n\n###### Request Model\n- root: (array[map], optional)\n  - deviceUuid: (string, optional)\n  - imageUuid: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"deviceUuid\": \"string\",\n    \"imageUuid\": \"string\"\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/image/distribution",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"image",
												"distribution"
											]
										},
										"description": "Distributes a software image on a given device. Software image must be imported successfully into DNA Center before it can be distributed\n\n###### Request Model\n- root: (array[map], optional)\n  - deviceUuid: (string, optional)\n  - imageUuid: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Get software image details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/image/importation?imageUuid=&name=&family=&applicationType=&imageIntegrityStatus=&version=&imageSeries=&imageName=&isTaggedGolden=&isCCORecommended=&isCCOLatest=&createdTime=&imageSizeGreaterThan=&imageSizeLesserThan=&sortBy=&sortOrder=asc&limit=&offset=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"image",
										"importation"
									],
									"query": [
										{
											"key": "imageUuid",
											"value": "",
											"description": "(string, optional) imageUuid"
										},
										{
											"key": "name",
											"value": "",
											"description": "(string, optional) name"
										},
										{
											"key": "family",
											"value": "",
											"description": "(string, optional) family"
										},
										{
											"key": "applicationType",
											"value": "",
											"description": "(string, optional) applicationType"
										},
										{
											"key": "imageIntegrityStatus",
											"value": "",
											"description": "(string, optional) imageIntegrityStatus - FAILURE, UNKNOWN, VERIFIED"
										},
										{
											"key": "version",
											"value": "",
											"description": "(string, optional) software Image Version"
										},
										{
											"key": "imageSeries",
											"value": "",
											"description": "(string, optional) image Series"
										},
										{
											"key": "imageName",
											"value": "",
											"description": "(string, optional) image Name"
										},
										{
											"key": "isTaggedGolden",
											"value": "",
											"description": "(boolean, optional) is Tagged Golden"
										},
										{
											"key": "isCCORecommended",
											"value": "",
											"description": "(boolean, optional) is recommended from cisco.com"
										},
										{
											"key": "isCCOLatest",
											"value": "",
											"description": "(boolean, optional) is latest from cisco.com"
										},
										{
											"key": "createdTime",
											"value": "",
											"description": "(integer, optional) time in milliseconds (epoch format)"
										},
										{
											"key": "imageSizeGreaterThan",
											"value": "",
											"description": "(integer, optional) size in bytes"
										},
										{
											"key": "imageSizeLesserThan",
											"value": "",
											"description": "(integer, optional) size in bytes"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "(string, optional) sort results by this field"
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "(string, optional) sort order - 'asc' or 'des'. Default is asc"
										},
										{
											"key": "limit",
											"value": "",
											"description": "(integer, optional) limit"
										},
										{
											"key": "offset",
											"value": "",
											"description": "(integer, optional) offset"
										}
									]
								},
								"description": "Returns software image list based on a filter criteria. For example: \"filterbyName = cat3k%\"\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - applicableDevicesForImage: (array[map], optional)\n      - mdfId: (string, optional)\n      - productId: (array[string], optional)\n      - productName: (string, optional)\n    - applicationType: (string, optional)\n    - createdTime: (string, optional)\n    - extendedAttributes: (map, optional)\n    - family: (string, optional)\n    - feature: (string, optional)\n    - fileServiceId: (string, optional)\n    - fileSize: (string, optional)\n    - imageIntegrityStatus: (string, optional)\n    - imageName: (string, optional)\n    - imageSeries: (array[string], optional)\n    - imageSource: (string, optional)\n    - imageType: (string, optional)\n    - imageUuid: (string, optional)\n    - importSourceType: (enum[\"DEVICE\",\"REMOTEURL\",\"CCO\",\"FILESYSTEM\"], optional)\n    - isTaggedGolden: (boolean, optional)\n    - md5Checksum: (string, optional)\n    - name: (string, optional)\n    - profileInfo: (array[map], optional)\n      - description: (string, optional)\n      - extendedAttributes: (map, optional)\n      - memory: (integer, optional)\n      - productType: (string, optional)\n      - profileName: (string, optional)\n      - shares: (integer, optional)\n      - vCpu: (integer, optional)\n    - shaCheckSum: (string, optional)\n    - vendor: (string, optional)\n    - version: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/image/importation?imageUuid=&name=&family=&applicationType=&imageIntegrityStatus=&version=&imageSeries=&imageName=&isTaggedGolden=&isCCORecommended=&isCCOLatest=&createdTime=&imageSizeGreaterThan=&imageSizeLesserThan=&sortBy=&sortOrder=asc&limit=&offset=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"image",
												"importation"
											],
											"query": [
												{
													"key": "imageUuid",
													"value": "",
													"description": "(string, optional) imageUuid"
												},
												{
													"key": "name",
													"value": "",
													"description": "(string, optional) name"
												},
												{
													"key": "family",
													"value": "",
													"description": "(string, optional) family"
												},
												{
													"key": "applicationType",
													"value": "",
													"description": "(string, optional) applicationType"
												},
												{
													"key": "imageIntegrityStatus",
													"value": "",
													"description": "(string, optional) imageIntegrityStatus - FAILURE, UNKNOWN, VERIFIED"
												},
												{
													"key": "version",
													"value": "",
													"description": "(string, optional) software Image Version"
												},
												{
													"key": "imageSeries",
													"value": "",
													"description": "(string, optional) image Series"
												},
												{
													"key": "imageName",
													"value": "",
													"description": "(string, optional) image Name"
												},
												{
													"key": "isTaggedGolden",
													"value": "",
													"description": "(boolean, optional) is Tagged Golden"
												},
												{
													"key": "isCCORecommended",
													"value": "",
													"description": "(boolean, optional) is recommended from cisco.com"
												},
												{
													"key": "isCCOLatest",
													"value": "",
													"description": "(boolean, optional) is latest from cisco.com"
												},
												{
													"key": "createdTime",
													"value": "",
													"description": "(integer, optional) time in milliseconds (epoch format)"
												},
												{
													"key": "imageSizeGreaterThan",
													"value": "",
													"description": "(integer, optional) size in bytes"
												},
												{
													"key": "imageSizeLesserThan",
													"value": "",
													"description": "(integer, optional) size in bytes"
												},
												{
													"key": "sortBy",
													"value": "",
													"description": "(string, optional) sort results by this field"
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "(string, optional) sort order - 'asc' or 'des'. Default is asc"
												},
												{
													"key": "limit",
													"value": "",
													"description": "(integer, optional) limit"
												},
												{
													"key": "offset",
													"value": "",
													"description": "(integer, optional) offset"
												}
											]
										},
										"description": "Returns software image list based on a filter criteria. For example: \"filterbyName = cat3k%\"\n\n###### Response Model\n- root: (map, optional)\n  - response: (array[map], optional)\n    - applicableDevicesForImage: (array[map], optional)\n      - mdfId: (string, optional)\n      - productId: (array[string], optional)\n      - productName: (string, optional)\n    - applicationType: (string, optional)\n    - createdTime: (string, optional)\n    - extendedAttributes: (map, optional)\n    - family: (string, optional)\n    - feature: (string, optional)\n    - fileServiceId: (string, optional)\n    - fileSize: (string, optional)\n    - imageIntegrityStatus: (string, optional)\n    - imageName: (string, optional)\n    - imageSeries: (array[string], optional)\n    - imageSource: (string, optional)\n    - imageType: (string, optional)\n    - imageUuid: (string, optional)\n    - importSourceType: (enum[\"DEVICE\",\"REMOTEURL\",\"CCO\",\"FILESYSTEM\"], optional)\n    - isTaggedGolden: (boolean, optional)\n    - md5Checksum: (string, optional)\n    - name: (string, optional)\n    - profileInfo: (array[map], optional)\n      - description: (string, optional)\n      - extendedAttributes: (map, optional)\n      - memory: (integer, optional)\n      - productType: (string, optional)\n      - profileName: (string, optional)\n      - shares: (integer, optional)\n      - vCpu: (integer, optional)\n    - shaCheckSum: (string, optional)\n    - vendor: (string, optional)\n    - version: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": [\n    {\n      \"applicableDevicesForImage\": [\n        {\n          \"mdfId\": \"string\",\n          \"productId\": [\n            \"string\"\n          ],\n          \"productName\": \"string\"\n        }\n      ],\n      \"applicationType\": \"string\",\n      \"createdTime\": \"string\",\n      \"extendedAttributes\": {\n        \n      },\n      \"family\": \"string\",\n      \"feature\": \"string\",\n      \"fileServiceId\": \"string\",\n      \"fileSize\": \"string\",\n      \"imageIntegrityStatus\": \"string\",\n      \"imageName\": \"string\",\n      \"imageSeries\": [\n        \"string\"\n      ],\n      \"imageSource\": \"string\",\n      \"imageType\": \"string\",\n      \"imageUuid\": \"string\",\n      \"importSourceType\": \"string\",\n      \"isTaggedGolden\": false,\n      \"md5Checksum\": \"string\",\n      \"name\": \"string\",\n      \"profileInfo\": [\n        {\n          \"description\": \"string\",\n          \"extendedAttributes\": {\n            \n          },\n          \"memory\": 0,\n          \"productType\": \"string\",\n          \"profileName\": \"string\",\n          \"shares\": 0,\n          \"vCpu\": 0\n        }\n      ],\n      \"shaCheckSum\": \"string\",\n      \"vendor\": \"string\",\n      \"version\": \"string\"\n    }\n  ],\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Import local software image",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/image/importation/source/file?isThirdParty=&thirdPartyVendor=&thirdPartyImageFamily=&thirdPartyApplicationType=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"image",
										"importation",
										"source",
										"file"
									],
									"query": [
										{
											"key": "isThirdParty",
											"value": "",
											"description": "(boolean, optional) Third party Image check"
										},
										{
											"key": "thirdPartyVendor",
											"value": "",
											"description": "(string, optional) Third Party Vendor"
										},
										{
											"key": "thirdPartyImageFamily",
											"value": "",
											"description": "(string, optional) Third Party image family"
										},
										{
											"key": "thirdPartyApplicationType",
											"value": "",
											"description": "(string, optional) Third Party Application Type"
										}
									]
								},
								"description": "Fetches a software image from local file system and uploads to DNA Center. Supported software image files extensions are bin, img, tar, smu, pie, aes, iso, ova, tar_gz and qcow2\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/image/importation/source/file?isThirdParty=&thirdPartyVendor=&thirdPartyImageFamily=&thirdPartyApplicationType=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"image",
												"importation",
												"source",
												"file"
											],
											"query": [
												{
													"key": "isThirdParty",
													"value": "",
													"description": "(boolean, optional) Third party Image check"
												},
												{
													"key": "thirdPartyVendor",
													"value": "",
													"description": "(string, optional) Third Party Vendor"
												},
												{
													"key": "thirdPartyImageFamily",
													"value": "",
													"description": "(string, optional) Third Party image family"
												},
												{
													"key": "thirdPartyApplicationType",
													"value": "",
													"description": "(string, optional) Third Party Application Type"
												}
											]
										},
										"description": "Fetches a software image from local file system and uploads to DNA Center. Supported software image files extensions are bin, img, tar, smu, pie, aes, iso, ova, tar_gz and qcow2\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Import software image via URL",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Request body content type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"applicationType\": \"string\",\n    \"imageFamily\": \"string\",\n    \"sourceURL\": \"string\",\n    \"thirdParty\": false,\n    \"vendor\": \"string\"\n  }\n]"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/image/importation/source/url?scheduleAt=&scheduleDesc=&scheduleOrigin=",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"image",
										"importation",
										"source",
										"url"
									],
									"query": [
										{
											"key": "scheduleAt",
											"value": "",
											"description": "(string, optional) Epoch Time (The number of milli-seconds since January 1 1970 UTC) at which the distribution should be scheduled (Optional) "
										},
										{
											"key": "scheduleDesc",
											"value": "",
											"description": "(string, optional) Custom Description (Optional)"
										},
										{
											"key": "scheduleOrigin",
											"value": "",
											"description": "(string, optional) Originator of this call (Optional)"
										}
									]
								},
								"description": "Fetches a software image from remote file system (using URL for HTTP/FTP) and uploads to DNA Center. Supported image files extensions are bin, img, tar, smu, pie, aes, iso, ova, tar_gz and qcow2\n\n###### Request Model\n- root: (array[map], optional)\n  - applicationType: (string, optional)\n  - imageFamily: (string, optional)\n  - sourceURL: (string, optional)\n  - thirdParty: (boolean, optional)\n  - vendor: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Request body content type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"applicationType\": \"string\",\n    \"imageFamily\": \"string\",\n    \"sourceURL\": \"string\",\n    \"thirdParty\": false,\n    \"vendor\": \"string\"\n  }\n]"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/image/importation/source/url?scheduleAt=&scheduleDesc=&scheduleOrigin=",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"image",
												"importation",
												"source",
												"url"
											],
											"query": [
												{
													"key": "scheduleAt",
													"value": "",
													"description": "(string, optional) Epoch Time (The number of milli-seconds since January 1 1970 UTC) at which the distribution should be scheduled (Optional) "
												},
												{
													"key": "scheduleDesc",
													"value": "",
													"description": "(string, optional) Custom Description (Optional)"
												},
												{
													"key": "scheduleOrigin",
													"value": "",
													"description": "(string, optional) Originator of this call (Optional)"
												}
											]
										},
										"description": "Fetches a software image from remote file system (using URL for HTTP/FTP) and uploads to DNA Center. Supported image files extensions are bin, img, tar, smu, pie, aes, iso, ova, tar_gz and qcow2\n\n###### Request Model\n- root: (array[map], optional)\n  - applicationType: (string, optional)\n  - imageFamily: (string, optional)\n  - sourceURL: (string, optional)\n  - thirdParty: (boolean, optional)\n  - vendor: (string, optional)\n\n###### Response Model\n- root: (map, optional)\n  - response: (map, optional)\n    - taskId: (any, optional)\n    - url: (string, optional)\n  - version: (string, optional)"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"response\": {\n    \"taskId\": \"any\",\n    \"url\": \"string\"\n  },\n  \"version\": \"string\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Site Profile",
					"item": [
						{
							"name": "NFV Provisioning Detail",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "__runsync",
										"value": false,
										"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
									},
									{
										"key": "__timeout",
										"value": "10",
										"description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
									},
									{
										"key": "__persistbapioutput",
										"value": "true",
										"description": "(boolean, required) Persist bapi sync response"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"device_ip\": \"string\"\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/nfv-provision-detail",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"nfv-provision-detail"
									]
								},
								"description": "Checks the provisioning detail of an ENCS device including log information.\n\n###### Request Model\n- root: (map, required)\n  - device_ip: (string, required) Device Ip\n\n###### Response Model\n- root: (map, optional)\n  - executionId: (string, optional) Execution Id\n  - executionStatusUrl: (string, optional) Execution Status Url\n  - message: (string, optional) Message"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "__runsync",
												"value": false,
												"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
											},
											{
												"key": "__timeout",
												"value": "10",
												"description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
											},
											{
												"key": "__persistbapioutput",
												"value": "true",
												"description": "(boolean, required) Persist bapi sync response"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"device_ip\": \"string\"\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/nfv-provision-detail",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"nfv-provision-detail"
											]
										},
										"description": "Checks the provisioning detail of an ENCS device including log information.\n\n###### Request Model\n- root: (map, required)\n  - device_ip: (string, required) Device Ip\n\n###### Response Model\n- root: (map, optional)\n  - executionId: (string, optional) Execution Id\n  - executionStatusUrl: (string, optional) Execution Status Url\n  - message: (string, optional) Message"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"executionId\": \"string\",\n  \"executionStatusUrl\": \"string\",\n  \"message\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Provision NFV",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"description": "(string, required) Authorization token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "(string, required) Data format"
									},
									{
										"key": "__runsync",
										"value": false,
										"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
									},
									{
										"key": "__timeout",
										"value": "10",
										"description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
									},
									{
										"key": "__persistbapioutput",
										"value": "true",
										"description": "(boolean, required) Persist bapi sync response"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"siteProfile\": [\n    {\n      \"siteProfileName\": \"string\",\n      \"device\": [\n        {\n          \"deviceType\": \"string\",\n          \"tagName\": \"string\",\n          \"serviceProviders\": [\n            {\n              \"serviceProvider\": \"string\",\n              \"linkType\": \"string\",\n              \"connect\": false,\n              \"defaultGateway\": false\n            }\n          ],\n          \"dia\": false,\n          \"services\": [\n            {\n              \"type\": \"string\",\n              \"profile\": \"string\",\n              \"mode\": \"string\"\n            }\n          ],\n          \"customServices\": [\n            {\n              \"name\": \"string\",\n              \"applicationType\": \"string\",\n              \"profile\": \"string\"\n            }\n          ],\n          \"customNetworks\": [\n            {\n              \"name\": \"string\",\n              \"servicesToConnect\": [\n                {\n                  \"service\": \"string\"\n                }\n              ]\n            }\n          ],\n          \"vlan\": [\n            {\n              \"type\": \"string\",\n              \"id\": \"string\"\n            }\n          ]\n        }\n      ],\n      \"customTemplate\": [\n        {\n          \"deviceType\": \"string\",\n          \"template\": \"string\"\n        }\n      ]\n    }\n  ],\n  \"provisioning\": [\n    {\n      \"site\": {\n        \"siteProfileName\": \"string\",\n        \"area\": {\n          \"name\": \"string\",\n          \"parentName\": \"string\"\n        },\n        \"building\": {\n          \"name\": \"string\",\n          \"address\": \"string\"\n        },\n        \"floor\": {\n          \"name\": \"string\",\n          \"parentName\": \"string\"\n        }\n      },\n      \"templateParam\": {\n        \"nfvis\": {\n          \"var1\": \"string\"\n        },\n        \"asav\": {\n          \"var1\": \"string\"\n        }\n      },\n      \"networksettings\": {\n        \"ipPool\": {\n          \"globalPool\": {\n            \"name\": \"string\"\n          }\n        }\n      },\n      \"device\": [\n        {\n          \"ip\": \"string\",\n          \"deviceSerialNumber\": \"string\",\n          \"tagName\": \"string\",\n          \"serviceProviders\": [\n            {\n              \"serviceProvider\": \"string\",\n              \"wanInterface\": {\n                \"ipAddress\": \"string\",\n                \"interfaceName\": \"string\",\n                \"subnetmask\": \"string\",\n                \"bandwidth\": \"string\",\n                \"gateway\": \"string\"\n              }\n            }\n          ],\n          \"services\": [\n            {\n              \"type\": \"string\",\n              \"mode\": \"string\",\n              \"systemIp\": \"string\",\n              \"centralManagerIP\": \"string\",\n              \"centralRegistrationKey\": \"string\",\n              \"commonKey\": \"string\",\n              \"adminPasswordHash\": \"string\"\n            }\n          ],\n          \"vlan\": [\n            {\n              \"type\": \"string\",\n              \"id\": \"string\",\n              \"interfaces\": \"string\",\n              \"network\": \"string\"\n            }\n          ],\n          \"subPools\": [\n            {\n              \"type\": \"string\",\n              \"name\": \"string\",\n              \"ipSubnet\": \"string\",\n              \"gateway\": \"string\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/provision-nfv",
									"protocol": "https",
									"host": [
										"{{dnac}}"
									],
									"port": "{{port}}",
									"path": [
										"dna",
										"intent",
										"api",
										"v1",
										"provision-nfv"
									]
								},
								"description": "Design and Provision single/multi NFV device with given site/area/building/floor information.\n\n###### Request Model\n- root: (map, required)\n  - siteProfile: (array[map], required)\n    - siteProfileName: (string, required) Site Profile Name\n    - device: (array[map], required)\n      - deviceType: (enum[\"ENCS5100\",\"ENCS5400\"], required) Device Type\n      - tagName: (string, required) Tag Name\n      - serviceProviders: (array[map], required)\n        - serviceProvider: (string, required) Service Provider\n        - linkType: (enum[\"GigabitEthernet\"], required) Link Type\n        - connect: (boolean, required) Connect\n        - defaultGateway: (boolean, required) Default Gateway\n      - dia: (boolean, required) Dia\n      - services: (array[map], required)\n        - type: (enum[\"isr\",\"vedge\",\"waas\",\"asa\",\"ngfw\",\"paloalto\",\"fortinet\",\"checkpoint\",\"riverbed\",\"silverpeak\"], required) Type\n        - profile: (string, required) Profile\n        - mode: (string, optional) Mode\n      - customServices: (array[map], required)\n        - name: (string, required) Name\n        - applicationType: (string, required) Application Type\n        - profile: (string, required) Profile\n      - customNetworks: (array[map], optional)\n        - name: (string, required) Name\n        - servicesToConnect: (array[map], required)\n          - service: (string, required) Service\n      - vlan: (array[map], optional)\n        - type: (string, required) Type\n        - id: (string, required) Id\n    - customTemplate: (array[map], optional)\n      - deviceType: (enum[\"NFVIS\",\"ASAv\"], required) Device Type\n      - template: (string, required) Template\n  - provisioning: (array[map], required)\n    - site: (map, required)\n      - siteProfileName: (string, required) Site Profile Name\n      - area: (map, required)\n        - name: (string, required) Name\n        - parentName: (string, required) Parent Name\n      - building: (map, required)\n        - name: (string, required) Name\n        - address: (string, required) Address\n      - floor: (map, optional)\n        - name: (string, required) Name\n        - parentName: (string, required) Parent Name\n    - templateParam: (map, optional)\n      - nfvis: (map, optional)\n        - var1: (string, optional) Var1\n      - asav: (map, optional)\n        - var1: (string, optional) Var1\n    - networksettings: (map, required)\n      - ipPool: (map, required)\n        - globalPool: (map, required)\n          - name: (string, required) Name\n    - device: (array[map], required)\n      - ip: (string, optional) Ip\n      - deviceSerialNumber: (string, optional) Device Serial Number\n      - tagName: (string, required) Tag Name\n      - serviceProviders: (array[map], required)\n        - serviceProvider: (string, required) Service Provider\n        - wanInterface: (map, optional)\n          - ipAddress: (string, required) Ip Address\n          - interfaceName: (string, required) Interface Name\n          - subnetmask: (string, required) Subnetmask\n          - bandwidth: (string, required) Bandwidth\n          - gateway: (string, required) Gateway\n      - services: (array[map], required)\n        - type: (string, required) Type\n        - mode: (string, optional) Mode\n        - systemIp: (string, optional) System Ip\n        - centralManagerIP: (string, optional) Central Manager IP\n        - centralRegistrationKey: (string, optional) Central Registration Key\n        - commonKey: (string, optional) Common Key\n        - adminPasswordHash: (string, optional) Admin Password Hash\n      - vlan: (array[map], optional)\n        - type: (string, required) Type\n        - id: (string, required) Id\n        - interfaces: (string, required) Interfaces\n        - network: (string, optional) Network\n      - subPools: (array[map], required)\n        - type: (enum[\"Lan\",\"Management\",\"Service\",\"Wan\",\"Generic\"], required) Type\n        - name: (string, required) Name\n        - ipSubnet: (string, required) Ip Subnet\n        - gateway: (string, required) Gateway\n\n###### Response Model\n- root: (map, optional)\n  - executionId: (string, optional) Execution Id\n  - executionStatusUrl: (string, optional) Execution Status Url\n  - message: (string, optional) Message"
							},
							"response": [
								{
									"name": "Example Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Token",
												"value": "{{token}}",
												"description": "(string, required) Authorization token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "(string, required) Data format"
											},
											{
												"key": "__runsync",
												"value": false,
												"description": "(boolean, required) Enable this parameter to execute the API and return a response synchronously"
											},
											{
												"key": "__timeout",
												"value": "10",
												"description": "(number, optional) During synchronous execution, this defines the maximum time to wait for a response, before the API execution is terminated"
											},
											{
												"key": "__persistbapioutput",
												"value": "true",
												"description": "(boolean, required) Persist bapi sync response"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"siteProfile\": [\n    {\n      \"siteProfileName\": \"string\",\n      \"device\": [\n        {\n          \"deviceType\": \"string\",\n          \"tagName\": \"string\",\n          \"serviceProviders\": [\n            {\n              \"serviceProvider\": \"string\",\n              \"linkType\": \"string\",\n              \"connect\": false,\n              \"defaultGateway\": false\n            }\n          ],\n          \"dia\": false,\n          \"services\": [\n            {\n              \"type\": \"string\",\n              \"profile\": \"string\",\n              \"mode\": \"string\"\n            }\n          ],\n          \"customServices\": [\n            {\n              \"name\": \"string\",\n              \"applicationType\": \"string\",\n              \"profile\": \"string\"\n            }\n          ],\n          \"customNetworks\": [\n            {\n              \"name\": \"string\",\n              \"servicesToConnect\": [\n                {\n                  \"service\": \"string\"\n                }\n              ]\n            }\n          ],\n          \"vlan\": [\n            {\n              \"type\": \"string\",\n              \"id\": \"string\"\n            }\n          ]\n        }\n      ],\n      \"customTemplate\": [\n        {\n          \"deviceType\": \"string\",\n          \"template\": \"string\"\n        }\n      ]\n    }\n  ],\n  \"provisioning\": [\n    {\n      \"site\": {\n        \"siteProfileName\": \"string\",\n        \"area\": {\n          \"name\": \"string\",\n          \"parentName\": \"string\"\n        },\n        \"building\": {\n          \"name\": \"string\",\n          \"address\": \"string\"\n        },\n        \"floor\": {\n          \"name\": \"string\",\n          \"parentName\": \"string\"\n        }\n      },\n      \"templateParam\": {\n        \"nfvis\": {\n          \"var1\": \"string\"\n        },\n        \"asav\": {\n          \"var1\": \"string\"\n        }\n      },\n      \"networksettings\": {\n        \"ipPool\": {\n          \"globalPool\": {\n            \"name\": \"string\"\n          }\n        }\n      },\n      \"device\": [\n        {\n          \"ip\": \"string\",\n          \"deviceSerialNumber\": \"string\",\n          \"tagName\": \"string\",\n          \"serviceProviders\": [\n            {\n              \"serviceProvider\": \"string\",\n              \"wanInterface\": {\n                \"ipAddress\": \"string\",\n                \"interfaceName\": \"string\",\n                \"subnetmask\": \"string\",\n                \"bandwidth\": \"string\",\n                \"gateway\": \"string\"\n              }\n            }\n          ],\n          \"services\": [\n            {\n              \"type\": \"string\",\n              \"mode\": \"string\",\n              \"systemIp\": \"string\",\n              \"centralManagerIP\": \"string\",\n              \"centralRegistrationKey\": \"string\",\n              \"commonKey\": \"string\",\n              \"adminPasswordHash\": \"string\"\n            }\n          ],\n          \"vlan\": [\n            {\n              \"type\": \"string\",\n              \"id\": \"string\",\n              \"interfaces\": \"string\",\n              \"network\": \"string\"\n            }\n          ],\n          \"subPools\": [\n            {\n              \"type\": \"string\",\n              \"name\": \"string\",\n              \"ipSubnet\": \"string\",\n              \"gateway\": \"string\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{dnac}}:{{port}}/dna/intent/api/v1/provision-nfv",
											"protocol": "https",
											"host": [
												"{{dnac}}"
											],
											"port": "{{port}}",
											"path": [
												"dna",
												"intent",
												"api",
												"v1",
												"provision-nfv"
											]
										},
										"description": "Design and Provision single/multi NFV device with given site/area/building/floor information.\n\n###### Request Model\n- root: (map, required)\n  - siteProfile: (array[map], required)\n    - siteProfileName: (string, required) Site Profile Name\n    - device: (array[map], required)\n      - deviceType: (enum[\"ENCS5100\",\"ENCS5400\"], required) Device Type\n      - tagName: (string, required) Tag Name\n      - serviceProviders: (array[map], required)\n        - serviceProvider: (string, required) Service Provider\n        - linkType: (enum[\"GigabitEthernet\"], required) Link Type\n        - connect: (boolean, required) Connect\n        - defaultGateway: (boolean, required) Default Gateway\n      - dia: (boolean, required) Dia\n      - services: (array[map], required)\n        - type: (enum[\"isr\",\"vedge\",\"waas\",\"asa\",\"ngfw\",\"paloalto\",\"fortinet\",\"checkpoint\",\"riverbed\",\"silverpeak\"], required) Type\n        - profile: (string, required) Profile\n        - mode: (string, optional) Mode\n      - customServices: (array[map], required)\n        - name: (string, required) Name\n        - applicationType: (string, required) Application Type\n        - profile: (string, required) Profile\n      - customNetworks: (array[map], optional)\n        - name: (string, required) Name\n        - servicesToConnect: (array[map], required)\n          - service: (string, required) Service\n      - vlan: (array[map], optional)\n        - type: (string, required) Type\n        - id: (string, required) Id\n    - customTemplate: (array[map], optional)\n      - deviceType: (enum[\"NFVIS\",\"ASAv\"], required) Device Type\n      - template: (string, required) Template\n  - provisioning: (array[map], required)\n    - site: (map, required)\n      - siteProfileName: (string, required) Site Profile Name\n      - area: (map, required)\n        - name: (string, required) Name\n        - parentName: (string, required) Parent Name\n      - building: (map, required)\n        - name: (string, required) Name\n        - address: (string, required) Address\n      - floor: (map, optional)\n        - name: (string, required) Name\n        - parentName: (string, required) Parent Name\n    - templateParam: (map, optional)\n      - nfvis: (map, optional)\n        - var1: (string, optional) Var1\n      - asav: (map, optional)\n        - var1: (string, optional) Var1\n    - networksettings: (map, required)\n      - ipPool: (map, required)\n        - globalPool: (map, required)\n          - name: (string, required) Name\n    - device: (array[map], required)\n      - ip: (string, optional) Ip\n      - deviceSerialNumber: (string, optional) Device Serial Number\n      - tagName: (string, required) Tag Name\n      - serviceProviders: (array[map], required)\n        - serviceProvider: (string, required) Service Provider\n        - wanInterface: (map, optional)\n          - ipAddress: (string, required) Ip Address\n          - interfaceName: (string, required) Interface Name\n          - subnetmask: (string, required) Subnetmask\n          - bandwidth: (string, required) Bandwidth\n          - gateway: (string, required) Gateway\n      - services: (array[map], required)\n        - type: (string, required) Type\n        - mode: (string, optional) Mode\n        - systemIp: (string, optional) System Ip\n        - centralManagerIP: (string, optional) Central Manager IP\n        - centralRegistrationKey: (string, optional) Central Registration Key\n        - commonKey: (string, optional) Common Key\n        - adminPasswordHash: (string, optional) Admin Password Hash\n      - vlan: (array[map], optional)\n        - type: (string, required) Type\n        - id: (string, required) Id\n        - interfaces: (string, required) Interfaces\n        - network: (string, optional) Network\n      - subPools: (array[map], required)\n        - type: (enum[\"Lan\",\"Management\",\"Service\",\"Wan\",\"Generic\"], required) Type\n        - name: (string, required) Name\n        - ipSubnet: (string, required) Ip Subnet\n        - gateway: (string, required) Gateway\n\n###### Response Model\n- root: (map, optional)\n  - executionId: (string, optional) Execution Id\n  - executionStatusUrl: (string, optional) Execution Status Url\n  - message: (string, optional) Message"
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n  \"executionId\": \"string\",\n  \"executionStatusUrl\": \"string\",\n  \"message\": \"string\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}